// Compiled by ClojureScript 0.0-2913 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2913";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__5941__delegate = function (args){
return console.log.apply(console,(function (){var G__5940 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__5940) : cljs.core.into_array.call(null,G__5940));
})());
};
var G__5941 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__5942__i = 0, G__5942__a = new Array(arguments.length -  0);
while (G__5942__i < G__5942__a.length) {G__5942__a[G__5942__i] = arguments[G__5942__i + 0]; ++G__5942__i;}
  args = new cljs.core.IndexedSeq(G__5942__a,0);
} 
return G__5941__delegate.call(this,args);};
G__5941.cljs$lang$maxFixedArity = 0;
G__5941.cljs$lang$applyTo = (function (arglist__5943){
var args = cljs.core.seq(arglist__5943);
return G__5941__delegate(args);
});
G__5941.cljs$core$IFn$_invoke$arity$variadic = G__5941__delegate;
return G__5941;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__5945 = x;
return goog.isString(G__5945);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__5947 = x__$1;
return goog.typeOf(G__5947);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__3972__auto__ = ty;
if(cljs.core.truth_(and__3972__auto__)){
return ty.cljs$lang$type;
} else {
return and__3972__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__5949 = obj;
return goog.typeOf(G__5949);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__5951 = Symbol;
return goog.typeOf(G__5951);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__4871__auto___5953 = len;
var i_5954 = (0);
while(true){
if((i_5954 < n__4871__auto___5953)){
(new_arr[i_5954] = (arr[i_5954]));

var G__5955 = (i_5954 + (1));
i_5954 = G__5955;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__5956 = (i + (1));
i = G__5956;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__5965__delegate = function (array,i,idxs){
var G__5962 = aget;
var G__5963 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__5964 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__5962,G__5963,G__5964) : cljs.core.apply.call(null,G__5962,G__5963,G__5964));
};
var G__5965 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__5966__i = 0, G__5966__a = new Array(arguments.length -  2);
while (G__5966__i < G__5966__a.length) {G__5966__a[G__5966__i] = arguments[G__5966__i + 2]; ++G__5966__i;}
  idxs = new cljs.core.IndexedSeq(G__5966__a,0);
} 
return G__5965__delegate.call(this,array,i,idxs);};
G__5965.cljs$lang$maxFixedArity = 2;
G__5965.cljs$lang$applyTo = (function (arglist__5967){
var array = cljs.core.first(arglist__5967);
arglist__5967 = cljs.core.next(arglist__5967);
var i = cljs.core.first(arglist__5967);
var idxs = cljs.core.rest(arglist__5967);
return G__5965__delegate(array,i,idxs);
});
G__5965.cljs$core$IFn$_invoke$arity$variadic = G__5965__delegate;
return G__5965;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__5968 = null;
if (arguments.length > 2) {
var G__5969__i = 0, G__5969__a = new Array(arguments.length -  2);
while (G__5969__i < G__5969__a.length) {G__5969__a[G__5969__i] = arguments[G__5969__i + 2]; ++G__5969__i;}
G__5968 = new cljs.core.IndexedSeq(G__5969__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__5968);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__5978__delegate = function (array,idx,idx2,idxv){
var G__5974 = aset;
var G__5975 = (array[idx]);
var G__5976 = idx2;
var G__5977 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__5974,G__5975,G__5976,G__5977) : cljs.core.apply.call(null,G__5974,G__5975,G__5976,G__5977));
};
var G__5978 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__5979__i = 0, G__5979__a = new Array(arguments.length -  3);
while (G__5979__i < G__5979__a.length) {G__5979__a[G__5979__i] = arguments[G__5979__i + 3]; ++G__5979__i;}
  idxv = new cljs.core.IndexedSeq(G__5979__a,0);
} 
return G__5978__delegate.call(this,array,idx,idx2,idxv);};
G__5978.cljs$lang$maxFixedArity = 3;
G__5978.cljs$lang$applyTo = (function (arglist__5980){
var array = cljs.core.first(arglist__5980);
arglist__5980 = cljs.core.next(arglist__5980);
var idx = cljs.core.first(arglist__5980);
arglist__5980 = cljs.core.next(arglist__5980);
var idx2 = cljs.core.first(arglist__5980);
var idxv = cljs.core.rest(arglist__5980);
return G__5978__delegate(array,idx,idx2,idxv);
});
G__5978.cljs$core$IFn$_invoke$arity$variadic = G__5978__delegate;
return G__5978;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__5981 = null;
if (arguments.length > 3) {
var G__5982__i = 0, G__5982__a = new Array(arguments.length -  3);
while (G__5982__i < G__5982__a.length) {G__5982__a[G__5982__i] = arguments[G__5982__i + 3]; ++G__5982__i;}
G__5981 = new cljs.core.IndexedSeq(G__5982__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__5981);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__5988 = (function (a,x){
a.push(x);

return a;
});
var G__5989 = [];
var G__5990 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__5988,G__5989,G__5990) : cljs.core.reduce.call(null,G__5988,G__5989,G__5990));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__5991__i = 0, G__5991__a = new Array(arguments.length -  2);
while (G__5991__i < G__5991__a.length) {G__5991__a[G__5991__i] = arguments[G__5991__i + 2]; ++G__5991__i;}
  args = new cljs.core.IndexedSeq(G__5991__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__5992){
var obj = cljs.core.first(arglist__5992);
arglist__5992 = cljs.core.next(arglist__5992);
var s = cljs.core.first(arglist__5992);
var args = cljs.core.rest(arglist__5992);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj5994 = {};
return obj5994;
})();


cljs.core.IFn = (function (){var obj5996 = {};
return obj5996;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__3972__auto__ = this$;
if(and__3972__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__3972__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__4628__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3984__auto__ = (cljs.core._invoke[(function (){var G__6042 = x__4628__auto__;
return goog.typeOf(G__6042);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._invoke["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__3972__auto__ = this$;
if(and__3972__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__3972__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__4628__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3984__auto__ = (cljs.core._invoke[(function (){var G__6044 = x__4628__auto__;
return goog.typeOf(G__6044);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._invoke["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__3972__auto__ = this$;
if(and__3972__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__3972__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__4628__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3984__auto__ = (cljs.core._invoke[(function (){var G__6046 = x__4628__auto__;
return goog.typeOf(G__6046);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._invoke["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__3972__auto__ = this$;
if(and__3972__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__3972__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__4628__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3984__auto__ = (cljs.core._invoke[(function (){var G__6048 = x__4628__auto__;
return goog.typeOf(G__6048);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._invoke["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__3972__auto__ = this$;
if(and__3972__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__3972__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__4628__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3984__auto__ = (cljs.core._invoke[(function (){var G__6050 = x__4628__auto__;
return goog.typeOf(G__6050);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._invoke["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__3972__auto__ = this$;
if(and__3972__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__3972__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__4628__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3984__auto__ = (cljs.core._invoke[(function (){var G__6052 = x__4628__auto__;
return goog.typeOf(G__6052);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._invoke["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__3972__auto__ = this$;
if(and__3972__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__3972__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__4628__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3984__auto__ = (cljs.core._invoke[(function (){var G__6054 = x__4628__auto__;
return goog.typeOf(G__6054);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._invoke["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__3972__auto__ = this$;
if(and__3972__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__3972__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__4628__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3984__auto__ = (cljs.core._invoke[(function (){var G__6056 = x__4628__auto__;
return goog.typeOf(G__6056);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._invoke["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__3972__auto__ = this$;
if(and__3972__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__3972__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__4628__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3984__auto__ = (cljs.core._invoke[(function (){var G__6058 = x__4628__auto__;
return goog.typeOf(G__6058);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._invoke["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__3972__auto__ = this$;
if(and__3972__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__3972__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__4628__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3984__auto__ = (cljs.core._invoke[(function (){var G__6060 = x__4628__auto__;
return goog.typeOf(G__6060);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._invoke["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__3972__auto__ = this$;
if(and__3972__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__3972__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__4628__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3984__auto__ = (cljs.core._invoke[(function (){var G__6062 = x__4628__auto__;
return goog.typeOf(G__6062);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._invoke["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__3972__auto__ = this$;
if(and__3972__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__3972__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__4628__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3984__auto__ = (cljs.core._invoke[(function (){var G__6064 = x__4628__auto__;
return goog.typeOf(G__6064);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._invoke["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__3972__auto__ = this$;
if(and__3972__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__3972__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__4628__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3984__auto__ = (cljs.core._invoke[(function (){var G__6066 = x__4628__auto__;
return goog.typeOf(G__6066);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._invoke["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__3972__auto__ = this$;
if(and__3972__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__3972__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__4628__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3984__auto__ = (cljs.core._invoke[(function (){var G__6068 = x__4628__auto__;
return goog.typeOf(G__6068);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._invoke["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__3972__auto__ = this$;
if(and__3972__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__3972__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__4628__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3984__auto__ = (cljs.core._invoke[(function (){var G__6070 = x__4628__auto__;
return goog.typeOf(G__6070);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._invoke["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__3972__auto__ = this$;
if(and__3972__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__3972__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__4628__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3984__auto__ = (cljs.core._invoke[(function (){var G__6072 = x__4628__auto__;
return goog.typeOf(G__6072);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._invoke["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__3972__auto__ = this$;
if(and__3972__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__3972__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__4628__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3984__auto__ = (cljs.core._invoke[(function (){var G__6074 = x__4628__auto__;
return goog.typeOf(G__6074);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._invoke["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__3972__auto__ = this$;
if(and__3972__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__3972__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__4628__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3984__auto__ = (cljs.core._invoke[(function (){var G__6076 = x__4628__auto__;
return goog.typeOf(G__6076);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._invoke["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__3972__auto__ = this$;
if(and__3972__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__3972__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__4628__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3984__auto__ = (cljs.core._invoke[(function (){var G__6078 = x__4628__auto__;
return goog.typeOf(G__6078);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._invoke["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__3972__auto__ = this$;
if(and__3972__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__3972__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__4628__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3984__auto__ = (cljs.core._invoke[(function (){var G__6080 = x__4628__auto__;
return goog.typeOf(G__6080);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._invoke["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__3972__auto__ = this$;
if(and__3972__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__3972__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__4628__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3984__auto__ = (cljs.core._invoke[(function (){var G__6082 = x__4628__auto__;
return goog.typeOf(G__6082);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._invoke["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__3972__auto__ = this$;
if(and__3972__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__3972__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__4628__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3984__auto__ = (cljs.core._invoke[(function (){var G__6084 = x__4628__auto__;
return goog.typeOf(G__6084);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._invoke["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj6086 = {};
return obj6086;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__3972__auto__ = value;
if(and__3972__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__3972__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__4628__auto__ = (((value == null))?null:value);
return (function (){var or__3984__auto__ = (cljs.core._clone[(function (){var G__6090 = x__4628__auto__;
return goog.typeOf(G__6090);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._clone["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj6092 = {};
return obj6092;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__3972__auto__ = coll;
if(and__3972__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__3972__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__4628__auto__ = (((coll == null))?null:coll);
return (function (){var or__3984__auto__ = (cljs.core._count[(function (){var G__6096 = x__4628__auto__;
return goog.typeOf(G__6096);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._count["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj6098 = {};
return obj6098;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__3972__auto__ = coll;
if(and__3972__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__3972__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__4628__auto__ = (((coll == null))?null:coll);
return (function (){var or__3984__auto__ = (cljs.core._empty[(function (){var G__6102 = x__4628__auto__;
return goog.typeOf(G__6102);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._empty["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj6104 = {};
return obj6104;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__3972__auto__ = coll;
if(and__3972__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__3972__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__4628__auto__ = (((coll == null))?null:coll);
return (function (){var or__3984__auto__ = (cljs.core._conj[(function (){var G__6108 = x__4628__auto__;
return goog.typeOf(G__6108);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._conj["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj6110 = {};
return obj6110;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__3972__auto__ = coll;
if(and__3972__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__3972__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__4628__auto__ = (((coll == null))?null:coll);
return (function (){var or__3984__auto__ = (cljs.core._nth[(function (){var G__6116 = x__4628__auto__;
return goog.typeOf(G__6116);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._nth["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__3972__auto__ = coll;
if(and__3972__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__3972__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__4628__auto__ = (((coll == null))?null:coll);
return (function (){var or__3984__auto__ = (cljs.core._nth[(function (){var G__6118 = x__4628__auto__;
return goog.typeOf(G__6118);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._nth["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj6120 = {};
return obj6120;
})();


cljs.core.ISeq = (function (){var obj6122 = {};
return obj6122;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__3972__auto__ = coll;
if(and__3972__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__3972__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__4628__auto__ = (((coll == null))?null:coll);
return (function (){var or__3984__auto__ = (cljs.core._first[(function (){var G__6126 = x__4628__auto__;
return goog.typeOf(G__6126);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._first["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__3972__auto__ = coll;
if(and__3972__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__3972__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__4628__auto__ = (((coll == null))?null:coll);
return (function (){var or__3984__auto__ = (cljs.core._rest[(function (){var G__6130 = x__4628__auto__;
return goog.typeOf(G__6130);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._rest["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj6132 = {};
return obj6132;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__3972__auto__ = coll;
if(and__3972__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__3972__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__4628__auto__ = (((coll == null))?null:coll);
return (function (){var or__3984__auto__ = (cljs.core._next[(function (){var G__6136 = x__4628__auto__;
return goog.typeOf(G__6136);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._next["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj6138 = {};
return obj6138;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__3972__auto__ = o;
if(and__3972__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__3972__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__4628__auto__ = (((o == null))?null:o);
return (function (){var or__3984__auto__ = (cljs.core._lookup[(function (){var G__6144 = x__4628__auto__;
return goog.typeOf(G__6144);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._lookup["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__3972__auto__ = o;
if(and__3972__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__3972__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__4628__auto__ = (((o == null))?null:o);
return (function (){var or__3984__auto__ = (cljs.core._lookup[(function (){var G__6146 = x__4628__auto__;
return goog.typeOf(G__6146);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._lookup["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj6148 = {};
return obj6148;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__3972__auto__ = coll;
if(and__3972__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__3972__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__4628__auto__ = (((coll == null))?null:coll);
return (function (){var or__3984__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__6152 = x__4628__auto__;
return goog.typeOf(G__6152);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__3972__auto__ = coll;
if(and__3972__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__3972__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__4628__auto__ = (((coll == null))?null:coll);
return (function (){var or__3984__auto__ = (cljs.core._assoc[(function (){var G__6156 = x__4628__auto__;
return goog.typeOf(G__6156);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._assoc["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj6158 = {};
return obj6158;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__3972__auto__ = coll;
if(and__3972__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__3972__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__4628__auto__ = (((coll == null))?null:coll);
return (function (){var or__3984__auto__ = (cljs.core._dissoc[(function (){var G__6162 = x__4628__auto__;
return goog.typeOf(G__6162);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._dissoc["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj6164 = {};
return obj6164;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__3972__auto__ = coll;
if(and__3972__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__3972__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__4628__auto__ = (((coll == null))?null:coll);
return (function (){var or__3984__auto__ = (cljs.core._key[(function (){var G__6168 = x__4628__auto__;
return goog.typeOf(G__6168);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._key["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__3972__auto__ = coll;
if(and__3972__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__3972__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__4628__auto__ = (((coll == null))?null:coll);
return (function (){var or__3984__auto__ = (cljs.core._val[(function (){var G__6172 = x__4628__auto__;
return goog.typeOf(G__6172);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._val["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj6174 = {};
return obj6174;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__3972__auto__ = coll;
if(and__3972__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__3972__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__4628__auto__ = (((coll == null))?null:coll);
return (function (){var or__3984__auto__ = (cljs.core._disjoin[(function (){var G__6178 = x__4628__auto__;
return goog.typeOf(G__6178);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._disjoin["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj6180 = {};
return obj6180;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__3972__auto__ = coll;
if(and__3972__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__3972__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__4628__auto__ = (((coll == null))?null:coll);
return (function (){var or__3984__auto__ = (cljs.core._peek[(function (){var G__6184 = x__4628__auto__;
return goog.typeOf(G__6184);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._peek["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__3972__auto__ = coll;
if(and__3972__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__3972__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__4628__auto__ = (((coll == null))?null:coll);
return (function (){var or__3984__auto__ = (cljs.core._pop[(function (){var G__6188 = x__4628__auto__;
return goog.typeOf(G__6188);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._pop["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj6190 = {};
return obj6190;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__3972__auto__ = coll;
if(and__3972__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__3972__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__4628__auto__ = (((coll == null))?null:coll);
return (function (){var or__3984__auto__ = (cljs.core._assoc_n[(function (){var G__6194 = x__4628__auto__;
return goog.typeOf(G__6194);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj6196 = {};
return obj6196;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__3972__auto__ = o;
if(and__3972__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__3972__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__4628__auto__ = (((o == null))?null:o);
return (function (){var or__3984__auto__ = (cljs.core._deref[(function (){var G__6200 = x__4628__auto__;
return goog.typeOf(G__6200);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._deref["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj6202 = {};
return obj6202;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__3972__auto__ = o;
if(and__3972__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__3972__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__4628__auto__ = (((o == null))?null:o);
return (function (){var or__3984__auto__ = (cljs.core._deref_with_timeout[(function (){var G__6206 = x__4628__auto__;
return goog.typeOf(G__6206);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj6208 = {};
return obj6208;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__3972__auto__ = o;
if(and__3972__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__3972__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__4628__auto__ = (((o == null))?null:o);
return (function (){var or__3984__auto__ = (cljs.core._meta[(function (){var G__6212 = x__4628__auto__;
return goog.typeOf(G__6212);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._meta["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj6214 = {};
return obj6214;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__3972__auto__ = o;
if(and__3972__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__3972__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__4628__auto__ = (((o == null))?null:o);
return (function (){var or__3984__auto__ = (cljs.core._with_meta[(function (){var G__6218 = x__4628__auto__;
return goog.typeOf(G__6218);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._with_meta["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj6220 = {};
return obj6220;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__3972__auto__ = coll;
if(and__3972__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__3972__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__4628__auto__ = (((coll == null))?null:coll);
return (function (){var or__3984__auto__ = (cljs.core._reduce[(function (){var G__6226 = x__4628__auto__;
return goog.typeOf(G__6226);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._reduce["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__3972__auto__ = coll;
if(and__3972__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__3972__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__4628__auto__ = (((coll == null))?null:coll);
return (function (){var or__3984__auto__ = (cljs.core._reduce[(function (){var G__6228 = x__4628__auto__;
return goog.typeOf(G__6228);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._reduce["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj6230 = {};
return obj6230;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__3972__auto__ = coll;
if(and__3972__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__3972__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__4628__auto__ = (((coll == null))?null:coll);
return (function (){var or__3984__auto__ = (cljs.core._kv_reduce[(function (){var G__6234 = x__4628__auto__;
return goog.typeOf(G__6234);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj6236 = {};
return obj6236;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__3972__auto__ = o;
if(and__3972__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__3972__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__4628__auto__ = (((o == null))?null:o);
return (function (){var or__3984__auto__ = (cljs.core._equiv[(function (){var G__6240 = x__4628__auto__;
return goog.typeOf(G__6240);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._equiv["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj6242 = {};
return obj6242;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__3972__auto__ = o;
if(and__3972__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__3972__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__4628__auto__ = (((o == null))?null:o);
return (function (){var or__3984__auto__ = (cljs.core._hash[(function (){var G__6246 = x__4628__auto__;
return goog.typeOf(G__6246);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._hash["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj6248 = {};
return obj6248;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__3972__auto__ = o;
if(and__3972__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__3972__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__4628__auto__ = (((o == null))?null:o);
return (function (){var or__3984__auto__ = (cljs.core._seq[(function (){var G__6252 = x__4628__auto__;
return goog.typeOf(G__6252);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._seq["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj6254 = {};
return obj6254;
})();


cljs.core.IList = (function (){var obj6256 = {};
return obj6256;
})();


cljs.core.IRecord = (function (){var obj6258 = {};
return obj6258;
})();


cljs.core.IReversible = (function (){var obj6260 = {};
return obj6260;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__3972__auto__ = coll;
if(and__3972__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__3972__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__4628__auto__ = (((coll == null))?null:coll);
return (function (){var or__3984__auto__ = (cljs.core._rseq[(function (){var G__6264 = x__4628__auto__;
return goog.typeOf(G__6264);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._rseq["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj6266 = {};
return obj6266;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__3972__auto__ = coll;
if(and__3972__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__3972__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__4628__auto__ = (((coll == null))?null:coll);
return (function (){var or__3984__auto__ = (cljs.core._sorted_seq[(function (){var G__6270 = x__4628__auto__;
return goog.typeOf(G__6270);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__3972__auto__ = coll;
if(and__3972__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__3972__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__4628__auto__ = (((coll == null))?null:coll);
return (function (){var or__3984__auto__ = (cljs.core._sorted_seq_from[(function (){var G__6274 = x__4628__auto__;
return goog.typeOf(G__6274);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__3972__auto__ = coll;
if(and__3972__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__3972__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__4628__auto__ = (((coll == null))?null:coll);
return (function (){var or__3984__auto__ = (cljs.core._entry_key[(function (){var G__6278 = x__4628__auto__;
return goog.typeOf(G__6278);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._entry_key["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__3972__auto__ = coll;
if(and__3972__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__3972__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__4628__auto__ = (((coll == null))?null:coll);
return (function (){var or__3984__auto__ = (cljs.core._comparator[(function (){var G__6282 = x__4628__auto__;
return goog.typeOf(G__6282);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._comparator["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj6284 = {};
return obj6284;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__3972__auto__ = writer;
if(and__3972__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__3972__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__4628__auto__ = (((writer == null))?null:writer);
return (function (){var or__3984__auto__ = (cljs.core._write[(function (){var G__6288 = x__4628__auto__;
return goog.typeOf(G__6288);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._write["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__3972__auto__ = writer;
if(and__3972__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__3972__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__4628__auto__ = (((writer == null))?null:writer);
return (function (){var or__3984__auto__ = (cljs.core._flush[(function (){var G__6292 = x__4628__auto__;
return goog.typeOf(G__6292);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._flush["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj6294 = {};
return obj6294;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__3972__auto__ = o;
if(and__3972__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__3972__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__4628__auto__ = (((o == null))?null:o);
return (function (){var or__3984__auto__ = (cljs.core._pr_writer[(function (){var G__6298 = x__4628__auto__;
return goog.typeOf(G__6298);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj6300 = {};
return obj6300;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__3972__auto__ = d;
if(and__3972__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__3972__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__4628__auto__ = (((d == null))?null:d);
return (function (){var or__3984__auto__ = (cljs.core._realized_QMARK_[(function (){var G__6304 = x__4628__auto__;
return goog.typeOf(G__6304);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj6306 = {};
return obj6306;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__3972__auto__ = this$;
if(and__3972__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__3972__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__4628__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3984__auto__ = (cljs.core._notify_watches[(function (){var G__6310 = x__4628__auto__;
return goog.typeOf(G__6310);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__3972__auto__ = this$;
if(and__3972__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__3972__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__4628__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3984__auto__ = (cljs.core._add_watch[(function (){var G__6314 = x__4628__auto__;
return goog.typeOf(G__6314);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._add_watch["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__3972__auto__ = this$;
if(and__3972__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__3972__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__4628__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3984__auto__ = (cljs.core._remove_watch[(function (){var G__6318 = x__4628__auto__;
return goog.typeOf(G__6318);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj6320 = {};
return obj6320;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__3972__auto__ = coll;
if(and__3972__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__3972__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__4628__auto__ = (((coll == null))?null:coll);
return (function (){var or__3984__auto__ = (cljs.core._as_transient[(function (){var G__6324 = x__4628__auto__;
return goog.typeOf(G__6324);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._as_transient["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj6326 = {};
return obj6326;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__3972__auto__ = tcoll;
if(and__3972__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__3972__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__4628__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3984__auto__ = (cljs.core._conj_BANG_[(function (){var G__6330 = x__4628__auto__;
return goog.typeOf(G__6330);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__3972__auto__ = tcoll;
if(and__3972__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__3972__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__4628__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3984__auto__ = (cljs.core._persistent_BANG_[(function (){var G__6334 = x__4628__auto__;
return goog.typeOf(G__6334);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj6336 = {};
return obj6336;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__3972__auto__ = tcoll;
if(and__3972__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__3972__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__4628__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3984__auto__ = (cljs.core._assoc_BANG_[(function (){var G__6340 = x__4628__auto__;
return goog.typeOf(G__6340);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj6342 = {};
return obj6342;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__3972__auto__ = tcoll;
if(and__3972__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__3972__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__4628__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3984__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__6346 = x__4628__auto__;
return goog.typeOf(G__6346);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj6348 = {};
return obj6348;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__3972__auto__ = tcoll;
if(and__3972__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__3972__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__4628__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3984__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__6352 = x__4628__auto__;
return goog.typeOf(G__6352);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__3972__auto__ = tcoll;
if(and__3972__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__3972__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__4628__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3984__auto__ = (cljs.core._pop_BANG_[(function (){var G__6356 = x__4628__auto__;
return goog.typeOf(G__6356);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj6358 = {};
return obj6358;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__3972__auto__ = tcoll;
if(and__3972__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__3972__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__4628__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3984__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__6362 = x__4628__auto__;
return goog.typeOf(G__6362);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj6364 = {};
return obj6364;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__3972__auto__ = x;
if(and__3972__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__3972__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__4628__auto__ = (((x == null))?null:x);
return (function (){var or__3984__auto__ = (cljs.core._compare[(function (){var G__6368 = x__4628__auto__;
return goog.typeOf(G__6368);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._compare["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj6370 = {};
return obj6370;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__3972__auto__ = coll;
if(and__3972__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__3972__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__4628__auto__ = (((coll == null))?null:coll);
return (function (){var or__3984__auto__ = (cljs.core._drop_first[(function (){var G__6374 = x__4628__auto__;
return goog.typeOf(G__6374);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._drop_first["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj6376 = {};
return obj6376;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__3972__auto__ = coll;
if(and__3972__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__3972__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__4628__auto__ = (((coll == null))?null:coll);
return (function (){var or__3984__auto__ = (cljs.core._chunked_first[(function (){var G__6380 = x__4628__auto__;
return goog.typeOf(G__6380);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__3972__auto__ = coll;
if(and__3972__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__3972__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__4628__auto__ = (((coll == null))?null:coll);
return (function (){var or__3984__auto__ = (cljs.core._chunked_rest[(function (){var G__6384 = x__4628__auto__;
return goog.typeOf(G__6384);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj6386 = {};
return obj6386;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__3972__auto__ = coll;
if(and__3972__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__3972__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__4628__auto__ = (((coll == null))?null:coll);
return (function (){var or__3984__auto__ = (cljs.core._chunked_next[(function (){var G__6390 = x__4628__auto__;
return goog.typeOf(G__6390);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj6392 = {};
return obj6392;
})();

cljs.core._name = (function _name(x){
if((function (){var and__3972__auto__ = x;
if(and__3972__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__3972__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__4628__auto__ = (((x == null))?null:x);
return (function (){var or__3984__auto__ = (cljs.core._name[(function (){var G__6396 = x__4628__auto__;
return goog.typeOf(G__6396);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._name["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__3972__auto__ = x;
if(and__3972__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__3972__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__4628__auto__ = (((x == null))?null:x);
return (function (){var or__3984__auto__ = (cljs.core._namespace[(function (){var G__6400 = x__4628__auto__;
return goog.typeOf(G__6400);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._namespace["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj6402 = {};
return obj6402;
})();


cljs.core.IReset = (function (){var obj6404 = {};
return obj6404;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__3972__auto__ = o;
if(and__3972__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__3972__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__4628__auto__ = (((o == null))?null:o);
return (function (){var or__3984__auto__ = (cljs.core._reset_BANG_[(function (){var G__6408 = x__4628__auto__;
return goog.typeOf(G__6408);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj6410 = {};
return obj6410;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__3972__auto__ = o;
if(and__3972__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__3972__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__4628__auto__ = (((o == null))?null:o);
return (function (){var or__3984__auto__ = (cljs.core._swap_BANG_[(function (){var G__6420 = x__4628__auto__;
return goog.typeOf(G__6420);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__3972__auto__ = o;
if(and__3972__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__3972__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__4628__auto__ = (((o == null))?null:o);
return (function (){var or__3984__auto__ = (cljs.core._swap_BANG_[(function (){var G__6422 = x__4628__auto__;
return goog.typeOf(G__6422);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__3972__auto__ = o;
if(and__3972__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__3972__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__4628__auto__ = (((o == null))?null:o);
return (function (){var or__3984__auto__ = (cljs.core._swap_BANG_[(function (){var G__6424 = x__4628__auto__;
return goog.typeOf(G__6424);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__3972__auto__ = o;
if(and__3972__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__3972__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__4628__auto__ = (((o == null))?null:o);
return (function (){var or__3984__auto__ = (cljs.core._swap_BANG_[(function (){var G__6426 = x__4628__auto__;
return goog.typeOf(G__6426);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj6428 = {};
return obj6428;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__3972__auto__ = o;
if(and__3972__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__3972__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__4628__auto__ = (((o == null))?null:o);
return (function (){var or__3984__auto__ = (cljs.core._vreset_BANG_[(function (){var G__6432 = x__4628__auto__;
return goog.typeOf(G__6432);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj6434 = {};
return obj6434;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__3972__auto__ = coll;
if(and__3972__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__3972__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__4628__auto__ = (((coll == null))?null:coll);
return (function (){var or__3984__auto__ = (cljs.core._iterator[(function (){var G__6438 = x__4628__auto__;
return goog.typeOf(G__6438);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._iterator["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__6441 = (4294967295);
var G__6442 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__6441,G__6442) : Math.imul.call(null,G__6441,G__6442));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__6445 = a;
var G__6446 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__6445,G__6446) : Math.imul.call(null,G__6445,G__6446));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__6447 = (i + (2));
var G__6448 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__6447;
h1 = G__6448;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj6450 = {};
return obj6450;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__6451 = (i + (1));
var G__6452 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__6451;
hash = G__6452;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj6456 = {};
return obj6456;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__6459 = o;
if(G__6459){
var bit__4658__auto__ = (G__6459.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__4658__auto__) || (G__6459.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__6460 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__6460) : Math.floor.call(null,G__6460));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3972__auto__ = cljs.core.not(a.ns);
if(and__3972__auto__){
return b.ns;
} else {
return and__3972__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__6467 = a.ns;
var G__6468 = b.ns;
return goog.array.defaultCompare(G__6467,G__6468);
})();
if(((0) === nsc)){
var G__6469 = a.name;
var G__6470 = b.name;
return goog.array.defaultCompare(G__6469,G__6470);
} else {
return nsc;
}
}
} else {
var G__6471 = a.name;
var G__6472 = b.name;
return goog.array.defaultCompare(G__6471,G__6472);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__4405__auto__ = self__._hash;
if(!((h__4405__auto__ == null))){
return h__4405__auto__;
} else {
var h__4405__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__4405__auto____$1;

return h__4405__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__6474 = null;
var G__6474__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__6474__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__6474 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__6474__2.call(this,self__,coll);
case 3:
return G__6474__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__6474.cljs$core$IFn$_invoke$arity$2 = G__6474__2;
G__6474.cljs$core$IFn$_invoke$arity$3 = G__6474__3;
return G__6474;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args6473){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args6473)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__6522 = null;
var G__6522__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__6522__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__6522__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__6522__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__6522__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__6522__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__6522__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__6522__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__6522__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__6522__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__6522__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__6522__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__6522__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__6522__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__6522__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__6522__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__6522__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__6522__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__6522__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__6522__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__6522__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__6522__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6478 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__6479 = a;
var G__6480 = b;
var G__6481 = c;
var G__6482 = d;
var G__6483 = e;
var G__6484 = f;
var G__6485 = g;
var G__6486 = h;
var G__6487 = i;
var G__6488 = j;
var G__6489 = k;
var G__6490 = l;
var G__6491 = m;
var G__6492 = n;
var G__6493 = o;
var G__6494 = p;
var G__6495 = q;
var G__6496 = r;
var G__6497 = s;
var G__6498 = t;
var G__6499 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__6478,G__6479,G__6480,G__6481,G__6482,G__6483,G__6484,G__6485,G__6486,G__6487,G__6488,G__6489,G__6490,G__6491,G__6492,G__6493,G__6494,G__6495,G__6496,G__6497,G__6498,G__6499) : cljs.core.apply.call(null,G__6478,G__6479,G__6480,G__6481,G__6482,G__6483,G__6484,G__6485,G__6486,G__6487,G__6488,G__6489,G__6490,G__6491,G__6492,G__6493,G__6494,G__6495,G__6496,G__6497,G__6498,G__6499));
});
G__6522 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__6522__1.call(this,self__);
case 2:
return G__6522__2.call(this,self__,a);
case 3:
return G__6522__3.call(this,self__,a,b);
case 4:
return G__6522__4.call(this,self__,a,b,c);
case 5:
return G__6522__5.call(this,self__,a,b,c,d);
case 6:
return G__6522__6.call(this,self__,a,b,c,d,e);
case 7:
return G__6522__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__6522__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__6522__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__6522__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__6522__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__6522__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__6522__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__6522__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__6522__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__6522__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__6522__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__6522__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__6522__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__6522__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__6522__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__6522__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__6522.cljs$core$IFn$_invoke$arity$1 = G__6522__1;
G__6522.cljs$core$IFn$_invoke$arity$2 = G__6522__2;
G__6522.cljs$core$IFn$_invoke$arity$3 = G__6522__3;
G__6522.cljs$core$IFn$_invoke$arity$4 = G__6522__4;
G__6522.cljs$core$IFn$_invoke$arity$5 = G__6522__5;
G__6522.cljs$core$IFn$_invoke$arity$6 = G__6522__6;
G__6522.cljs$core$IFn$_invoke$arity$7 = G__6522__7;
G__6522.cljs$core$IFn$_invoke$arity$8 = G__6522__8;
G__6522.cljs$core$IFn$_invoke$arity$9 = G__6522__9;
G__6522.cljs$core$IFn$_invoke$arity$10 = G__6522__10;
G__6522.cljs$core$IFn$_invoke$arity$11 = G__6522__11;
G__6522.cljs$core$IFn$_invoke$arity$12 = G__6522__12;
G__6522.cljs$core$IFn$_invoke$arity$13 = G__6522__13;
G__6522.cljs$core$IFn$_invoke$arity$14 = G__6522__14;
G__6522.cljs$core$IFn$_invoke$arity$15 = G__6522__15;
G__6522.cljs$core$IFn$_invoke$arity$16 = G__6522__16;
G__6522.cljs$core$IFn$_invoke$arity$17 = G__6522__17;
G__6522.cljs$core$IFn$_invoke$arity$18 = G__6522__18;
G__6522.cljs$core$IFn$_invoke$arity$19 = G__6522__19;
G__6522.cljs$core$IFn$_invoke$arity$20 = G__6522__20;
G__6522.cljs$core$IFn$_invoke$arity$21 = G__6522__21;
G__6522.cljs$core$IFn$_invoke$arity$22 = G__6522__22;
return G__6522;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args6477){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args6477)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__6500 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__6501 = a;
var G__6502 = b;
var G__6503 = c;
var G__6504 = d;
var G__6505 = e;
var G__6506 = f;
var G__6507 = g;
var G__6508 = h;
var G__6509 = i;
var G__6510 = j;
var G__6511 = k;
var G__6512 = l;
var G__6513 = m;
var G__6514 = n;
var G__6515 = o;
var G__6516 = p;
var G__6517 = q;
var G__6518 = r;
var G__6519 = s;
var G__6520 = t;
var G__6521 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__6500,G__6501,G__6502,G__6503,G__6504,G__6505,G__6506,G__6507,G__6508,G__6509,G__6510,G__6511,G__6512,G__6513,G__6514,G__6515,G__6516,G__6517,G__6518,G__6519,G__6520,G__6521) : cljs.core.apply.call(null,G__6500,G__6501,G__6502,G__6503,G__6504,G__6505,G__6506,G__6507,G__6508,G__6509,G__6510,G__6511,G__6512,G__6513,G__6514,G__6515,G__6516,G__6517,G__6518,G__6519,G__6520,G__6521));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__6524 = x;
if(G__6524){
var bit__4665__auto__ = null;
if(cljs.core.truth_((function (){var or__3984__auto__ = bit__4665__auto__;
if(cljs.core.truth_(or__3984__auto__)){
return or__3984__auto__;
} else {
return G__6524.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__6524.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__6524);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__6524);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__6526 = value;
if(G__6526){
var bit__4665__auto__ = (G__6526.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__4665__auto__) || (G__6526.cljs$core$ICloneable$)){
return true;
} else {
if((!G__6526.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__6526);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__6526);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__6528 = coll;
if(G__6528){
var bit__4658__auto__ = (G__6528.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4658__auto__) || (G__6528.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__6530 = coll;
if(G__6530){
var bit__4658__auto__ = (G__6530.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4658__auto__) || (G__6530.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__6532 = coll;
if(G__6532){
var bit__4658__auto__ = (G__6532.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4658__auto__) || (G__6532.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__6534 = coll;
if(G__6534){
var bit__4658__auto__ = (G__6534.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4658__auto__) || (G__6534.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__6539__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__6540 = y;
var G__6541 = cljs.core.first(more);
var G__6542 = cljs.core.next(more);
x = G__6540;
y = G__6541;
more = G__6542;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__6539 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6543__i = 0, G__6543__a = new Array(arguments.length -  2);
while (G__6543__i < G__6543__a.length) {G__6543__a[G__6543__i] = arguments[G__6543__i + 2]; ++G__6543__i;}
  more = new cljs.core.IndexedSeq(G__6543__a,0);
} 
return G__6539__delegate.call(this,x,y,more);};
G__6539.cljs$lang$maxFixedArity = 2;
G__6539.cljs$lang$applyTo = (function (arglist__6544){
var x = cljs.core.first(arglist__6544);
arglist__6544 = cljs.core.next(arglist__6544);
var y = cljs.core.first(arglist__6544);
var more = cljs.core.rest(arglist__6544);
return G__6539__delegate(x,y,more);
});
G__6539.cljs$core$IFn$_invoke$arity$variadic = G__6539__delegate;
return G__6539;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__6545 = null;
if (arguments.length > 2) {
var G__6546__i = 0, G__6546__a = new Array(arguments.length -  2);
while (G__6546__i < G__6546__a.length) {G__6546__a[G__6546__i] = arguments[G__6546__i + 2]; ++G__6546__i;}
G__6545 = new cljs.core.IndexedSeq(G__6546__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6545);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__6547 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__6547) : cljs.core.es6_iterator_seq.call(null,G__6547));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__6548 = (n + (1));
var G__6549 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__6550 = cljs.core.next(coll__$1);
n = G__6548;
hash_code = G__6549;
coll__$1 = G__6550;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__6551 = (n + (1));
var G__6552 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__6553 = cljs.core.next(coll__$1);
n = G__6551;
hash_code = G__6552;
coll__$1 = G__6553;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__6554 = o;
return goog.getUid(G__6554);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__6556 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__6556) : cljs.core.deref.call(null,G__6556));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__6563 = val;
var G__6564 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6563,G__6564) : f.call(null,G__6563,G__6564));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__6569 = nval;
var G__6570 = (n + (1));
val = G__6569;
n = G__6570;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__6565 = val__$1;
var G__6566 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6565,G__6566) : f.call(null,G__6565,G__6566));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__6571 = nval;
var G__6572 = (n + (1));
val__$1 = G__6571;
n = G__6572;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__6567 = val__$1;
var G__6568 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6567,G__6568) : f.call(null,G__6567,G__6568));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__6573 = nval;
var G__6574 = (n + (1));
val__$1 = G__6573;
n = G__6574;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__6581 = val;
var G__6582 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6581,G__6582) : f.call(null,G__6581,G__6582));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__6587 = nval;
var G__6588 = (n + (1));
val = G__6587;
n = G__6588;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__6583 = val__$1;
var G__6584 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6583,G__6584) : f.call(null,G__6583,G__6584));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__6589 = nval;
var G__6590 = (n + (1));
val__$1 = G__6589;
n = G__6590;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__6585 = val__$1;
var G__6586 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6585,G__6586) : f.call(null,G__6585,G__6586));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__6591 = nval;
var G__6592 = (n + (1));
val__$1 = G__6591;
n = G__6592;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__6594 = x;
if(G__6594){
var bit__4665__auto__ = (G__6594.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4665__auto__) || (G__6594.cljs$core$ICounted$)){
return true;
} else {
if((!G__6594.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__6594);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__6594);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__6596 = x;
if(G__6596){
var bit__4665__auto__ = (G__6596.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4665__auto__) || (G__6596.cljs$core$IIndexed$)){
return true;
} else {
if((!G__6596.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__6596);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__6596);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__6597 = coll__$1;
var G__6598 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__6597,G__6598) : cljs.core.equiv_sequential.call(null,G__6597,G__6598));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__6599 = o;
var G__6600 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__6599,G__6600) : cljs.core.cons.call(null,G__6599,G__6600));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4962__auto__ = this;
return cljs.core.es6_iterator(this__4962__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__6603 = coll__$1;
var G__6604 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__6603,G__6604) : cljs.core.equiv_sequential.call(null,G__6603,G__6604));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__6605 = cljs.core.List.EMPTY;
var G__6606 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__6605,G__6606) : cljs.core.with_meta.call(null,G__6605,G__6606));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__6607 = f;
var G__6608 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__6607,G__6608) : cljs.core.seq_reduce.call(null,G__6607,G__6608));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__6609 = f;
var G__6610 = start;
var G__6611 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__6609,G__6610,G__6611) : cljs.core.seq_reduce.call(null,G__6609,G__6610,G__6611));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__6612 = o;
var G__6613 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__6612,G__6613) : cljs.core.cons.call(null,G__6612,G__6613));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4962__auto__ = this;
return cljs.core.es6_iterator(this__4962__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__6614 = sn;
s = G__6614;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__6619__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__6620 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__6621 = cljs.core.first(xs);
var G__6622 = cljs.core.next(xs);
coll = G__6620;
x = G__6621;
xs = G__6622;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__6619 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__6623__i = 0, G__6623__a = new Array(arguments.length -  2);
while (G__6623__i < G__6623__a.length) {G__6623__a[G__6623__i] = arguments[G__6623__i + 2]; ++G__6623__i;}
  xs = new cljs.core.IndexedSeq(G__6623__a,0);
} 
return G__6619__delegate.call(this,coll,x,xs);};
G__6619.cljs$lang$maxFixedArity = 2;
G__6619.cljs$lang$applyTo = (function (arglist__6624){
var coll = cljs.core.first(arglist__6624);
arglist__6624 = cljs.core.next(arglist__6624);
var x = cljs.core.first(arglist__6624);
var xs = cljs.core.rest(arglist__6624);
return G__6619__delegate(coll,x,xs);
});
G__6619.cljs$core$IFn$_invoke$arity$variadic = G__6619__delegate;
return G__6619;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__6625 = null;
if (arguments.length > 2) {
var G__6626__i = 0, G__6626__a = new Array(arguments.length -  2);
while (G__6626__i < G__6626__a.length) {G__6626__a[G__6626__i] = arguments[G__6626__i + 2]; ++G__6626__i;}
G__6625 = new cljs.core.IndexedSeq(G__6626__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__6625);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__6627 = cljs.core.next(s);
var G__6628 = (acc + (1));
s = G__6627;
acc = G__6628;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__6630 = coll;
if(G__6630){
var bit__4658__auto__ = (G__6630.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4658__auto__) || (G__6630.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__6631 = cljs.core.next(coll);
var G__6632 = (n - (1));
coll = G__6631;
n = G__6632;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__6633 = cljs.core.next(coll);
var G__6634 = (n - (1));
var G__6635 = not_found;
coll = G__6633;
n = G__6634;
not_found = G__6635;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__6640 = coll;
if(G__6640){
var bit__4658__auto__ = (G__6640.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4658__auto__) || (G__6640.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__6641 = coll;
if(G__6641){
var bit__4665__auto__ = (G__6641.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4665__auto__) || (G__6641.cljs$core$ISeq$)){
return true;
} else {
if((!G__6641.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__6641);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__6641);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__6642 = coll;
if(G__6642){
var bit__4658__auto__ = (G__6642.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4658__auto__) || (G__6642.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__6643 = coll;
if(G__6643){
var bit__4665__auto__ = (G__6643.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4665__auto__) || (G__6643.cljs$core$ISeq$)){
return true;
} else {
if((!G__6643.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__6643);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__6643);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__6644 = (n__$1 - (1));
var G__6645 = cljs.core.rest(xs);
n__$1 = G__6644;
xs = G__6645;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__6648 = o;
if(G__6648){
var bit__4658__auto__ = (G__6648.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4658__auto__) || (G__6648.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__6649 = o;
if(G__6649){
var bit__4658__auto__ = (G__6649.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4658__auto__) || (G__6649.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__6653__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__6654 = ret;
var G__6655 = cljs.core.first(kvs);
var G__6656 = cljs.core.second(kvs);
var G__6657 = cljs.core.nnext(kvs);
coll = G__6654;
k = G__6655;
v = G__6656;
kvs = G__6657;
continue;
} else {
return ret;
}
break;
}
};
var G__6653 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__6658__i = 0, G__6658__a = new Array(arguments.length -  3);
while (G__6658__i < G__6658__a.length) {G__6658__a[G__6658__i] = arguments[G__6658__i + 3]; ++G__6658__i;}
  kvs = new cljs.core.IndexedSeq(G__6658__a,0);
} 
return G__6653__delegate.call(this,coll,k,v,kvs);};
G__6653.cljs$lang$maxFixedArity = 3;
G__6653.cljs$lang$applyTo = (function (arglist__6659){
var coll = cljs.core.first(arglist__6659);
arglist__6659 = cljs.core.next(arglist__6659);
var k = cljs.core.first(arglist__6659);
arglist__6659 = cljs.core.next(arglist__6659);
var v = cljs.core.first(arglist__6659);
var kvs = cljs.core.rest(arglist__6659);
return G__6653__delegate(coll,k,v,kvs);
});
G__6653.cljs$core$IFn$_invoke$arity$variadic = G__6653__delegate;
return G__6653;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__6660 = null;
if (arguments.length > 3) {
var G__6661__i = 0, G__6661__a = new Array(arguments.length -  3);
while (G__6661__i < G__6661__a.length) {G__6661__a[G__6661__i] = arguments[G__6661__i + 3]; ++G__6661__i;}
G__6660 = new cljs.core.IndexedSeq(G__6661__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__6660);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__6664__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__6665 = ret;
var G__6666 = cljs.core.first(ks);
var G__6667 = cljs.core.next(ks);
coll = G__6665;
k = G__6666;
ks = G__6667;
continue;
} else {
return ret;
}
}
break;
}
};
var G__6664 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__6668__i = 0, G__6668__a = new Array(arguments.length -  2);
while (G__6668__i < G__6668__a.length) {G__6668__a[G__6668__i] = arguments[G__6668__i + 2]; ++G__6668__i;}
  ks = new cljs.core.IndexedSeq(G__6668__a,0);
} 
return G__6664__delegate.call(this,coll,k,ks);};
G__6664.cljs$lang$maxFixedArity = 2;
G__6664.cljs$lang$applyTo = (function (arglist__6669){
var coll = cljs.core.first(arglist__6669);
arglist__6669 = cljs.core.next(arglist__6669);
var k = cljs.core.first(arglist__6669);
var ks = cljs.core.rest(arglist__6669);
return G__6664__delegate(coll,k,ks);
});
G__6664.cljs$core$IFn$_invoke$arity$variadic = G__6664__delegate;
return G__6664;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__6670 = null;
if (arguments.length > 2) {
var G__6671__i = 0, G__6671__a = new Array(arguments.length -  2);
while (G__6671__i < G__6671__a.length) {G__6671__a[G__6671__i] = arguments[G__6671__i + 2]; ++G__6671__i;}
G__6670 = new cljs.core.IndexedSeq(G__6671__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__6670);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__3984__auto__ = (function (){var G__6676 = f;
return goog.isFunction(G__6676);
})();
if(cljs.core.truth_(or__3984__auto__)){
return or__3984__auto__;
} else {
var G__6677 = f;
if(G__6677){
var bit__4665__auto__ = null;
if(cljs.core.truth_((function (){var or__3984__auto____$1 = bit__4665__auto__;
if(cljs.core.truth_(or__3984__auto____$1)){
return or__3984__auto____$1;
} else {
return G__6677.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__6677.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__6677);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__6677);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__7143 = null;
var G__7143__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__7143__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6679 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__6679) : self__.afn.call(null,G__6679));
});
var G__7143__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6680 = a;
var G__6681 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__6680,G__6681) : self__.afn.call(null,G__6680,G__6681));
});
var G__7143__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6682 = a;
var G__6683 = b;
var G__6684 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__6682,G__6683,G__6684) : self__.afn.call(null,G__6682,G__6683,G__6684));
});
var G__7143__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6685 = a;
var G__6686 = b;
var G__6687 = c;
var G__6688 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__6685,G__6686,G__6687,G__6688) : self__.afn.call(null,G__6685,G__6686,G__6687,G__6688));
});
var G__7143__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6689 = a;
var G__6690 = b;
var G__6691 = c;
var G__6692 = d;
var G__6693 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__6689,G__6690,G__6691,G__6692,G__6693) : self__.afn.call(null,G__6689,G__6690,G__6691,G__6692,G__6693));
});
var G__7143__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6694 = a;
var G__6695 = b;
var G__6696 = c;
var G__6697 = d;
var G__6698 = e;
var G__6699 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__6694,G__6695,G__6696,G__6697,G__6698,G__6699) : self__.afn.call(null,G__6694,G__6695,G__6696,G__6697,G__6698,G__6699));
});
var G__7143__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6700 = a;
var G__6701 = b;
var G__6702 = c;
var G__6703 = d;
var G__6704 = e;
var G__6705 = f;
var G__6706 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__6700,G__6701,G__6702,G__6703,G__6704,G__6705,G__6706) : self__.afn.call(null,G__6700,G__6701,G__6702,G__6703,G__6704,G__6705,G__6706));
});
var G__7143__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6707 = a;
var G__6708 = b;
var G__6709 = c;
var G__6710 = d;
var G__6711 = e;
var G__6712 = f;
var G__6713 = g;
var G__6714 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__6707,G__6708,G__6709,G__6710,G__6711,G__6712,G__6713,G__6714) : self__.afn.call(null,G__6707,G__6708,G__6709,G__6710,G__6711,G__6712,G__6713,G__6714));
});
var G__7143__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6715 = a;
var G__6716 = b;
var G__6717 = c;
var G__6718 = d;
var G__6719 = e;
var G__6720 = f;
var G__6721 = g;
var G__6722 = h;
var G__6723 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__6715,G__6716,G__6717,G__6718,G__6719,G__6720,G__6721,G__6722,G__6723) : self__.afn.call(null,G__6715,G__6716,G__6717,G__6718,G__6719,G__6720,G__6721,G__6722,G__6723));
});
var G__7143__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6724 = a;
var G__6725 = b;
var G__6726 = c;
var G__6727 = d;
var G__6728 = e;
var G__6729 = f;
var G__6730 = g;
var G__6731 = h;
var G__6732 = i;
var G__6733 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__6724,G__6725,G__6726,G__6727,G__6728,G__6729,G__6730,G__6731,G__6732,G__6733) : self__.afn.call(null,G__6724,G__6725,G__6726,G__6727,G__6728,G__6729,G__6730,G__6731,G__6732,G__6733));
});
var G__7143__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6734 = a;
var G__6735 = b;
var G__6736 = c;
var G__6737 = d;
var G__6738 = e;
var G__6739 = f;
var G__6740 = g;
var G__6741 = h;
var G__6742 = i;
var G__6743 = j;
var G__6744 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__6734,G__6735,G__6736,G__6737,G__6738,G__6739,G__6740,G__6741,G__6742,G__6743,G__6744) : self__.afn.call(null,G__6734,G__6735,G__6736,G__6737,G__6738,G__6739,G__6740,G__6741,G__6742,G__6743,G__6744));
});
var G__7143__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6745 = a;
var G__6746 = b;
var G__6747 = c;
var G__6748 = d;
var G__6749 = e;
var G__6750 = f;
var G__6751 = g;
var G__6752 = h;
var G__6753 = i;
var G__6754 = j;
var G__6755 = k;
var G__6756 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__6745,G__6746,G__6747,G__6748,G__6749,G__6750,G__6751,G__6752,G__6753,G__6754,G__6755,G__6756) : self__.afn.call(null,G__6745,G__6746,G__6747,G__6748,G__6749,G__6750,G__6751,G__6752,G__6753,G__6754,G__6755,G__6756));
});
var G__7143__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6757 = a;
var G__6758 = b;
var G__6759 = c;
var G__6760 = d;
var G__6761 = e;
var G__6762 = f;
var G__6763 = g;
var G__6764 = h;
var G__6765 = i;
var G__6766 = j;
var G__6767 = k;
var G__6768 = l;
var G__6769 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__6757,G__6758,G__6759,G__6760,G__6761,G__6762,G__6763,G__6764,G__6765,G__6766,G__6767,G__6768,G__6769) : self__.afn.call(null,G__6757,G__6758,G__6759,G__6760,G__6761,G__6762,G__6763,G__6764,G__6765,G__6766,G__6767,G__6768,G__6769));
});
var G__7143__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6770 = a;
var G__6771 = b;
var G__6772 = c;
var G__6773 = d;
var G__6774 = e;
var G__6775 = f;
var G__6776 = g;
var G__6777 = h;
var G__6778 = i;
var G__6779 = j;
var G__6780 = k;
var G__6781 = l;
var G__6782 = m;
var G__6783 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__6770,G__6771,G__6772,G__6773,G__6774,G__6775,G__6776,G__6777,G__6778,G__6779,G__6780,G__6781,G__6782,G__6783) : self__.afn.call(null,G__6770,G__6771,G__6772,G__6773,G__6774,G__6775,G__6776,G__6777,G__6778,G__6779,G__6780,G__6781,G__6782,G__6783));
});
var G__7143__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6784 = a;
var G__6785 = b;
var G__6786 = c;
var G__6787 = d;
var G__6788 = e;
var G__6789 = f;
var G__6790 = g;
var G__6791 = h;
var G__6792 = i;
var G__6793 = j;
var G__6794 = k;
var G__6795 = l;
var G__6796 = m;
var G__6797 = n;
var G__6798 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__6784,G__6785,G__6786,G__6787,G__6788,G__6789,G__6790,G__6791,G__6792,G__6793,G__6794,G__6795,G__6796,G__6797,G__6798) : self__.afn.call(null,G__6784,G__6785,G__6786,G__6787,G__6788,G__6789,G__6790,G__6791,G__6792,G__6793,G__6794,G__6795,G__6796,G__6797,G__6798));
});
var G__7143__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6799 = a;
var G__6800 = b;
var G__6801 = c;
var G__6802 = d;
var G__6803 = e;
var G__6804 = f;
var G__6805 = g;
var G__6806 = h;
var G__6807 = i;
var G__6808 = j;
var G__6809 = k;
var G__6810 = l;
var G__6811 = m;
var G__6812 = n;
var G__6813 = o;
var G__6814 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__6799,G__6800,G__6801,G__6802,G__6803,G__6804,G__6805,G__6806,G__6807,G__6808,G__6809,G__6810,G__6811,G__6812,G__6813,G__6814) : self__.afn.call(null,G__6799,G__6800,G__6801,G__6802,G__6803,G__6804,G__6805,G__6806,G__6807,G__6808,G__6809,G__6810,G__6811,G__6812,G__6813,G__6814));
});
var G__7143__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6815 = a;
var G__6816 = b;
var G__6817 = c;
var G__6818 = d;
var G__6819 = e;
var G__6820 = f;
var G__6821 = g;
var G__6822 = h;
var G__6823 = i;
var G__6824 = j;
var G__6825 = k;
var G__6826 = l;
var G__6827 = m;
var G__6828 = n;
var G__6829 = o;
var G__6830 = p;
var G__6831 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__6815,G__6816,G__6817,G__6818,G__6819,G__6820,G__6821,G__6822,G__6823,G__6824,G__6825,G__6826,G__6827,G__6828,G__6829,G__6830,G__6831) : self__.afn.call(null,G__6815,G__6816,G__6817,G__6818,G__6819,G__6820,G__6821,G__6822,G__6823,G__6824,G__6825,G__6826,G__6827,G__6828,G__6829,G__6830,G__6831));
});
var G__7143__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6832 = a;
var G__6833 = b;
var G__6834 = c;
var G__6835 = d;
var G__6836 = e;
var G__6837 = f;
var G__6838 = g;
var G__6839 = h;
var G__6840 = i;
var G__6841 = j;
var G__6842 = k;
var G__6843 = l;
var G__6844 = m;
var G__6845 = n;
var G__6846 = o;
var G__6847 = p;
var G__6848 = q;
var G__6849 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__6832,G__6833,G__6834,G__6835,G__6836,G__6837,G__6838,G__6839,G__6840,G__6841,G__6842,G__6843,G__6844,G__6845,G__6846,G__6847,G__6848,G__6849) : self__.afn.call(null,G__6832,G__6833,G__6834,G__6835,G__6836,G__6837,G__6838,G__6839,G__6840,G__6841,G__6842,G__6843,G__6844,G__6845,G__6846,G__6847,G__6848,G__6849));
});
var G__7143__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6850 = a;
var G__6851 = b;
var G__6852 = c;
var G__6853 = d;
var G__6854 = e;
var G__6855 = f;
var G__6856 = g;
var G__6857 = h;
var G__6858 = i;
var G__6859 = j;
var G__6860 = k;
var G__6861 = l;
var G__6862 = m;
var G__6863 = n;
var G__6864 = o;
var G__6865 = p;
var G__6866 = q;
var G__6867 = r;
var G__6868 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__6850,G__6851,G__6852,G__6853,G__6854,G__6855,G__6856,G__6857,G__6858,G__6859,G__6860,G__6861,G__6862,G__6863,G__6864,G__6865,G__6866,G__6867,G__6868) : self__.afn.call(null,G__6850,G__6851,G__6852,G__6853,G__6854,G__6855,G__6856,G__6857,G__6858,G__6859,G__6860,G__6861,G__6862,G__6863,G__6864,G__6865,G__6866,G__6867,G__6868));
});
var G__7143__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6869 = a;
var G__6870 = b;
var G__6871 = c;
var G__6872 = d;
var G__6873 = e;
var G__6874 = f;
var G__6875 = g;
var G__6876 = h;
var G__6877 = i;
var G__6878 = j;
var G__6879 = k;
var G__6880 = l;
var G__6881 = m;
var G__6882 = n;
var G__6883 = o;
var G__6884 = p;
var G__6885 = q;
var G__6886 = r;
var G__6887 = s;
var G__6888 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__6869,G__6870,G__6871,G__6872,G__6873,G__6874,G__6875,G__6876,G__6877,G__6878,G__6879,G__6880,G__6881,G__6882,G__6883,G__6884,G__6885,G__6886,G__6887,G__6888) : self__.afn.call(null,G__6869,G__6870,G__6871,G__6872,G__6873,G__6874,G__6875,G__6876,G__6877,G__6878,G__6879,G__6880,G__6881,G__6882,G__6883,G__6884,G__6885,G__6886,G__6887,G__6888));
});
var G__7143__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6889 = self__.afn;
var G__6890 = a;
var G__6891 = b;
var G__6892 = c;
var G__6893 = d;
var G__6894 = e;
var G__6895 = f;
var G__6896 = g;
var G__6897 = h;
var G__6898 = i;
var G__6899 = j;
var G__6900 = k;
var G__6901 = l;
var G__6902 = m;
var G__6903 = n;
var G__6904 = o;
var G__6905 = p;
var G__6906 = q;
var G__6907 = r;
var G__6908 = s;
var G__6909 = t;
var G__6910 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__6889,G__6890,G__6891,G__6892,G__6893,G__6894,G__6895,G__6896,G__6897,G__6898,G__6899,G__6900,G__6901,G__6902,G__6903,G__6904,G__6905,G__6906,G__6907,G__6908,G__6909,G__6910) : cljs.core.apply.call(null,G__6889,G__6890,G__6891,G__6892,G__6893,G__6894,G__6895,G__6896,G__6897,G__6898,G__6899,G__6900,G__6901,G__6902,G__6903,G__6904,G__6905,G__6906,G__6907,G__6908,G__6909,G__6910));
});
G__7143 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__7143__1.call(this,self__);
case 2:
return G__7143__2.call(this,self__,a);
case 3:
return G__7143__3.call(this,self__,a,b);
case 4:
return G__7143__4.call(this,self__,a,b,c);
case 5:
return G__7143__5.call(this,self__,a,b,c,d);
case 6:
return G__7143__6.call(this,self__,a,b,c,d,e);
case 7:
return G__7143__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__7143__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__7143__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__7143__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__7143__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__7143__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__7143__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__7143__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__7143__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__7143__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__7143__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__7143__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__7143__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__7143__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__7143__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__7143__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7143.cljs$core$IFn$_invoke$arity$1 = G__7143__1;
G__7143.cljs$core$IFn$_invoke$arity$2 = G__7143__2;
G__7143.cljs$core$IFn$_invoke$arity$3 = G__7143__3;
G__7143.cljs$core$IFn$_invoke$arity$4 = G__7143__4;
G__7143.cljs$core$IFn$_invoke$arity$5 = G__7143__5;
G__7143.cljs$core$IFn$_invoke$arity$6 = G__7143__6;
G__7143.cljs$core$IFn$_invoke$arity$7 = G__7143__7;
G__7143.cljs$core$IFn$_invoke$arity$8 = G__7143__8;
G__7143.cljs$core$IFn$_invoke$arity$9 = G__7143__9;
G__7143.cljs$core$IFn$_invoke$arity$10 = G__7143__10;
G__7143.cljs$core$IFn$_invoke$arity$11 = G__7143__11;
G__7143.cljs$core$IFn$_invoke$arity$12 = G__7143__12;
G__7143.cljs$core$IFn$_invoke$arity$13 = G__7143__13;
G__7143.cljs$core$IFn$_invoke$arity$14 = G__7143__14;
G__7143.cljs$core$IFn$_invoke$arity$15 = G__7143__15;
G__7143.cljs$core$IFn$_invoke$arity$16 = G__7143__16;
G__7143.cljs$core$IFn$_invoke$arity$17 = G__7143__17;
G__7143.cljs$core$IFn$_invoke$arity$18 = G__7143__18;
G__7143.cljs$core$IFn$_invoke$arity$19 = G__7143__19;
G__7143.cljs$core$IFn$_invoke$arity$20 = G__7143__20;
G__7143.cljs$core$IFn$_invoke$arity$21 = G__7143__21;
G__7143.cljs$core$IFn$_invoke$arity$22 = G__7143__22;
return G__7143;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args6678){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args6678)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__6911 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__6911) : self__.afn.call(null,G__6911));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__6912 = a;
var G__6913 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__6912,G__6913) : self__.afn.call(null,G__6912,G__6913));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__6914 = a;
var G__6915 = b;
var G__6916 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__6914,G__6915,G__6916) : self__.afn.call(null,G__6914,G__6915,G__6916));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__6917 = a;
var G__6918 = b;
var G__6919 = c;
var G__6920 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__6917,G__6918,G__6919,G__6920) : self__.afn.call(null,G__6917,G__6918,G__6919,G__6920));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__6921 = a;
var G__6922 = b;
var G__6923 = c;
var G__6924 = d;
var G__6925 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__6921,G__6922,G__6923,G__6924,G__6925) : self__.afn.call(null,G__6921,G__6922,G__6923,G__6924,G__6925));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__6926 = a;
var G__6927 = b;
var G__6928 = c;
var G__6929 = d;
var G__6930 = e;
var G__6931 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__6926,G__6927,G__6928,G__6929,G__6930,G__6931) : self__.afn.call(null,G__6926,G__6927,G__6928,G__6929,G__6930,G__6931));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__6932 = a;
var G__6933 = b;
var G__6934 = c;
var G__6935 = d;
var G__6936 = e;
var G__6937 = f;
var G__6938 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__6932,G__6933,G__6934,G__6935,G__6936,G__6937,G__6938) : self__.afn.call(null,G__6932,G__6933,G__6934,G__6935,G__6936,G__6937,G__6938));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__6939 = a;
var G__6940 = b;
var G__6941 = c;
var G__6942 = d;
var G__6943 = e;
var G__6944 = f;
var G__6945 = g;
var G__6946 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__6939,G__6940,G__6941,G__6942,G__6943,G__6944,G__6945,G__6946) : self__.afn.call(null,G__6939,G__6940,G__6941,G__6942,G__6943,G__6944,G__6945,G__6946));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__6947 = a;
var G__6948 = b;
var G__6949 = c;
var G__6950 = d;
var G__6951 = e;
var G__6952 = f;
var G__6953 = g;
var G__6954 = h;
var G__6955 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__6947,G__6948,G__6949,G__6950,G__6951,G__6952,G__6953,G__6954,G__6955) : self__.afn.call(null,G__6947,G__6948,G__6949,G__6950,G__6951,G__6952,G__6953,G__6954,G__6955));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__6956 = a;
var G__6957 = b;
var G__6958 = c;
var G__6959 = d;
var G__6960 = e;
var G__6961 = f;
var G__6962 = g;
var G__6963 = h;
var G__6964 = i;
var G__6965 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__6956,G__6957,G__6958,G__6959,G__6960,G__6961,G__6962,G__6963,G__6964,G__6965) : self__.afn.call(null,G__6956,G__6957,G__6958,G__6959,G__6960,G__6961,G__6962,G__6963,G__6964,G__6965));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__6966 = a;
var G__6967 = b;
var G__6968 = c;
var G__6969 = d;
var G__6970 = e;
var G__6971 = f;
var G__6972 = g;
var G__6973 = h;
var G__6974 = i;
var G__6975 = j;
var G__6976 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__6966,G__6967,G__6968,G__6969,G__6970,G__6971,G__6972,G__6973,G__6974,G__6975,G__6976) : self__.afn.call(null,G__6966,G__6967,G__6968,G__6969,G__6970,G__6971,G__6972,G__6973,G__6974,G__6975,G__6976));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__6977 = a;
var G__6978 = b;
var G__6979 = c;
var G__6980 = d;
var G__6981 = e;
var G__6982 = f;
var G__6983 = g;
var G__6984 = h;
var G__6985 = i;
var G__6986 = j;
var G__6987 = k;
var G__6988 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__6977,G__6978,G__6979,G__6980,G__6981,G__6982,G__6983,G__6984,G__6985,G__6986,G__6987,G__6988) : self__.afn.call(null,G__6977,G__6978,G__6979,G__6980,G__6981,G__6982,G__6983,G__6984,G__6985,G__6986,G__6987,G__6988));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__6989 = a;
var G__6990 = b;
var G__6991 = c;
var G__6992 = d;
var G__6993 = e;
var G__6994 = f;
var G__6995 = g;
var G__6996 = h;
var G__6997 = i;
var G__6998 = j;
var G__6999 = k;
var G__7000 = l;
var G__7001 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__6989,G__6990,G__6991,G__6992,G__6993,G__6994,G__6995,G__6996,G__6997,G__6998,G__6999,G__7000,G__7001) : self__.afn.call(null,G__6989,G__6990,G__6991,G__6992,G__6993,G__6994,G__6995,G__6996,G__6997,G__6998,G__6999,G__7000,G__7001));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__7002 = a;
var G__7003 = b;
var G__7004 = c;
var G__7005 = d;
var G__7006 = e;
var G__7007 = f;
var G__7008 = g;
var G__7009 = h;
var G__7010 = i;
var G__7011 = j;
var G__7012 = k;
var G__7013 = l;
var G__7014 = m;
var G__7015 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__7002,G__7003,G__7004,G__7005,G__7006,G__7007,G__7008,G__7009,G__7010,G__7011,G__7012,G__7013,G__7014,G__7015) : self__.afn.call(null,G__7002,G__7003,G__7004,G__7005,G__7006,G__7007,G__7008,G__7009,G__7010,G__7011,G__7012,G__7013,G__7014,G__7015));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__7016 = a;
var G__7017 = b;
var G__7018 = c;
var G__7019 = d;
var G__7020 = e;
var G__7021 = f;
var G__7022 = g;
var G__7023 = h;
var G__7024 = i;
var G__7025 = j;
var G__7026 = k;
var G__7027 = l;
var G__7028 = m;
var G__7029 = n;
var G__7030 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__7016,G__7017,G__7018,G__7019,G__7020,G__7021,G__7022,G__7023,G__7024,G__7025,G__7026,G__7027,G__7028,G__7029,G__7030) : self__.afn.call(null,G__7016,G__7017,G__7018,G__7019,G__7020,G__7021,G__7022,G__7023,G__7024,G__7025,G__7026,G__7027,G__7028,G__7029,G__7030));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__7031 = a;
var G__7032 = b;
var G__7033 = c;
var G__7034 = d;
var G__7035 = e;
var G__7036 = f;
var G__7037 = g;
var G__7038 = h;
var G__7039 = i;
var G__7040 = j;
var G__7041 = k;
var G__7042 = l;
var G__7043 = m;
var G__7044 = n;
var G__7045 = o;
var G__7046 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__7031,G__7032,G__7033,G__7034,G__7035,G__7036,G__7037,G__7038,G__7039,G__7040,G__7041,G__7042,G__7043,G__7044,G__7045,G__7046) : self__.afn.call(null,G__7031,G__7032,G__7033,G__7034,G__7035,G__7036,G__7037,G__7038,G__7039,G__7040,G__7041,G__7042,G__7043,G__7044,G__7045,G__7046));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__7047 = a;
var G__7048 = b;
var G__7049 = c;
var G__7050 = d;
var G__7051 = e;
var G__7052 = f;
var G__7053 = g;
var G__7054 = h;
var G__7055 = i;
var G__7056 = j;
var G__7057 = k;
var G__7058 = l;
var G__7059 = m;
var G__7060 = n;
var G__7061 = o;
var G__7062 = p;
var G__7063 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__7047,G__7048,G__7049,G__7050,G__7051,G__7052,G__7053,G__7054,G__7055,G__7056,G__7057,G__7058,G__7059,G__7060,G__7061,G__7062,G__7063) : self__.afn.call(null,G__7047,G__7048,G__7049,G__7050,G__7051,G__7052,G__7053,G__7054,G__7055,G__7056,G__7057,G__7058,G__7059,G__7060,G__7061,G__7062,G__7063));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__7064 = a;
var G__7065 = b;
var G__7066 = c;
var G__7067 = d;
var G__7068 = e;
var G__7069 = f;
var G__7070 = g;
var G__7071 = h;
var G__7072 = i;
var G__7073 = j;
var G__7074 = k;
var G__7075 = l;
var G__7076 = m;
var G__7077 = n;
var G__7078 = o;
var G__7079 = p;
var G__7080 = q;
var G__7081 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__7064,G__7065,G__7066,G__7067,G__7068,G__7069,G__7070,G__7071,G__7072,G__7073,G__7074,G__7075,G__7076,G__7077,G__7078,G__7079,G__7080,G__7081) : self__.afn.call(null,G__7064,G__7065,G__7066,G__7067,G__7068,G__7069,G__7070,G__7071,G__7072,G__7073,G__7074,G__7075,G__7076,G__7077,G__7078,G__7079,G__7080,G__7081));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__7082 = a;
var G__7083 = b;
var G__7084 = c;
var G__7085 = d;
var G__7086 = e;
var G__7087 = f;
var G__7088 = g;
var G__7089 = h;
var G__7090 = i;
var G__7091 = j;
var G__7092 = k;
var G__7093 = l;
var G__7094 = m;
var G__7095 = n;
var G__7096 = o;
var G__7097 = p;
var G__7098 = q;
var G__7099 = r;
var G__7100 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__7082,G__7083,G__7084,G__7085,G__7086,G__7087,G__7088,G__7089,G__7090,G__7091,G__7092,G__7093,G__7094,G__7095,G__7096,G__7097,G__7098,G__7099,G__7100) : self__.afn.call(null,G__7082,G__7083,G__7084,G__7085,G__7086,G__7087,G__7088,G__7089,G__7090,G__7091,G__7092,G__7093,G__7094,G__7095,G__7096,G__7097,G__7098,G__7099,G__7100));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__7101 = a;
var G__7102 = b;
var G__7103 = c;
var G__7104 = d;
var G__7105 = e;
var G__7106 = f;
var G__7107 = g;
var G__7108 = h;
var G__7109 = i;
var G__7110 = j;
var G__7111 = k;
var G__7112 = l;
var G__7113 = m;
var G__7114 = n;
var G__7115 = o;
var G__7116 = p;
var G__7117 = q;
var G__7118 = r;
var G__7119 = s;
var G__7120 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__7101,G__7102,G__7103,G__7104,G__7105,G__7106,G__7107,G__7108,G__7109,G__7110,G__7111,G__7112,G__7113,G__7114,G__7115,G__7116,G__7117,G__7118,G__7119,G__7120) : self__.afn.call(null,G__7101,G__7102,G__7103,G__7104,G__7105,G__7106,G__7107,G__7108,G__7109,G__7110,G__7111,G__7112,G__7113,G__7114,G__7115,G__7116,G__7117,G__7118,G__7119,G__7120));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__7121 = self__.afn;
var G__7122 = a;
var G__7123 = b;
var G__7124 = c;
var G__7125 = d;
var G__7126 = e;
var G__7127 = f;
var G__7128 = g;
var G__7129 = h;
var G__7130 = i;
var G__7131 = j;
var G__7132 = k;
var G__7133 = l;
var G__7134 = m;
var G__7135 = n;
var G__7136 = o;
var G__7137 = p;
var G__7138 = q;
var G__7139 = r;
var G__7140 = s;
var G__7141 = t;
var G__7142 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__7121,G__7122,G__7123,G__7124,G__7125,G__7126,G__7127,G__7128,G__7129,G__7130,G__7131,G__7132,G__7133,G__7134,G__7135,G__7136,G__7137,G__7138,G__7139,G__7140,G__7141,G__7142) : cljs.core.apply.call(null,G__7121,G__7122,G__7123,G__7124,G__7125,G__7126,G__7127,G__7128,G__7129,G__7130,G__7131,G__7132,G__7133,G__7134,G__7135,G__7136,G__7137,G__7138,G__7139,G__7140,G__7141,G__7142));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__7147 = o;
if(G__7147){
var bit__4665__auto__ = (G__7147.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__4665__auto__) || (G__7147.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__7147.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__7147);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__7147);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__3972__auto__ = !((o == null));
if(and__3972__auto__){
var G__7151 = o;
if(G__7151){
var bit__4665__auto__ = (G__7151.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4665__auto__) || (G__7151.cljs$core$IMeta$)){
return true;
} else {
if((!G__7151.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__7151);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__7151);
}
} else {
return and__3972__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__7154__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__7155 = ret;
var G__7156 = cljs.core.first(ks);
var G__7157 = cljs.core.next(ks);
coll = G__7155;
k = G__7156;
ks = G__7157;
continue;
} else {
return ret;
}
}
break;
}
};
var G__7154 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__7158__i = 0, G__7158__a = new Array(arguments.length -  2);
while (G__7158__i < G__7158__a.length) {G__7158__a[G__7158__i] = arguments[G__7158__i + 2]; ++G__7158__i;}
  ks = new cljs.core.IndexedSeq(G__7158__a,0);
} 
return G__7154__delegate.call(this,coll,k,ks);};
G__7154.cljs$lang$maxFixedArity = 2;
G__7154.cljs$lang$applyTo = (function (arglist__7159){
var coll = cljs.core.first(arglist__7159);
arglist__7159 = cljs.core.next(arglist__7159);
var k = cljs.core.first(arglist__7159);
var ks = cljs.core.rest(arglist__7159);
return G__7154__delegate(coll,k,ks);
});
G__7154.cljs$core$IFn$_invoke$arity$variadic = G__7154__delegate;
return G__7154;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__7160 = null;
if (arguments.length > 2) {
var G__7161__i = 0, G__7161__a = new Array(arguments.length -  2);
while (G__7161__i < G__7161__a.length) {G__7161__a[G__7161__i] = arguments[G__7161__i + 2]; ++G__7161__i;}
G__7160 = new cljs.core.IndexedSeq(G__7161__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__7160);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__7163 = x;
if(G__7163){
var bit__4665__auto__ = (G__7163.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__4665__auto__) || (G__7163.cljs$core$ICollection$)){
return true;
} else {
if((!G__7163.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__7163);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__7163);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__7165 = x;
if(G__7165){
var bit__4665__auto__ = (G__7165.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__4665__auto__) || (G__7165.cljs$core$ISet$)){
return true;
} else {
if((!G__7165.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__7165);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__7165);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__7167 = x;
if(G__7167){
var bit__4665__auto__ = (G__7167.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__4665__auto__) || (G__7167.cljs$core$IAssociative$)){
return true;
} else {
if((!G__7167.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__7167);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__7167);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__7169 = x;
if(G__7169){
var bit__4665__auto__ = (G__7169.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__4665__auto__) || (G__7169.cljs$core$ISequential$)){
return true;
} else {
if((!G__7169.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__7169);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__7169);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__7171 = x;
if(G__7171){
var bit__4665__auto__ = (G__7171.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__4665__auto__) || (G__7171.cljs$core$ISorted$)){
return true;
} else {
if((!G__7171.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__7171);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__7171);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__7173 = x;
if(G__7173){
var bit__4665__auto__ = (G__7173.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4665__auto__) || (G__7173.cljs$core$IReduce$)){
return true;
} else {
if((!G__7173.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__7173);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__7173);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__7175 = x;
if(G__7175){
var bit__4665__auto__ = (G__7175.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4665__auto__) || (G__7175.cljs$core$IMap$)){
return true;
} else {
if((!G__7175.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__7175);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__7175);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__7177 = x;
if(G__7177){
var bit__4665__auto__ = (G__7177.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__4665__auto__) || (G__7177.cljs$core$IVector$)){
return true;
} else {
if((!G__7177.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__7177);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__7177);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__7179 = x;
if(G__7179){
var bit__4658__auto__ = (G__7179.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__4658__auto__) || (G__7179.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj7185 = {};
return obj7185;
});
var js_obj__1 = (function() { 
var G__7188__delegate = function (keyvals){
var G__7186 = goog.object.create;
var G__7187 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__7186,G__7187) : cljs.core.apply.call(null,G__7186,G__7187));
};
var G__7188 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__7189__i = 0, G__7189__a = new Array(arguments.length -  0);
while (G__7189__i < G__7189__a.length) {G__7189__a[G__7189__i] = arguments[G__7189__i + 0]; ++G__7189__i;}
  keyvals = new cljs.core.IndexedSeq(G__7189__a,0);
} 
return G__7188__delegate.call(this,keyvals);};
G__7188.cljs$lang$maxFixedArity = 0;
G__7188.cljs$lang$applyTo = (function (arglist__7190){
var keyvals = cljs.core.seq(arglist__7190);
return G__7188__delegate(keyvals);
});
G__7188.cljs$core$IFn$_invoke$arity$variadic = G__7188__delegate;
return G__7188;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__7191 = null;
if (arguments.length > 0) {
var G__7192__i = 0, G__7192__a = new Array(arguments.length -  0);
while (G__7192__i < G__7192__a.length) {G__7192__a[G__7192__i] = arguments[G__7192__i + 0]; ++G__7192__i;}
G__7191 = new cljs.core.IndexedSeq(G__7192__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__7191);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__7195_7197 = obj;
var G__7196_7198 = ((function (G__7195_7197,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__7195_7197,keys))
;
goog.object.forEach(G__7195_7197,G__7196_7198);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__7199 = (i__$1 + (1));
var G__7200 = (j__$1 + (1));
var G__7201 = (len__$1 - (1));
i__$1 = G__7199;
j__$1 = G__7200;
len__$1 = G__7201;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__7202 = (i__$1 - (1));
var G__7203 = (j__$1 - (1));
var G__7204 = (len__$1 - (1));
i__$1 = G__7202;
j__$1 = G__7203;
len__$1 = G__7204;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj7206 = {};
return obj7206;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__7208 = s;
if(G__7208){
var bit__4665__auto__ = (G__7208.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4665__auto__) || (G__7208.cljs$core$ISeq$)){
return true;
} else {
if((!G__7208.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__7208);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__7208);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__7210 = s;
if(G__7210){
var bit__4665__auto__ = (G__7210.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4665__auto__) || (G__7210.cljs$core$ISeqable$)){
return true;
} else {
if((!G__7210.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__7210);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__7210);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__3984__auto__ = cljs.core.fn_QMARK_(f);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var G__7214 = f;
if(G__7214){
var bit__4665__auto__ = (G__7214.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__4665__auto__) || (G__7214.cljs$core$IFn$)){
return true;
} else {
if((!G__7214.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__7214);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__7214);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__7227 = n;
return isNaN(G__7227);
})())) && (!((n === Infinity))) && (((function (){var G__7228 = n;
return parseFloat(G__7228);
})() === (function (){var G__7229 = n;
var G__7230 = (10);
return parseInt(G__7229,G__7230);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__7231__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__7232 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__7233 = etc;
s = G__7232;
xs = G__7233;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__7231 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7234__i = 0, G__7234__a = new Array(arguments.length -  2);
while (G__7234__i < G__7234__a.length) {G__7234__a[G__7234__i] = arguments[G__7234__i + 2]; ++G__7234__i;}
  more = new cljs.core.IndexedSeq(G__7234__a,0);
} 
return G__7231__delegate.call(this,x,y,more);};
G__7231.cljs$lang$maxFixedArity = 2;
G__7231.cljs$lang$applyTo = (function (arglist__7235){
var x = cljs.core.first(arglist__7235);
arglist__7235 = cljs.core.next(arglist__7235);
var y = cljs.core.first(arglist__7235);
var more = cljs.core.rest(arglist__7235);
return G__7231__delegate(x,y,more);
});
G__7231.cljs$core$IFn$_invoke$arity$variadic = G__7231__delegate;
return G__7231;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__7236 = null;
if (arguments.length > 2) {
var G__7237__i = 0, G__7237__a = new Array(arguments.length -  2);
while (G__7237__i < G__7237__a.length) {G__7237__a[G__7237__i] = arguments[G__7237__i + 2]; ++G__7237__i;}
G__7236 = new cljs.core.IndexedSeq(G__7237__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7236);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__7241 = x;
if(G__7241){
var bit__4658__auto__ = (G__7241.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__4658__auto__) || (G__7241.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__7242 = x;
var G__7243 = y;
return goog.array.defaultCompare(G__7242,G__7243);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__7248 = xs;
var G__7249 = ys;
var G__7250 = len;
var G__7251 = (n + (1));
xs = G__7248;
ys = G__7249;
len = G__7250;
n = G__7251;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__7256 = x;
var G__7257 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7256,G__7257) : f.call(null,G__7256,G__7257));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__7258 = y;
var G__7259 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7258,G__7259) : f.call(null,G__7258,G__7259));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__7265 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__7265) : cljs.core.to_array.call(null,G__7265));
})();
var G__7266_7268 = a;
var G__7267_7269 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__7266_7268,G__7267_7269);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__7275 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__7275) : keyfn.call(null,G__7275));
})(),(function (){var G__7276 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__7276) : keyfn.call(null,G__7276));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__7282 = f;
var G__7283 = cljs.core.first(s);
var G__7284 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__7282,G__7283,G__7284) : cljs.core.reduce.call(null,G__7282,G__7283,G__7284));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__7285 = val__$1;
var G__7286 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7285,G__7286) : f.call(null,G__7285,G__7286));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__7287 = nval;
var G__7288 = cljs.core.next(coll__$1);
val__$1 = G__7287;
coll__$1 = G__7288;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__7292 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__7292) : cljs.core.to_array.call(null,G__7292));
})();
var G__7293_7295 = a;
goog.array.shuffle(G__7293_7295);

var G__7294 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__7294) : cljs.core.vec.call(null,G__7294));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__7298 = coll;
if(G__7298){
var bit__4658__auto__ = (G__7298.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4658__auto__) || (G__7298.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__7299 = coll;
if(G__7299){
var bit__4658__auto__ = (G__7299.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4658__auto__) || (G__7299.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__7308 = null;
var G__7308__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__7308__1 = (function (x){
var G__7305 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__7305) : cf.call(null,G__7305));
});
var G__7308__2 = (function (x,y){
var G__7306 = x;
var G__7307 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7306,G__7307) : f.call(null,G__7306,G__7307));
});
G__7308 = function(x,y){
switch(arguments.length){
case 0:
return G__7308__0.call(this);
case 1:
return G__7308__1.call(this,x);
case 2:
return G__7308__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7308.cljs$core$IFn$_invoke$arity$0 = G__7308__0;
G__7308.cljs$core$IFn$_invoke$arity$1 = G__7308__1;
G__7308.cljs$core$IFn$_invoke$arity$2 = G__7308__2;
return G__7308;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__7315 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__7315) : xform.call(null,G__7315));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__7316 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__7316) : f__$1.call(null,G__7316));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__7317__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__7317 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7318__i = 0, G__7318__a = new Array(arguments.length -  2);
while (G__7318__i < G__7318__a.length) {G__7318__a[G__7318__i] = arguments[G__7318__i + 2]; ++G__7318__i;}
  more = new cljs.core.IndexedSeq(G__7318__a,0);
} 
return G__7317__delegate.call(this,x,y,more);};
G__7317.cljs$lang$maxFixedArity = 2;
G__7317.cljs$lang$applyTo = (function (arglist__7319){
var x = cljs.core.first(arglist__7319);
arglist__7319 = cljs.core.next(arglist__7319);
var y = cljs.core.first(arglist__7319);
var more = cljs.core.rest(arglist__7319);
return G__7317__delegate(x,y,more);
});
G__7317.cljs$core$IFn$_invoke$arity$variadic = G__7317__delegate;
return G__7317;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__7320 = null;
if (arguments.length > 2) {
var G__7321__i = 0, G__7321__a = new Array(arguments.length -  2);
while (G__7321__i < G__7321__a.length) {G__7321__a[G__7321__i] = arguments[G__7321__i + 2]; ++G__7321__i;}
G__7320 = new cljs.core.IndexedSeq(G__7321__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7320);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__7322__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__7322 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7323__i = 0, G__7323__a = new Array(arguments.length -  2);
while (G__7323__i < G__7323__a.length) {G__7323__a[G__7323__i] = arguments[G__7323__i + 2]; ++G__7323__i;}
  more = new cljs.core.IndexedSeq(G__7323__a,0);
} 
return G__7322__delegate.call(this,x,y,more);};
G__7322.cljs$lang$maxFixedArity = 2;
G__7322.cljs$lang$applyTo = (function (arglist__7324){
var x = cljs.core.first(arglist__7324);
arglist__7324 = cljs.core.next(arglist__7324);
var y = cljs.core.first(arglist__7324);
var more = cljs.core.rest(arglist__7324);
return G__7322__delegate(x,y,more);
});
G__7322.cljs$core$IFn$_invoke$arity$variadic = G__7322__delegate;
return G__7322;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__7325 = null;
if (arguments.length > 2) {
var G__7326__i = 0, G__7326__a = new Array(arguments.length -  2);
while (G__7326__i < G__7326__a.length) {G__7326__a[G__7326__i] = arguments[G__7326__i + 2]; ++G__7326__i;}
G__7325 = new cljs.core.IndexedSeq(G__7326__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7325);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__7327__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__7327 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7328__i = 0, G__7328__a = new Array(arguments.length -  2);
while (G__7328__i < G__7328__a.length) {G__7328__a[G__7328__i] = arguments[G__7328__i + 2]; ++G__7328__i;}
  more = new cljs.core.IndexedSeq(G__7328__a,0);
} 
return G__7327__delegate.call(this,x,y,more);};
G__7327.cljs$lang$maxFixedArity = 2;
G__7327.cljs$lang$applyTo = (function (arglist__7329){
var x = cljs.core.first(arglist__7329);
arglist__7329 = cljs.core.next(arglist__7329);
var y = cljs.core.first(arglist__7329);
var more = cljs.core.rest(arglist__7329);
return G__7327__delegate(x,y,more);
});
G__7327.cljs$core$IFn$_invoke$arity$variadic = G__7327__delegate;
return G__7327;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__7330 = null;
if (arguments.length > 2) {
var G__7331__i = 0, G__7331__a = new Array(arguments.length -  2);
while (G__7331__i < G__7331__a.length) {G__7331__a[G__7331__i] = arguments[G__7331__i + 2]; ++G__7331__i;}
G__7330 = new cljs.core.IndexedSeq(G__7331__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7330);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__7336__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__7336 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7337__i = 0, G__7337__a = new Array(arguments.length -  2);
while (G__7337__i < G__7337__a.length) {G__7337__a[G__7337__i] = arguments[G__7337__i + 2]; ++G__7337__i;}
  more = new cljs.core.IndexedSeq(G__7337__a,0);
} 
return G__7336__delegate.call(this,x,y,more);};
G__7336.cljs$lang$maxFixedArity = 2;
G__7336.cljs$lang$applyTo = (function (arglist__7338){
var x = cljs.core.first(arglist__7338);
arglist__7338 = cljs.core.next(arglist__7338);
var y = cljs.core.first(arglist__7338);
var more = cljs.core.rest(arglist__7338);
return G__7336__delegate(x,y,more);
});
G__7336.cljs$core$IFn$_invoke$arity$variadic = G__7336__delegate;
return G__7336;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__7339 = null;
if (arguments.length > 2) {
var G__7340__i = 0, G__7340__a = new Array(arguments.length -  2);
while (G__7340__i < G__7340__a.length) {G__7340__a[G__7340__i] = arguments[G__7340__i + 2]; ++G__7340__i;}
G__7339 = new cljs.core.IndexedSeq(G__7340__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7339);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__7341__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__7342 = y;
var G__7343 = cljs.core.first(more);
var G__7344 = cljs.core.next(more);
x = G__7342;
y = G__7343;
more = G__7344;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__7341 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7345__i = 0, G__7345__a = new Array(arguments.length -  2);
while (G__7345__i < G__7345__a.length) {G__7345__a[G__7345__i] = arguments[G__7345__i + 2]; ++G__7345__i;}
  more = new cljs.core.IndexedSeq(G__7345__a,0);
} 
return G__7341__delegate.call(this,x,y,more);};
G__7341.cljs$lang$maxFixedArity = 2;
G__7341.cljs$lang$applyTo = (function (arglist__7346){
var x = cljs.core.first(arglist__7346);
arglist__7346 = cljs.core.next(arglist__7346);
var y = cljs.core.first(arglist__7346);
var more = cljs.core.rest(arglist__7346);
return G__7341__delegate(x,y,more);
});
G__7341.cljs$core$IFn$_invoke$arity$variadic = G__7341__delegate;
return G__7341;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__7347 = null;
if (arguments.length > 2) {
var G__7348__i = 0, G__7348__a = new Array(arguments.length -  2);
while (G__7348__i < G__7348__a.length) {G__7348__a[G__7348__i] = arguments[G__7348__i + 2]; ++G__7348__i;}
G__7347 = new cljs.core.IndexedSeq(G__7348__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7347);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__7349__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__7350 = y;
var G__7351 = cljs.core.first(more);
var G__7352 = cljs.core.next(more);
x = G__7350;
y = G__7351;
more = G__7352;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__7349 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7353__i = 0, G__7353__a = new Array(arguments.length -  2);
while (G__7353__i < G__7353__a.length) {G__7353__a[G__7353__i] = arguments[G__7353__i + 2]; ++G__7353__i;}
  more = new cljs.core.IndexedSeq(G__7353__a,0);
} 
return G__7349__delegate.call(this,x,y,more);};
G__7349.cljs$lang$maxFixedArity = 2;
G__7349.cljs$lang$applyTo = (function (arglist__7354){
var x = cljs.core.first(arglist__7354);
arglist__7354 = cljs.core.next(arglist__7354);
var y = cljs.core.first(arglist__7354);
var more = cljs.core.rest(arglist__7354);
return G__7349__delegate(x,y,more);
});
G__7349.cljs$core$IFn$_invoke$arity$variadic = G__7349__delegate;
return G__7349;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__7355 = null;
if (arguments.length > 2) {
var G__7356__i = 0, G__7356__a = new Array(arguments.length -  2);
while (G__7356__i < G__7356__a.length) {G__7356__a[G__7356__i] = arguments[G__7356__i + 2]; ++G__7356__i;}
G__7355 = new cljs.core.IndexedSeq(G__7356__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7355);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__7357__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__7358 = y;
var G__7359 = cljs.core.first(more);
var G__7360 = cljs.core.next(more);
x = G__7358;
y = G__7359;
more = G__7360;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__7357 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7361__i = 0, G__7361__a = new Array(arguments.length -  2);
while (G__7361__i < G__7361__a.length) {G__7361__a[G__7361__i] = arguments[G__7361__i + 2]; ++G__7361__i;}
  more = new cljs.core.IndexedSeq(G__7361__a,0);
} 
return G__7357__delegate.call(this,x,y,more);};
G__7357.cljs$lang$maxFixedArity = 2;
G__7357.cljs$lang$applyTo = (function (arglist__7362){
var x = cljs.core.first(arglist__7362);
arglist__7362 = cljs.core.next(arglist__7362);
var y = cljs.core.first(arglist__7362);
var more = cljs.core.rest(arglist__7362);
return G__7357__delegate(x,y,more);
});
G__7357.cljs$core$IFn$_invoke$arity$variadic = G__7357__delegate;
return G__7357;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__7363 = null;
if (arguments.length > 2) {
var G__7364__i = 0, G__7364__a = new Array(arguments.length -  2);
while (G__7364__i < G__7364__a.length) {G__7364__a[G__7364__i] = arguments[G__7364__i + 2]; ++G__7364__i;}
G__7363 = new cljs.core.IndexedSeq(G__7364__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7363);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__7365__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__7366 = y;
var G__7367 = cljs.core.first(more);
var G__7368 = cljs.core.next(more);
x = G__7366;
y = G__7367;
more = G__7368;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__7365 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7369__i = 0, G__7369__a = new Array(arguments.length -  2);
while (G__7369__i < G__7369__a.length) {G__7369__a[G__7369__i] = arguments[G__7369__i + 2]; ++G__7369__i;}
  more = new cljs.core.IndexedSeq(G__7369__a,0);
} 
return G__7365__delegate.call(this,x,y,more);};
G__7365.cljs$lang$maxFixedArity = 2;
G__7365.cljs$lang$applyTo = (function (arglist__7370){
var x = cljs.core.first(arglist__7370);
arglist__7370 = cljs.core.next(arglist__7370);
var y = cljs.core.first(arglist__7370);
var more = cljs.core.rest(arglist__7370);
return G__7365__delegate(x,y,more);
});
G__7365.cljs$core$IFn$_invoke$arity$variadic = G__7365__delegate;
return G__7365;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__7371 = null;
if (arguments.length > 2) {
var G__7372__i = 0, G__7372__a = new Array(arguments.length -  2);
while (G__7372__i < G__7372__a.length) {G__7372__a[G__7372__i] = arguments[G__7372__i + 2]; ++G__7372__i;}
G__7371 = new cljs.core.IndexedSeq(G__7372__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7371);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__4301__auto__ = x;
var y__4302__auto__ = y;
return ((x__4301__auto__ > y__4302__auto__) ? x__4301__auto__ : y__4302__auto__);
});
var max__3 = (function() { 
var G__7373__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__4301__auto__ = x;
var y__4302__auto__ = y;
return ((x__4301__auto__ > y__4302__auto__) ? x__4301__auto__ : y__4302__auto__);
})(),more);
};
var G__7373 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7374__i = 0, G__7374__a = new Array(arguments.length -  2);
while (G__7374__i < G__7374__a.length) {G__7374__a[G__7374__i] = arguments[G__7374__i + 2]; ++G__7374__i;}
  more = new cljs.core.IndexedSeq(G__7374__a,0);
} 
return G__7373__delegate.call(this,x,y,more);};
G__7373.cljs$lang$maxFixedArity = 2;
G__7373.cljs$lang$applyTo = (function (arglist__7375){
var x = cljs.core.first(arglist__7375);
arglist__7375 = cljs.core.next(arglist__7375);
var y = cljs.core.first(arglist__7375);
var more = cljs.core.rest(arglist__7375);
return G__7373__delegate(x,y,more);
});
G__7373.cljs$core$IFn$_invoke$arity$variadic = G__7373__delegate;
return G__7373;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__7376 = null;
if (arguments.length > 2) {
var G__7377__i = 0, G__7377__a = new Array(arguments.length -  2);
while (G__7377__i < G__7377__a.length) {G__7377__a[G__7377__i] = arguments[G__7377__i + 2]; ++G__7377__i;}
G__7376 = new cljs.core.IndexedSeq(G__7377__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7376);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__4308__auto__ = x;
var y__4309__auto__ = y;
return ((x__4308__auto__ < y__4309__auto__) ? x__4308__auto__ : y__4309__auto__);
});
var min__3 = (function() { 
var G__7378__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__4308__auto__ = x;
var y__4309__auto__ = y;
return ((x__4308__auto__ < y__4309__auto__) ? x__4308__auto__ : y__4309__auto__);
})(),more);
};
var G__7378 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7379__i = 0, G__7379__a = new Array(arguments.length -  2);
while (G__7379__i < G__7379__a.length) {G__7379__a[G__7379__i] = arguments[G__7379__i + 2]; ++G__7379__i;}
  more = new cljs.core.IndexedSeq(G__7379__a,0);
} 
return G__7378__delegate.call(this,x,y,more);};
G__7378.cljs$lang$maxFixedArity = 2;
G__7378.cljs$lang$applyTo = (function (arglist__7380){
var x = cljs.core.first(arglist__7380);
arglist__7380 = cljs.core.next(arglist__7380);
var y = cljs.core.first(arglist__7380);
var more = cljs.core.rest(arglist__7380);
return G__7378__delegate(x,y,more);
});
G__7378.cljs$core$IFn$_invoke$arity$variadic = G__7378__delegate;
return G__7378;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__7381 = null;
if (arguments.length > 2) {
var G__7382__i = 0, G__7382__a = new Array(arguments.length -  2);
while (G__7382__i < G__7382__a.length) {G__7382__a[G__7382__i] = arguments[G__7382__i + 2]; ++G__7382__i;}
G__7381 = new cljs.core.IndexedSeq(G__7382__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7381);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__7383__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__7383 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7384__i = 0, G__7384__a = new Array(arguments.length -  2);
while (G__7384__i < G__7384__a.length) {G__7384__a[G__7384__i] = arguments[G__7384__i + 2]; ++G__7384__i;}
  more = new cljs.core.IndexedSeq(G__7384__a,0);
} 
return G__7383__delegate.call(this,x,y,more);};
G__7383.cljs$lang$maxFixedArity = 2;
G__7383.cljs$lang$applyTo = (function (arglist__7385){
var x = cljs.core.first(arglist__7385);
arglist__7385 = cljs.core.next(arglist__7385);
var y = cljs.core.first(arglist__7385);
var more = cljs.core.rest(arglist__7385);
return G__7383__delegate(x,y,more);
});
G__7383.cljs$core$IFn$_invoke$arity$variadic = G__7383__delegate;
return G__7383;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__7386 = null;
if (arguments.length > 2) {
var G__7387__i = 0, G__7387__a = new Array(arguments.length -  2);
while (G__7387__i < G__7387__a.length) {G__7387__a[G__7387__i] = arguments[G__7387__i + 2]; ++G__7387__i;}
G__7386 = new cljs.core.IndexedSeq(G__7387__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7386);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__7388__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__7388 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7389__i = 0, G__7389__a = new Array(arguments.length -  2);
while (G__7389__i < G__7389__a.length) {G__7389__a[G__7389__i] = arguments[G__7389__i + 2]; ++G__7389__i;}
  more = new cljs.core.IndexedSeq(G__7389__a,0);
} 
return G__7388__delegate.call(this,x,y,more);};
G__7388.cljs$lang$maxFixedArity = 2;
G__7388.cljs$lang$applyTo = (function (arglist__7390){
var x = cljs.core.first(arglist__7390);
arglist__7390 = cljs.core.next(arglist__7390);
var y = cljs.core.first(arglist__7390);
var more = cljs.core.rest(arglist__7390);
return G__7388__delegate(x,y,more);
});
G__7388.cljs$core$IFn$_invoke$arity$variadic = G__7388__delegate;
return G__7388;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__7391 = null;
if (arguments.length > 2) {
var G__7392__i = 0, G__7392__a = new Array(arguments.length -  2);
while (G__7392__i < G__7392__a.length) {G__7392__a[G__7392__i] = arguments[G__7392__i + 2]; ++G__7392__i;}
G__7391 = new cljs.core.IndexedSeq(G__7392__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7391);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__7397__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__7397 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7398__i = 0, G__7398__a = new Array(arguments.length -  2);
while (G__7398__i < G__7398__a.length) {G__7398__a[G__7398__i] = arguments[G__7398__i + 2]; ++G__7398__i;}
  more = new cljs.core.IndexedSeq(G__7398__a,0);
} 
return G__7397__delegate.call(this,x,y,more);};
G__7397.cljs$lang$maxFixedArity = 2;
G__7397.cljs$lang$applyTo = (function (arglist__7399){
var x = cljs.core.first(arglist__7399);
arglist__7399 = cljs.core.next(arglist__7399);
var y = cljs.core.first(arglist__7399);
var more = cljs.core.rest(arglist__7399);
return G__7397__delegate(x,y,more);
});
G__7397.cljs$core$IFn$_invoke$arity$variadic = G__7397__delegate;
return G__7397;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__7400 = null;
if (arguments.length > 2) {
var G__7401__i = 0, G__7401__a = new Array(arguments.length -  2);
while (G__7401__i < G__7401__a.length) {G__7401__a[G__7401__i] = arguments[G__7401__i + 2]; ++G__7401__i;}
G__7400 = new cljs.core.IndexedSeq(G__7401__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7400);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__7402__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__7402 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7403__i = 0, G__7403__a = new Array(arguments.length -  2);
while (G__7403__i < G__7403__a.length) {G__7403__a[G__7403__i] = arguments[G__7403__i + 2]; ++G__7403__i;}
  more = new cljs.core.IndexedSeq(G__7403__a,0);
} 
return G__7402__delegate.call(this,x,y,more);};
G__7402.cljs$lang$maxFixedArity = 2;
G__7402.cljs$lang$applyTo = (function (arglist__7404){
var x = cljs.core.first(arglist__7404);
arglist__7404 = cljs.core.next(arglist__7404);
var y = cljs.core.first(arglist__7404);
var more = cljs.core.rest(arglist__7404);
return G__7402__delegate(x,y,more);
});
G__7402.cljs$core$IFn$_invoke$arity$variadic = G__7402__delegate;
return G__7402;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__7405 = null;
if (arguments.length > 2) {
var G__7406__i = 0, G__7406__a = new Array(arguments.length -  2);
while (G__7406__i < G__7406__a.length) {G__7406__a[G__7406__i] = arguments[G__7406__i + 2]; ++G__7406__i;}
G__7405 = new cljs.core.IndexedSeq(G__7406__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7405);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__7407__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__7407 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7408__i = 0, G__7408__a = new Array(arguments.length -  2);
while (G__7408__i < G__7408__a.length) {G__7408__a[G__7408__i] = arguments[G__7408__i + 2]; ++G__7408__i;}
  more = new cljs.core.IndexedSeq(G__7408__a,0);
} 
return G__7407__delegate.call(this,x,y,more);};
G__7407.cljs$lang$maxFixedArity = 2;
G__7407.cljs$lang$applyTo = (function (arglist__7409){
var x = cljs.core.first(arglist__7409);
arglist__7409 = cljs.core.next(arglist__7409);
var y = cljs.core.first(arglist__7409);
var more = cljs.core.rest(arglist__7409);
return G__7407__delegate(x,y,more);
});
G__7407.cljs$core$IFn$_invoke$arity$variadic = G__7407__delegate;
return G__7407;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__7410 = null;
if (arguments.length > 2) {
var G__7411__i = 0, G__7411__a = new Array(arguments.length -  2);
while (G__7411__i < G__7411__a.length) {G__7411__a[G__7411__i] = arguments[G__7411__i + 2]; ++G__7411__i;}
G__7410 = new cljs.core.IndexedSeq(G__7411__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7410);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__7414 = x;
var G__7415 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__7414,G__7415) : cljs.core.mod.call(null,G__7414,G__7415));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__7416__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__7416 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7417__i = 0, G__7417__a = new Array(arguments.length -  2);
while (G__7417__i < G__7417__a.length) {G__7417__a[G__7417__i] = arguments[G__7417__i + 2]; ++G__7417__i;}
  more = new cljs.core.IndexedSeq(G__7417__a,0);
} 
return G__7416__delegate.call(this,x,y,more);};
G__7416.cljs$lang$maxFixedArity = 2;
G__7416.cljs$lang$applyTo = (function (arglist__7418){
var x = cljs.core.first(arglist__7418);
arglist__7418 = cljs.core.next(arglist__7418);
var y = cljs.core.first(arglist__7418);
var more = cljs.core.rest(arglist__7418);
return G__7416__delegate(x,y,more);
});
G__7416.cljs$core$IFn$_invoke$arity$variadic = G__7416__delegate;
return G__7416;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__7419 = null;
if (arguments.length > 2) {
var G__7420__i = 0, G__7420__a = new Array(arguments.length -  2);
while (G__7420__i < G__7420__a.length) {G__7420__a[G__7420__i] = arguments[G__7420__i + 2]; ++G__7420__i;}
G__7419 = new cljs.core.IndexedSeq(G__7420__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7419);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__7421__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__7421 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7422__i = 0, G__7422__a = new Array(arguments.length -  2);
while (G__7422__i < G__7422__a.length) {G__7422__a[G__7422__i] = arguments[G__7422__i + 2]; ++G__7422__i;}
  more = new cljs.core.IndexedSeq(G__7422__a,0);
} 
return G__7421__delegate.call(this,x,y,more);};
G__7421.cljs$lang$maxFixedArity = 2;
G__7421.cljs$lang$applyTo = (function (arglist__7423){
var x = cljs.core.first(arglist__7423);
arglist__7423 = cljs.core.next(arglist__7423);
var y = cljs.core.first(arglist__7423);
var more = cljs.core.rest(arglist__7423);
return G__7421__delegate(x,y,more);
});
G__7421.cljs$core$IFn$_invoke$arity$variadic = G__7421__delegate;
return G__7421;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__7424 = null;
if (arguments.length > 2) {
var G__7425__i = 0, G__7425__a = new Array(arguments.length -  2);
while (G__7425__i < G__7425__a.length) {G__7425__a[G__7425__i] = arguments[G__7425__i + 2]; ++G__7425__i;}
G__7424 = new cljs.core.IndexedSeq(G__7425__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7424);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__7428 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__7428) : Math.floor.call(null,G__7428));
} else {
var G__7429 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__7429) : Math.ceil.call(null,G__7429));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__7430__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__7430 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7431__i = 0, G__7431__a = new Array(arguments.length -  2);
while (G__7431__i < G__7431__a.length) {G__7431__a[G__7431__i] = arguments[G__7431__i + 2]; ++G__7431__i;}
  more = new cljs.core.IndexedSeq(G__7431__a,0);
} 
return G__7430__delegate.call(this,x,y,more);};
G__7430.cljs$lang$maxFixedArity = 2;
G__7430.cljs$lang$applyTo = (function (arglist__7432){
var x = cljs.core.first(arglist__7432);
arglist__7432 = cljs.core.next(arglist__7432);
var y = cljs.core.first(arglist__7432);
var more = cljs.core.rest(arglist__7432);
return G__7430__delegate(x,y,more);
});
G__7430.cljs$core$IFn$_invoke$arity$variadic = G__7430__delegate;
return G__7430;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__7433 = null;
if (arguments.length > 2) {
var G__7434__i = 0, G__7434__a = new Array(arguments.length -  2);
while (G__7434__i < G__7434__a.length) {G__7434__a[G__7434__i] = arguments[G__7434__i + 2]; ++G__7434__i;}
G__7433 = new cljs.core.IndexedSeq(G__7434__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7433);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__7435__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__7435 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7436__i = 0, G__7436__a = new Array(arguments.length -  2);
while (G__7436__i < G__7436__a.length) {G__7436__a[G__7436__i] = arguments[G__7436__i + 2]; ++G__7436__i;}
  more = new cljs.core.IndexedSeq(G__7436__a,0);
} 
return G__7435__delegate.call(this,x,y,more);};
G__7435.cljs$lang$maxFixedArity = 2;
G__7435.cljs$lang$applyTo = (function (arglist__7437){
var x = cljs.core.first(arglist__7437);
arglist__7437 = cljs.core.next(arglist__7437);
var y = cljs.core.first(arglist__7437);
var more = cljs.core.rest(arglist__7437);
return G__7435__delegate(x,y,more);
});
G__7435.cljs$core$IFn$_invoke$arity$variadic = G__7435__delegate;
return G__7435;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__7438 = null;
if (arguments.length > 2) {
var G__7439__i = 0, G__7439__a = new Array(arguments.length -  2);
while (G__7439__i < G__7439__a.length) {G__7439__a[G__7439__i] = arguments[G__7439__i + 2]; ++G__7439__i;}
G__7438 = new cljs.core.IndexedSeq(G__7439__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7438);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__7440__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__7440 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7441__i = 0, G__7441__a = new Array(arguments.length -  2);
while (G__7441__i < G__7441__a.length) {G__7441__a[G__7441__i] = arguments[G__7441__i + 2]; ++G__7441__i;}
  more = new cljs.core.IndexedSeq(G__7441__a,0);
} 
return G__7440__delegate.call(this,x,y,more);};
G__7440.cljs$lang$maxFixedArity = 2;
G__7440.cljs$lang$applyTo = (function (arglist__7442){
var x = cljs.core.first(arglist__7442);
arglist__7442 = cljs.core.next(arglist__7442);
var y = cljs.core.first(arglist__7442);
var more = cljs.core.rest(arglist__7442);
return G__7440__delegate(x,y,more);
});
G__7440.cljs$core$IFn$_invoke$arity$variadic = G__7440__delegate;
return G__7440;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__7443 = null;
if (arguments.length > 2) {
var G__7444__i = 0, G__7444__a = new Array(arguments.length -  2);
while (G__7444__i < G__7444__a.length) {G__7444__a[G__7444__i] = arguments[G__7444__i + 2]; ++G__7444__i;}
G__7443 = new cljs.core.IndexedSeq(G__7444__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7443);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__7445__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__7445 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7446__i = 0, G__7446__a = new Array(arguments.length -  2);
while (G__7446__i < G__7446__a.length) {G__7446__a[G__7446__i] = arguments[G__7446__i + 2]; ++G__7446__i;}
  more = new cljs.core.IndexedSeq(G__7446__a,0);
} 
return G__7445__delegate.call(this,x,y,more);};
G__7445.cljs$lang$maxFixedArity = 2;
G__7445.cljs$lang$applyTo = (function (arglist__7447){
var x = cljs.core.first(arglist__7447);
arglist__7447 = cljs.core.next(arglist__7447);
var y = cljs.core.first(arglist__7447);
var more = cljs.core.rest(arglist__7447);
return G__7445__delegate(x,y,more);
});
G__7445.cljs$core$IFn$_invoke$arity$variadic = G__7445__delegate;
return G__7445;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__7448 = null;
if (arguments.length > 2) {
var G__7449__i = 0, G__7449__a = new Array(arguments.length -  2);
while (G__7449__i < G__7449__a.length) {G__7449__a[G__7449__i] = arguments[G__7449__i + 2]; ++G__7449__i;}
G__7448 = new cljs.core.IndexedSeq(G__7449__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7448);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__7454__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__7455 = y;
var G__7456 = cljs.core.first(more);
var G__7457 = cljs.core.next(more);
x = G__7455;
y = G__7456;
more = G__7457;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__7454 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7458__i = 0, G__7458__a = new Array(arguments.length -  2);
while (G__7458__i < G__7458__a.length) {G__7458__a[G__7458__i] = arguments[G__7458__i + 2]; ++G__7458__i;}
  more = new cljs.core.IndexedSeq(G__7458__a,0);
} 
return G__7454__delegate.call(this,x,y,more);};
G__7454.cljs$lang$maxFixedArity = 2;
G__7454.cljs$lang$applyTo = (function (arglist__7459){
var x = cljs.core.first(arglist__7459);
arglist__7459 = cljs.core.next(arglist__7459);
var y = cljs.core.first(arglist__7459);
var more = cljs.core.rest(arglist__7459);
return G__7454__delegate(x,y,more);
});
G__7454.cljs$core$IFn$_invoke$arity$variadic = G__7454__delegate;
return G__7454;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__7460 = null;
if (arguments.length > 2) {
var G__7461__i = 0, G__7461__a = new Array(arguments.length -  2);
while (G__7461__i < G__7461__a.length) {G__7461__a[G__7461__i] = arguments[G__7461__i + 2]; ++G__7461__i;}
G__7460 = new cljs.core.IndexedSeq(G__7461__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7460);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__7462 = (n__$1 - (1));
var G__7463 = cljs.core.next(xs);
n__$1 = G__7462;
xs = G__7463;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__7467 = x;
return goog.string.buildString(G__7467);
}
});
var str__2 = (function() { 
var G__7468__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__7469 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__7470 = cljs.core.next(more);
sb = G__7469;
more = G__7470;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__7468 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__7471__i = 0, G__7471__a = new Array(arguments.length -  1);
while (G__7471__i < G__7471__a.length) {G__7471__a[G__7471__i] = arguments[G__7471__i + 1]; ++G__7471__i;}
  ys = new cljs.core.IndexedSeq(G__7471__a,0);
} 
return G__7468__delegate.call(this,x,ys);};
G__7468.cljs$lang$maxFixedArity = 1;
G__7468.cljs$lang$applyTo = (function (arglist__7472){
var x = cljs.core.first(arglist__7472);
var ys = cljs.core.rest(arglist__7472);
return G__7468__delegate(x,ys);
});
G__7468.cljs$core$IFn$_invoke$arity$variadic = G__7468__delegate;
return G__7468;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__7473 = null;
if (arguments.length > 1) {
var G__7474__i = 0, G__7474__a = new Array(arguments.length -  1);
while (G__7474__i < G__7474__a.length) {G__7474__a[G__7474__i] = arguments[G__7474__i + 1]; ++G__7474__i;}
G__7473 = new cljs.core.IndexedSeq(G__7474__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__7473);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__7475 = cljs.core.next(xs);
var G__7476 = cljs.core.next(ys);
xs = G__7475;
ys = G__7476;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__7477 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__7478 = cljs.core.next(s);
res = G__7477;
s = G__7478;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__7483 = ((h + (cljs.core.hash((function (){var G__7481 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__7481) : cljs.core.key.call(null,G__7481));
})()) ^ cljs.core.hash((function (){var G__7482 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__7482) : cljs.core.val.call(null,G__7482));
})()))) % (4503599627370496));
var G__7484 = cljs.core.next(s);
h = G__7483;
s = G__7484;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__7485 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__7486 = cljs.core.next(s__$1);
h = G__7485;
s__$1 = G__7486;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__7497_7507 = cljs.core.seq(fn_map);
var chunk__7498_7508 = null;
var count__7499_7509 = (0);
var i__7500_7510 = (0);
while(true){
if((i__7500_7510 < count__7499_7509)){
var vec__7501_7511 = chunk__7498_7508.cljs$core$IIndexed$_nth$arity$2(null,i__7500_7510);
var key_name_7512 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7501_7511,(0),null);
var f_7513 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7501_7511,(1),null);
var str_name_7514 = (function (){var G__7502 = key_name_7512;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__7502) : cljs.core.name.call(null,G__7502));
})();
(obj[str_name_7514] = f_7513);

var G__7515 = seq__7497_7507;
var G__7516 = chunk__7498_7508;
var G__7517 = count__7499_7509;
var G__7518 = (i__7500_7510 + (1));
seq__7497_7507 = G__7515;
chunk__7498_7508 = G__7516;
count__7499_7509 = G__7517;
i__7500_7510 = G__7518;
continue;
} else {
var temp__4126__auto___7519 = cljs.core.seq(seq__7497_7507);
if(temp__4126__auto___7519){
var seq__7497_7520__$1 = temp__4126__auto___7519;
if(cljs.core.chunked_seq_QMARK_(seq__7497_7520__$1)){
var c__4771__auto___7521 = (function (){var G__7503 = seq__7497_7520__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__7503) : cljs.core.chunk_first.call(null,G__7503));
})();
var G__7522 = (function (){var G__7504 = seq__7497_7520__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__7504) : cljs.core.chunk_rest.call(null,G__7504));
})();
var G__7523 = c__4771__auto___7521;
var G__7524 = cljs.core.count(c__4771__auto___7521);
var G__7525 = (0);
seq__7497_7507 = G__7522;
chunk__7498_7508 = G__7523;
count__7499_7509 = G__7524;
i__7500_7510 = G__7525;
continue;
} else {
var vec__7505_7526 = cljs.core.first(seq__7497_7520__$1);
var key_name_7527 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7505_7526,(0),null);
var f_7528 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7505_7526,(1),null);
var str_name_7529 = (function (){var G__7506 = key_name_7527;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__7506) : cljs.core.name.call(null,G__7506));
})();
(obj[str_name_7529] = f_7528);

var G__7530 = cljs.core.next(seq__7497_7520__$1);
var G__7531 = null;
var G__7532 = (0);
var G__7533 = (0);
seq__7497_7507 = G__7530;
chunk__7498_7508 = G__7531;
count__7499_7509 = G__7532;
i__7500_7510 = G__7533;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4405__auto__ = self__.__hash;
if(!((h__4405__auto__ == null))){
return h__4405__auto__;
} else {
var h__4405__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4405__auto____$1;

return h__4405__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4962__auto__ = this;
return cljs.core.es6_iterator(this__4962__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4962__auto__ = this;
return cljs.core.es6_iterator(this__4962__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__7535 = coll;
if(G__7535){
var bit__4665__auto__ = (G__7535.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__4665__auto__) || (G__7535.cljs$core$IReversible$)){
return true;
} else {
if((!G__7535.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__7535);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__7535);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__7536 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__7536;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__7537 = (i - (1));
var G__7538 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__7537;
r = G__7538;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__7539__i = 0, G__7539__a = new Array(arguments.length -  0);
while (G__7539__i < G__7539__a.length) {G__7539__a[G__7539__i] = arguments[G__7539__i + 0]; ++G__7539__i;}
  xs = new cljs.core.IndexedSeq(G__7539__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__7540){
var xs = cljs.core.seq(arglist__7540);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4405__auto__ = self__.__hash;
if(!((h__4405__auto__ == null))){
return h__4405__auto__;
} else {
var h__4405__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4405__auto____$1;

return h__4405__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4962__auto__ = this;
return cljs.core.es6_iterator(this__4962__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__3984__auto__ = (coll == null);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var G__7544 = coll;
if(G__7544){
var bit__4658__auto__ = (G__7544.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4658__auto__) || (G__7544.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__7546 = x;
if(G__7546){
var bit__4665__auto__ = (G__7546.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__4665__auto__) || (G__7546.cljs$core$IList$)){
return true;
} else {
if((!G__7546.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__7546);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__7546);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3972__auto__ = cljs.core.not(a.ns);
if(and__3972__auto__){
return b.ns;
} else {
return and__3972__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__7553 = a.ns;
var G__7554 = b.ns;
return goog.array.defaultCompare(G__7553,G__7554);
})();
if(((0) === nsc)){
var G__7555 = a.name;
var G__7556 = b.name;
return goog.array.defaultCompare(G__7555,G__7556);
} else {
return nsc;
}
}
} else {
var G__7557 = a.name;
var G__7558 = b.name;
return goog.array.defaultCompare(G__7557,G__7558);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__4405__auto__ = self__._hash;
if(!((h__4405__auto__ == null))){
return h__4405__auto__;
} else {
var h__4405__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__4405__auto____$1;

return h__4405__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__7560 = null;
var G__7560__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__7560__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__7560 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__7560__2.call(this,self__,coll);
case 3:
return G__7560__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7560.cljs$core$IFn$_invoke$arity$2 = G__7560__2;
G__7560.cljs$core$IFn$_invoke$arity$3 = G__7560__3;
return G__7560;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args7559){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args7559)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__7562 = x;
if(G__7562){
var bit__4658__auto__ = (G__7562.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4658__auto__) || (G__7562.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__7564 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__7564) : cljs.core.name.call(null,G__7564));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4405__auto__ = self__.__hash;
if(!((h__4405__auto__ == null))){
return h__4405__auto__;
} else {
var h__4405__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4405__auto____$1;

return h__4405__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__7565 = ls.sval();
ls = G__7565;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4962__auto__ = this;
return cljs.core.es6_iterator(this__4962__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4405__auto__ = self__.__hash;
if(!((h__4405__auto__ == null))){
return h__4405__auto__;
} else {
var h__4405__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4405__auto____$1;

return h__4405__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4962__auto__ = this;
return cljs.core.es6_iterator(this__4962__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__7567 = s;
if(G__7567){
var bit__4658__auto__ = (G__7567.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__4658__auto__) || (G__7567.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__7568 = cljs.core.next(s__$1);
s__$1 = G__7568;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_7569 = (0);
var xs_7570 = cljs.core.seq(coll);
while(true){
if(xs_7570){
(ret[i_7569] = cljs.core.to_array(cljs.core.first(xs_7570)));

var G__7571 = (i_7569 + (1));
var G__7572 = cljs.core.next(xs_7570);
i_7569 = G__7571;
xs_7570 = G__7572;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__7575 = (i + (1));
var G__7576 = cljs.core.next(s__$1);
i = G__7575;
s__$1 = G__7576;
continue;
} else {
return a;
}
break;
}
} else {
var n__4871__auto___7577 = size;
var i_7578 = (0);
while(true){
if((i_7578 < n__4871__auto___7577)){
(a[i_7578] = init_val_or_seq);

var G__7579 = (i_7578 + (1));
i_7578 = G__7579;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__7582 = (i + (1));
var G__7583 = cljs.core.next(s__$1);
i = G__7582;
s__$1 = G__7583;
continue;
} else {
return a;
}
break;
}
} else {
var n__4871__auto___7584 = size;
var i_7585 = (0);
while(true){
if((i_7585 < n__4871__auto___7584)){
(a[i_7585] = init_val_or_seq);

var G__7586 = (i_7585 + (1));
i_7585 = G__7586;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__7589 = (i + (1));
var G__7590 = cljs.core.next(s__$1);
i = G__7589;
s__$1 = G__7590;
continue;
} else {
return a;
}
break;
}
} else {
var n__4871__auto___7591 = size;
var i_7592 = (0);
while(true){
if((i_7592 < n__4871__auto___7591)){
(a[i_7592] = init_val_or_seq);

var G__7593 = (i_7592 + (1));
i_7592 = G__7593;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__7596 = (i + (1));
var G__7597 = cljs.core.next(s__$1);
i = G__7596;
s__$1 = G__7597;
continue;
} else {
return a;
}
break;
}
} else {
var n__4871__auto___7598 = size;
var i_7599 = (0);
while(true){
if((i_7599 < n__4871__auto___7598)){
(a[i_7599] = init_val_or_seq);

var G__7600 = (i_7599 + (1));
i_7599 = G__7600;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__7601 = cljs.core.next(s__$1);
var G__7602 = (i - (1));
var G__7603 = (sum + (1));
s__$1 = G__7601;
i = G__7602;
sum = G__7603;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__7623__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__7623 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__7624__i = 0, G__7624__a = new Array(arguments.length -  2);
while (G__7624__i < G__7624__a.length) {G__7624__a[G__7624__i] = arguments[G__7624__i + 2]; ++G__7624__i;}
  zs = new cljs.core.IndexedSeq(G__7624__a,0);
} 
return G__7623__delegate.call(this,x,y,zs);};
G__7623.cljs$lang$maxFixedArity = 2;
G__7623.cljs$lang$applyTo = (function (arglist__7625){
var x = cljs.core.first(arglist__7625);
arglist__7625 = cljs.core.next(arglist__7625);
var y = cljs.core.first(arglist__7625);
var zs = cljs.core.rest(arglist__7625);
return G__7623__delegate(x,y,zs);
});
G__7623.cljs$core$IFn$_invoke$arity$variadic = G__7623__delegate;
return G__7623;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__7626 = null;
if (arguments.length > 2) {
var G__7627__i = 0, G__7627__a = new Array(arguments.length -  2);
while (G__7627__i < G__7627__a.length) {G__7627__a[G__7627__i] = arguments[G__7627__i + 2]; ++G__7627__i;}
G__7626 = new cljs.core.IndexedSeq(G__7627__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7626);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__7628__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__7628 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__7629__i = 0, G__7629__a = new Array(arguments.length -  4);
while (G__7629__i < G__7629__a.length) {G__7629__a[G__7629__i] = arguments[G__7629__i + 4]; ++G__7629__i;}
  more = new cljs.core.IndexedSeq(G__7629__a,0);
} 
return G__7628__delegate.call(this,a,b,c,d,more);};
G__7628.cljs$lang$maxFixedArity = 4;
G__7628.cljs$lang$applyTo = (function (arglist__7630){
var a = cljs.core.first(arglist__7630);
arglist__7630 = cljs.core.next(arglist__7630);
var b = cljs.core.first(arglist__7630);
arglist__7630 = cljs.core.next(arglist__7630);
var c = cljs.core.first(arglist__7630);
arglist__7630 = cljs.core.next(arglist__7630);
var d = cljs.core.first(arglist__7630);
var more = cljs.core.rest(arglist__7630);
return G__7628__delegate(a,b,c,d,more);
});
G__7628.cljs$core$IFn$_invoke$arity$variadic = G__7628__delegate;
return G__7628;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__7631 = null;
if (arguments.length > 4) {
var G__7632__i = 0, G__7632__a = new Array(arguments.length -  4);
while (G__7632__i < G__7632__a.length) {G__7632__a[G__7632__i] = arguments[G__7632__i + 4]; ++G__7632__i;}
G__7631 = new cljs.core.IndexedSeq(G__7632__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__7631);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__7633__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__7634 = ntcoll;
var G__7635 = cljs.core.first(vals);
var G__7636 = cljs.core.next(vals);
tcoll = G__7634;
val = G__7635;
vals = G__7636;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__7633 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__7637__i = 0, G__7637__a = new Array(arguments.length -  2);
while (G__7637__i < G__7637__a.length) {G__7637__a[G__7637__i] = arguments[G__7637__i + 2]; ++G__7637__i;}
  vals = new cljs.core.IndexedSeq(G__7637__a,0);
} 
return G__7633__delegate.call(this,tcoll,val,vals);};
G__7633.cljs$lang$maxFixedArity = 2;
G__7633.cljs$lang$applyTo = (function (arglist__7638){
var tcoll = cljs.core.first(arglist__7638);
arglist__7638 = cljs.core.next(arglist__7638);
var val = cljs.core.first(arglist__7638);
var vals = cljs.core.rest(arglist__7638);
return G__7633__delegate(tcoll,val,vals);
});
G__7633.cljs$core$IFn$_invoke$arity$variadic = G__7633__delegate;
return G__7633;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__7639 = null;
if (arguments.length > 2) {
var G__7640__i = 0, G__7640__a = new Array(arguments.length -  2);
while (G__7640__i < G__7640__a.length) {G__7640__a[G__7640__i] = arguments[G__7640__i + 2]; ++G__7640__i;}
G__7639 = new cljs.core.IndexedSeq(G__7640__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__7639);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__7641__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__7642 = ntcoll;
var G__7643 = cljs.core.first(kvs);
var G__7644 = cljs.core.second(kvs);
var G__7645 = cljs.core.nnext(kvs);
tcoll = G__7642;
key = G__7643;
val = G__7644;
kvs = G__7645;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__7641 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__7646__i = 0, G__7646__a = new Array(arguments.length -  3);
while (G__7646__i < G__7646__a.length) {G__7646__a[G__7646__i] = arguments[G__7646__i + 3]; ++G__7646__i;}
  kvs = new cljs.core.IndexedSeq(G__7646__a,0);
} 
return G__7641__delegate.call(this,tcoll,key,val,kvs);};
G__7641.cljs$lang$maxFixedArity = 3;
G__7641.cljs$lang$applyTo = (function (arglist__7647){
var tcoll = cljs.core.first(arglist__7647);
arglist__7647 = cljs.core.next(arglist__7647);
var key = cljs.core.first(arglist__7647);
arglist__7647 = cljs.core.next(arglist__7647);
var val = cljs.core.first(arglist__7647);
var kvs = cljs.core.rest(arglist__7647);
return G__7641__delegate(tcoll,key,val,kvs);
});
G__7641.cljs$core$IFn$_invoke$arity$variadic = G__7641__delegate;
return G__7641;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__7648 = null;
if (arguments.length > 3) {
var G__7649__i = 0, G__7649__a = new Array(arguments.length -  3);
while (G__7649__i < G__7649__a.length) {G__7649__a[G__7649__i] = arguments[G__7649__i + 3]; ++G__7649__i;}
G__7648 = new cljs.core.IndexedSeq(G__7649__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__7648);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__7650__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__7651 = ntcoll;
var G__7652 = cljs.core.first(ks);
var G__7653 = cljs.core.next(ks);
tcoll = G__7651;
key = G__7652;
ks = G__7653;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__7650 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__7654__i = 0, G__7654__a = new Array(arguments.length -  2);
while (G__7654__i < G__7654__a.length) {G__7654__a[G__7654__i] = arguments[G__7654__i + 2]; ++G__7654__i;}
  ks = new cljs.core.IndexedSeq(G__7654__a,0);
} 
return G__7650__delegate.call(this,tcoll,key,ks);};
G__7650.cljs$lang$maxFixedArity = 2;
G__7650.cljs$lang$applyTo = (function (arglist__7655){
var tcoll = cljs.core.first(arglist__7655);
arglist__7655 = cljs.core.next(arglist__7655);
var key = cljs.core.first(arglist__7655);
var ks = cljs.core.rest(arglist__7655);
return G__7650__delegate(tcoll,key,ks);
});
G__7650.cljs$core$IFn$_invoke$arity$variadic = G__7650__delegate;
return G__7650;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__7656 = null;
if (arguments.length > 2) {
var G__7657__i = 0, G__7657__a = new Array(arguments.length -  2);
while (G__7657__i < G__7657__a.length) {G__7657__a[G__7657__i] = arguments[G__7657__i + 2]; ++G__7657__i;}
G__7656 = new cljs.core.IndexedSeq(G__7657__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__7656);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__7658__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__7659 = ntcoll;
var G__7660 = cljs.core.first(vals);
var G__7661 = cljs.core.next(vals);
tcoll = G__7659;
val = G__7660;
vals = G__7661;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__7658 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__7662__i = 0, G__7662__a = new Array(arguments.length -  2);
while (G__7662__i < G__7662__a.length) {G__7662__a[G__7662__i] = arguments[G__7662__i + 2]; ++G__7662__i;}
  vals = new cljs.core.IndexedSeq(G__7662__a,0);
} 
return G__7658__delegate.call(this,tcoll,val,vals);};
G__7658.cljs$lang$maxFixedArity = 2;
G__7658.cljs$lang$applyTo = (function (arglist__7663){
var tcoll = cljs.core.first(arglist__7663);
arglist__7663 = cljs.core.next(arglist__7663);
var val = cljs.core.first(arglist__7663);
var vals = cljs.core.rest(arglist__7663);
return G__7658__delegate(tcoll,val,vals);
});
G__7658.cljs$core$IFn$_invoke$arity$variadic = G__7658__delegate;
return G__7658;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__7664 = null;
if (arguments.length > 2) {
var G__7665__i = 0, G__7665__a = new Array(arguments.length -  2);
while (G__7665__i < G__7665__a.length) {G__7665__a[G__7665__i] = arguments[G__7665__i + 2]; ++G__7665__i;}
G__7664 = new cljs.core.IndexedSeq(G__7665__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__7664);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a4915 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a4915);
} else {
var G__7876 = a4915;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7876) : f.call(null,G__7876));
}
} else {
var b4916 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a4915,b4916);
} else {
var G__7877 = a4915;
var G__7878 = b4916;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7877,G__7878) : f.call(null,G__7877,G__7878));
}
} else {
var c4917 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a4915,b4916,c4917);
} else {
var G__7879 = a4915;
var G__7880 = b4916;
var G__7881 = c4917;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7879,G__7880,G__7881) : f.call(null,G__7879,G__7880,G__7881));
}
} else {
var d4918 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a4915,b4916,c4917,d4918);
} else {
var G__7882 = a4915;
var G__7883 = b4916;
var G__7884 = c4917;
var G__7885 = d4918;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7882,G__7883,G__7884,G__7885) : f.call(null,G__7882,G__7883,G__7884,G__7885));
}
} else {
var e4919 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a4915,b4916,c4917,d4918,e4919);
} else {
var G__7886 = a4915;
var G__7887 = b4916;
var G__7888 = c4917;
var G__7889 = d4918;
var G__7890 = e4919;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__7886,G__7887,G__7888,G__7889,G__7890) : f.call(null,G__7886,G__7887,G__7888,G__7889,G__7890));
}
} else {
var f4920 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a4915,b4916,c4917,d4918,e4919,f4920);
} else {
var G__7891 = a4915;
var G__7892 = b4916;
var G__7893 = c4917;
var G__7894 = d4918;
var G__7895 = e4919;
var G__7896 = f4920;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__7891,G__7892,G__7893,G__7894,G__7895,G__7896) : f.call(null,G__7891,G__7892,G__7893,G__7894,G__7895,G__7896));
}
} else {
var g4921 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a4915,b4916,c4917,d4918,e4919,f4920,g4921);
} else {
var G__7897 = a4915;
var G__7898 = b4916;
var G__7899 = c4917;
var G__7900 = d4918;
var G__7901 = e4919;
var G__7902 = f4920;
var G__7903 = g4921;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__7897,G__7898,G__7899,G__7900,G__7901,G__7902,G__7903) : f.call(null,G__7897,G__7898,G__7899,G__7900,G__7901,G__7902,G__7903));
}
} else {
var h4922 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a4915,b4916,c4917,d4918,e4919,f4920,g4921,h4922);
} else {
var G__7904 = a4915;
var G__7905 = b4916;
var G__7906 = c4917;
var G__7907 = d4918;
var G__7908 = e4919;
var G__7909 = f4920;
var G__7910 = g4921;
var G__7911 = h4922;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__7904,G__7905,G__7906,G__7907,G__7908,G__7909,G__7910,G__7911) : f.call(null,G__7904,G__7905,G__7906,G__7907,G__7908,G__7909,G__7910,G__7911));
}
} else {
var i4923 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a4915,b4916,c4917,d4918,e4919,f4920,g4921,h4922,i4923);
} else {
var G__7912 = a4915;
var G__7913 = b4916;
var G__7914 = c4917;
var G__7915 = d4918;
var G__7916 = e4919;
var G__7917 = f4920;
var G__7918 = g4921;
var G__7919 = h4922;
var G__7920 = i4923;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__7912,G__7913,G__7914,G__7915,G__7916,G__7917,G__7918,G__7919,G__7920) : f.call(null,G__7912,G__7913,G__7914,G__7915,G__7916,G__7917,G__7918,G__7919,G__7920));
}
} else {
var j4924 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a4915,b4916,c4917,d4918,e4919,f4920,g4921,h4922,i4923,j4924);
} else {
var G__7921 = a4915;
var G__7922 = b4916;
var G__7923 = c4917;
var G__7924 = d4918;
var G__7925 = e4919;
var G__7926 = f4920;
var G__7927 = g4921;
var G__7928 = h4922;
var G__7929 = i4923;
var G__7930 = j4924;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__7921,G__7922,G__7923,G__7924,G__7925,G__7926,G__7927,G__7928,G__7929,G__7930) : f.call(null,G__7921,G__7922,G__7923,G__7924,G__7925,G__7926,G__7927,G__7928,G__7929,G__7930));
}
} else {
var k4925 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a4915,b4916,c4917,d4918,e4919,f4920,g4921,h4922,i4923,j4924,k4925);
} else {
var G__7931 = a4915;
var G__7932 = b4916;
var G__7933 = c4917;
var G__7934 = d4918;
var G__7935 = e4919;
var G__7936 = f4920;
var G__7937 = g4921;
var G__7938 = h4922;
var G__7939 = i4923;
var G__7940 = j4924;
var G__7941 = k4925;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__7931,G__7932,G__7933,G__7934,G__7935,G__7936,G__7937,G__7938,G__7939,G__7940,G__7941) : f.call(null,G__7931,G__7932,G__7933,G__7934,G__7935,G__7936,G__7937,G__7938,G__7939,G__7940,G__7941));
}
} else {
var l4926 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a4915,b4916,c4917,d4918,e4919,f4920,g4921,h4922,i4923,j4924,k4925,l4926);
} else {
var G__7942 = a4915;
var G__7943 = b4916;
var G__7944 = c4917;
var G__7945 = d4918;
var G__7946 = e4919;
var G__7947 = f4920;
var G__7948 = g4921;
var G__7949 = h4922;
var G__7950 = i4923;
var G__7951 = j4924;
var G__7952 = k4925;
var G__7953 = l4926;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__7942,G__7943,G__7944,G__7945,G__7946,G__7947,G__7948,G__7949,G__7950,G__7951,G__7952,G__7953) : f.call(null,G__7942,G__7943,G__7944,G__7945,G__7946,G__7947,G__7948,G__7949,G__7950,G__7951,G__7952,G__7953));
}
} else {
var m4927 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a4915,b4916,c4917,d4918,e4919,f4920,g4921,h4922,i4923,j4924,k4925,l4926,m4927);
} else {
var G__7954 = a4915;
var G__7955 = b4916;
var G__7956 = c4917;
var G__7957 = d4918;
var G__7958 = e4919;
var G__7959 = f4920;
var G__7960 = g4921;
var G__7961 = h4922;
var G__7962 = i4923;
var G__7963 = j4924;
var G__7964 = k4925;
var G__7965 = l4926;
var G__7966 = m4927;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__7954,G__7955,G__7956,G__7957,G__7958,G__7959,G__7960,G__7961,G__7962,G__7963,G__7964,G__7965,G__7966) : f.call(null,G__7954,G__7955,G__7956,G__7957,G__7958,G__7959,G__7960,G__7961,G__7962,G__7963,G__7964,G__7965,G__7966));
}
} else {
var n4928 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a4915,b4916,c4917,d4918,e4919,f4920,g4921,h4922,i4923,j4924,k4925,l4926,m4927,n4928);
} else {
var G__7967 = a4915;
var G__7968 = b4916;
var G__7969 = c4917;
var G__7970 = d4918;
var G__7971 = e4919;
var G__7972 = f4920;
var G__7973 = g4921;
var G__7974 = h4922;
var G__7975 = i4923;
var G__7976 = j4924;
var G__7977 = k4925;
var G__7978 = l4926;
var G__7979 = m4927;
var G__7980 = n4928;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__7967,G__7968,G__7969,G__7970,G__7971,G__7972,G__7973,G__7974,G__7975,G__7976,G__7977,G__7978,G__7979,G__7980) : f.call(null,G__7967,G__7968,G__7969,G__7970,G__7971,G__7972,G__7973,G__7974,G__7975,G__7976,G__7977,G__7978,G__7979,G__7980));
}
} else {
var o4929 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a4915,b4916,c4917,d4918,e4919,f4920,g4921,h4922,i4923,j4924,k4925,l4926,m4927,n4928,o4929);
} else {
var G__7981 = a4915;
var G__7982 = b4916;
var G__7983 = c4917;
var G__7984 = d4918;
var G__7985 = e4919;
var G__7986 = f4920;
var G__7987 = g4921;
var G__7988 = h4922;
var G__7989 = i4923;
var G__7990 = j4924;
var G__7991 = k4925;
var G__7992 = l4926;
var G__7993 = m4927;
var G__7994 = n4928;
var G__7995 = o4929;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__7981,G__7982,G__7983,G__7984,G__7985,G__7986,G__7987,G__7988,G__7989,G__7990,G__7991,G__7992,G__7993,G__7994,G__7995) : f.call(null,G__7981,G__7982,G__7983,G__7984,G__7985,G__7986,G__7987,G__7988,G__7989,G__7990,G__7991,G__7992,G__7993,G__7994,G__7995));
}
} else {
var p4930 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a4915,b4916,c4917,d4918,e4919,f4920,g4921,h4922,i4923,j4924,k4925,l4926,m4927,n4928,o4929,p4930);
} else {
var G__7996 = a4915;
var G__7997 = b4916;
var G__7998 = c4917;
var G__7999 = d4918;
var G__8000 = e4919;
var G__8001 = f4920;
var G__8002 = g4921;
var G__8003 = h4922;
var G__8004 = i4923;
var G__8005 = j4924;
var G__8006 = k4925;
var G__8007 = l4926;
var G__8008 = m4927;
var G__8009 = n4928;
var G__8010 = o4929;
var G__8011 = p4930;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__7996,G__7997,G__7998,G__7999,G__8000,G__8001,G__8002,G__8003,G__8004,G__8005,G__8006,G__8007,G__8008,G__8009,G__8010,G__8011) : f.call(null,G__7996,G__7997,G__7998,G__7999,G__8000,G__8001,G__8002,G__8003,G__8004,G__8005,G__8006,G__8007,G__8008,G__8009,G__8010,G__8011));
}
} else {
var q4931 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a4915,b4916,c4917,d4918,e4919,f4920,g4921,h4922,i4923,j4924,k4925,l4926,m4927,n4928,o4929,p4930,q4931);
} else {
var G__8012 = a4915;
var G__8013 = b4916;
var G__8014 = c4917;
var G__8015 = d4918;
var G__8016 = e4919;
var G__8017 = f4920;
var G__8018 = g4921;
var G__8019 = h4922;
var G__8020 = i4923;
var G__8021 = j4924;
var G__8022 = k4925;
var G__8023 = l4926;
var G__8024 = m4927;
var G__8025 = n4928;
var G__8026 = o4929;
var G__8027 = p4930;
var G__8028 = q4931;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__8012,G__8013,G__8014,G__8015,G__8016,G__8017,G__8018,G__8019,G__8020,G__8021,G__8022,G__8023,G__8024,G__8025,G__8026,G__8027,G__8028) : f.call(null,G__8012,G__8013,G__8014,G__8015,G__8016,G__8017,G__8018,G__8019,G__8020,G__8021,G__8022,G__8023,G__8024,G__8025,G__8026,G__8027,G__8028));
}
} else {
var r4932 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a4915,b4916,c4917,d4918,e4919,f4920,g4921,h4922,i4923,j4924,k4925,l4926,m4927,n4928,o4929,p4930,q4931,r4932);
} else {
var G__8029 = a4915;
var G__8030 = b4916;
var G__8031 = c4917;
var G__8032 = d4918;
var G__8033 = e4919;
var G__8034 = f4920;
var G__8035 = g4921;
var G__8036 = h4922;
var G__8037 = i4923;
var G__8038 = j4924;
var G__8039 = k4925;
var G__8040 = l4926;
var G__8041 = m4927;
var G__8042 = n4928;
var G__8043 = o4929;
var G__8044 = p4930;
var G__8045 = q4931;
var G__8046 = r4932;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__8029,G__8030,G__8031,G__8032,G__8033,G__8034,G__8035,G__8036,G__8037,G__8038,G__8039,G__8040,G__8041,G__8042,G__8043,G__8044,G__8045,G__8046) : f.call(null,G__8029,G__8030,G__8031,G__8032,G__8033,G__8034,G__8035,G__8036,G__8037,G__8038,G__8039,G__8040,G__8041,G__8042,G__8043,G__8044,G__8045,G__8046));
}
} else {
var s4933 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a4915,b4916,c4917,d4918,e4919,f4920,g4921,h4922,i4923,j4924,k4925,l4926,m4927,n4928,o4929,p4930,q4931,r4932,s4933);
} else {
var G__8047 = a4915;
var G__8048 = b4916;
var G__8049 = c4917;
var G__8050 = d4918;
var G__8051 = e4919;
var G__8052 = f4920;
var G__8053 = g4921;
var G__8054 = h4922;
var G__8055 = i4923;
var G__8056 = j4924;
var G__8057 = k4925;
var G__8058 = l4926;
var G__8059 = m4927;
var G__8060 = n4928;
var G__8061 = o4929;
var G__8062 = p4930;
var G__8063 = q4931;
var G__8064 = r4932;
var G__8065 = s4933;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__8047,G__8048,G__8049,G__8050,G__8051,G__8052,G__8053,G__8054,G__8055,G__8056,G__8057,G__8058,G__8059,G__8060,G__8061,G__8062,G__8063,G__8064,G__8065) : f.call(null,G__8047,G__8048,G__8049,G__8050,G__8051,G__8052,G__8053,G__8054,G__8055,G__8056,G__8057,G__8058,G__8059,G__8060,G__8061,G__8062,G__8063,G__8064,G__8065));
}
} else {
var t4934 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a4915,b4916,c4917,d4918,e4919,f4920,g4921,h4922,i4923,j4924,k4925,l4926,m4927,n4928,o4929,p4930,q4931,r4932,s4933,t4934);
} else {
var G__8066 = a4915;
var G__8067 = b4916;
var G__8068 = c4917;
var G__8069 = d4918;
var G__8070 = e4919;
var G__8071 = f4920;
var G__8072 = g4921;
var G__8073 = h4922;
var G__8074 = i4923;
var G__8075 = j4924;
var G__8076 = k4925;
var G__8077 = l4926;
var G__8078 = m4927;
var G__8079 = n4928;
var G__8080 = o4929;
var G__8081 = p4930;
var G__8082 = q4931;
var G__8083 = r4932;
var G__8084 = s4933;
var G__8085 = t4934;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__8066,G__8067,G__8068,G__8069,G__8070,G__8071,G__8072,G__8073,G__8074,G__8075,G__8076,G__8077,G__8078,G__8079,G__8080,G__8081,G__8082,G__8083,G__8084,G__8085) : f.call(null,G__8066,G__8067,G__8068,G__8069,G__8070,G__8071,G__8072,G__8073,G__8074,G__8075,G__8076,G__8077,G__8078,G__8079,G__8080,G__8081,G__8082,G__8083,G__8084,G__8085));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__8086__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__8086 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__8087__i = 0, G__8087__a = new Array(arguments.length -  5);
while (G__8087__i < G__8087__a.length) {G__8087__a[G__8087__i] = arguments[G__8087__i + 5]; ++G__8087__i;}
  args = new cljs.core.IndexedSeq(G__8087__a,0);
} 
return G__8086__delegate.call(this,f,a,b,c,d,args);};
G__8086.cljs$lang$maxFixedArity = 5;
G__8086.cljs$lang$applyTo = (function (arglist__8088){
var f = cljs.core.first(arglist__8088);
arglist__8088 = cljs.core.next(arglist__8088);
var a = cljs.core.first(arglist__8088);
arglist__8088 = cljs.core.next(arglist__8088);
var b = cljs.core.first(arglist__8088);
arglist__8088 = cljs.core.next(arglist__8088);
var c = cljs.core.first(arglist__8088);
arglist__8088 = cljs.core.next(arglist__8088);
var d = cljs.core.first(arglist__8088);
var args = cljs.core.rest(arglist__8088);
return G__8086__delegate(f,a,b,c,d,args);
});
G__8086.cljs$core$IFn$_invoke$arity$variadic = G__8086__delegate;
return G__8086;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__8089 = null;
if (arguments.length > 5) {
var G__8090__i = 0, G__8090__a = new Array(arguments.length -  5);
while (G__8090__i < G__8090__a.length) {G__8090__a[G__8090__i] = arguments[G__8090__i + 5]; ++G__8090__i;}
G__8089 = new cljs.core.IndexedSeq(G__8090__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__8089);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__8106 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8106) : f.call(null,G__8106));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__8107 = cljs.core.meta(obj);
var G__8108 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8107,G__8108) : f.call(null,G__8107,G__8108));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__8109 = cljs.core.meta(obj);
var G__8110 = a;
var G__8111 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8109,G__8110,G__8111) : f.call(null,G__8109,G__8110,G__8111));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__8112 = cljs.core.meta(obj);
var G__8113 = a;
var G__8114 = b;
var G__8115 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8112,G__8113,G__8114,G__8115) : f.call(null,G__8112,G__8113,G__8114,G__8115));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__8116 = cljs.core.meta(obj);
var G__8117 = a;
var G__8118 = b;
var G__8119 = c;
var G__8120 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__8116,G__8117,G__8118,G__8119,G__8120) : f.call(null,G__8116,G__8117,G__8118,G__8119,G__8120));
})());
});
var vary_meta__7 = (function() { 
var G__8121__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__8121 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__8122__i = 0, G__8122__a = new Array(arguments.length -  6);
while (G__8122__i < G__8122__a.length) {G__8122__a[G__8122__i] = arguments[G__8122__i + 6]; ++G__8122__i;}
  args = new cljs.core.IndexedSeq(G__8122__a,0);
} 
return G__8121__delegate.call(this,obj,f,a,b,c,d,args);};
G__8121.cljs$lang$maxFixedArity = 6;
G__8121.cljs$lang$applyTo = (function (arglist__8123){
var obj = cljs.core.first(arglist__8123);
arglist__8123 = cljs.core.next(arglist__8123);
var f = cljs.core.first(arglist__8123);
arglist__8123 = cljs.core.next(arglist__8123);
var a = cljs.core.first(arglist__8123);
arglist__8123 = cljs.core.next(arglist__8123);
var b = cljs.core.first(arglist__8123);
arglist__8123 = cljs.core.next(arglist__8123);
var c = cljs.core.first(arglist__8123);
arglist__8123 = cljs.core.next(arglist__8123);
var d = cljs.core.first(arglist__8123);
var args = cljs.core.rest(arglist__8123);
return G__8121__delegate(obj,f,a,b,c,d,args);
});
G__8121.cljs$core$IFn$_invoke$arity$variadic = G__8121__delegate;
return G__8121;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__8124 = null;
if (arguments.length > 6) {
var G__8125__i = 0, G__8125__a = new Array(arguments.length -  6);
while (G__8125__i < G__8125__a.length) {G__8125__a[G__8125__i] = arguments[G__8125__i + 6]; ++G__8125__i;}
G__8124 = new cljs.core.IndexedSeq(G__8125__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__8124);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__8126__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__8126 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8127__i = 0, G__8127__a = new Array(arguments.length -  2);
while (G__8127__i < G__8127__a.length) {G__8127__a[G__8127__i] = arguments[G__8127__i + 2]; ++G__8127__i;}
  more = new cljs.core.IndexedSeq(G__8127__a,0);
} 
return G__8126__delegate.call(this,x,y,more);};
G__8126.cljs$lang$maxFixedArity = 2;
G__8126.cljs$lang$applyTo = (function (arglist__8128){
var x = cljs.core.first(arglist__8128);
arglist__8128 = cljs.core.next(arglist__8128);
var y = cljs.core.first(arglist__8128);
var more = cljs.core.rest(arglist__8128);
return G__8126__delegate(x,y,more);
});
G__8126.cljs$core$IFn$_invoke$arity$variadic = G__8126__delegate;
return G__8126;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__8129 = null;
if (arguments.length > 2) {
var G__8130__i = 0, G__8130__a = new Array(arguments.length -  2);
while (G__8130__i < G__8130__a.length) {G__8130__a[G__8130__i] = arguments[G__8130__i + 2]; ++G__8130__i;}
G__8129 = new cljs.core.IndexedSeq(G__8130__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8129);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t8134 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t8134 = (function (nil_iter,meta8135){
this.nil_iter = nil_iter;
this.meta8135 = meta8135;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t8134.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t8134.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t8134.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t8134.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_8136){
var self__ = this;
var _8136__$1 = this;
return self__.meta8135;
});

cljs.core.t8134.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_8136,meta8135__$1){
var self__ = this;
var _8136__$1 = this;
return (new cljs.core.t8134(self__.nil_iter,meta8135__$1));
});

cljs.core.t8134.cljs$lang$type = true;

cljs.core.t8134.cljs$lang$ctorStr = "cljs.core/t8134";

cljs.core.t8134.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/t8134");
});

cljs.core.__GT_t8134 = (function __GT_t8134(nil_iter__$1,meta8135){
return (new cljs.core.t8134(nil_iter__$1,meta8135));
});

}

return (new cljs.core.t8134(nil_iter,cljs.core.PersistentArrayMap.EMPTY));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3972__auto__ = !((lt.stepper == null));
if(and__3972__auto__){
return self__.iter.hasNext();
} else {
return and__3972__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__8137 = lt;
var G__8138 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__8137,G__8138) : self__.xform.call(null,G__8137,G__8138));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__8139 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__8139) : self__.xform.call(null,G__8139));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__8141 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__8141) : xform.call(null,G__8141));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__8143 = cljs.core.next(iters__$1);
iters__$1 = G__8143;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__4871__auto___8144 = self__.iters.length;
var i_8145 = (0);
while(true){
if((i_8145 < n__4871__auto___8144)){
(self__.nexts[i_8145] = (self__.iters[i_8145]).next());

var G__8146 = (i_8145 + (1));
i_8145 = G__8146;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3972__auto__ = !((lt.stepper == null));
if(and__3972__auto__){
return this$.hasNext();
} else {
return and__3972__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__8142 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__8142) : self__.xform.call(null,G__8142));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__8151 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__8151) : xform.call(null,G__8151));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4962__auto__ = this;
return cljs.core.es6_iterator(this__4962__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__8152_8156 = cljs.core.seq(colls);
var chunk__8153_8157 = null;
var count__8154_8158 = (0);
var i__8155_8159 = (0);
while(true){
if((i__8155_8159 < count__8154_8158)){
var coll_8160 = chunk__8153_8157.cljs$core$IIndexed$_nth$arity$2(null,i__8155_8159);
iters.push(cljs.core.iter(coll_8160));

var G__8161 = seq__8152_8156;
var G__8162 = chunk__8153_8157;
var G__8163 = count__8154_8158;
var G__8164 = (i__8155_8159 + (1));
seq__8152_8156 = G__8161;
chunk__8153_8157 = G__8162;
count__8154_8158 = G__8163;
i__8155_8159 = G__8164;
continue;
} else {
var temp__4126__auto___8165 = cljs.core.seq(seq__8152_8156);
if(temp__4126__auto___8165){
var seq__8152_8166__$1 = temp__4126__auto___8165;
if(cljs.core.chunked_seq_QMARK_(seq__8152_8166__$1)){
var c__4771__auto___8167 = cljs.core.chunk_first(seq__8152_8166__$1);
var G__8168 = cljs.core.chunk_rest(seq__8152_8166__$1);
var G__8169 = c__4771__auto___8167;
var G__8170 = cljs.core.count(c__4771__auto___8167);
var G__8171 = (0);
seq__8152_8156 = G__8168;
chunk__8153_8157 = G__8169;
count__8154_8158 = G__8170;
i__8155_8159 = G__8171;
continue;
} else {
var coll_8172 = cljs.core.first(seq__8152_8166__$1);
iters.push(cljs.core.iter(coll_8172));

var G__8173 = cljs.core.next(seq__8152_8166__$1);
var G__8174 = null;
var G__8175 = (0);
var G__8176 = (0);
seq__8152_8156 = G__8173;
chunk__8153_8157 = G__8174;
count__8154_8158 = G__8175;
i__8155_8159 = G__8176;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__3984__auto__ = cljs.core.seq(coll);
if(or__3984__auto__){
return or__3984__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__8177__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__8177 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__8178__i = 0, G__8178__a = new Array(arguments.length -  2);
while (G__8178__i < G__8178__a.length) {G__8178__a[G__8178__i] = arguments[G__8178__i + 2]; ++G__8178__i;}
  colls = new cljs.core.IndexedSeq(G__8178__a,0);
} 
return G__8177__delegate.call(this,xform,coll,colls);};
G__8177.cljs$lang$maxFixedArity = 2;
G__8177.cljs$lang$applyTo = (function (arglist__8179){
var xform = cljs.core.first(arglist__8179);
arglist__8179 = cljs.core.next(arglist__8179);
var coll = cljs.core.first(arglist__8179);
var colls = cljs.core.rest(arglist__8179);
return G__8177__delegate(xform,coll,colls);
});
G__8177.cljs$core$IFn$_invoke$arity$variadic = G__8177__delegate;
return G__8177;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__8180 = null;
if (arguments.length > 2) {
var G__8181__i = 0, G__8181__a = new Array(arguments.length -  2);
while (G__8181__i < G__8181__a.length) {G__8181__a[G__8181__i] = arguments[G__8181__i + 2]; ++G__8181__i;}
G__8180 = new cljs.core.IndexedSeq(G__8181__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__8180);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__8183 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8183) : pred.call(null,G__8183));
})())){
var G__8184 = pred;
var G__8185 = cljs.core.next(coll);
pred = G__8184;
coll = G__8185;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__3984__auto__ = (function (){var G__8189 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8189) : pred.call(null,G__8189));
})();
if(cljs.core.truth_(or__3984__auto__)){
return or__3984__auto__;
} else {
var G__8190 = pred;
var G__8191 = cljs.core.next(coll);
pred = G__8190;
coll = G__8191;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__8198 = null;
var G__8198__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__8198__1 = (function (x){
return cljs.core.not((function (){var G__8195 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8195) : f.call(null,G__8195));
})());
});
var G__8198__2 = (function (x,y){
return cljs.core.not((function (){var G__8196 = x;
var G__8197 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8196,G__8197) : f.call(null,G__8196,G__8197));
})());
});
var G__8198__3 = (function() { 
var G__8199__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__8199 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__8200__i = 0, G__8200__a = new Array(arguments.length -  2);
while (G__8200__i < G__8200__a.length) {G__8200__a[G__8200__i] = arguments[G__8200__i + 2]; ++G__8200__i;}
  zs = new cljs.core.IndexedSeq(G__8200__a,0);
} 
return G__8199__delegate.call(this,x,y,zs);};
G__8199.cljs$lang$maxFixedArity = 2;
G__8199.cljs$lang$applyTo = (function (arglist__8201){
var x = cljs.core.first(arglist__8201);
arglist__8201 = cljs.core.next(arglist__8201);
var y = cljs.core.first(arglist__8201);
var zs = cljs.core.rest(arglist__8201);
return G__8199__delegate(x,y,zs);
});
G__8199.cljs$core$IFn$_invoke$arity$variadic = G__8199__delegate;
return G__8199;
})()
;
G__8198 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__8198__0.call(this);
case 1:
return G__8198__1.call(this,x);
case 2:
return G__8198__2.call(this,x,y);
default:
var G__8202 = null;
if (arguments.length > 2) {
var G__8203__i = 0, G__8203__a = new Array(arguments.length -  2);
while (G__8203__i < G__8203__a.length) {G__8203__a[G__8203__i] = arguments[G__8203__i + 2]; ++G__8203__i;}
G__8202 = new cljs.core.IndexedSeq(G__8203__a,0);
}
return G__8198__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8202);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8198.cljs$lang$maxFixedArity = 2;
G__8198.cljs$lang$applyTo = G__8198__3.cljs$lang$applyTo;
G__8198.cljs$core$IFn$_invoke$arity$0 = G__8198__0;
G__8198.cljs$core$IFn$_invoke$arity$1 = G__8198__1;
G__8198.cljs$core$IFn$_invoke$arity$2 = G__8198__2;
G__8198.cljs$core$IFn$_invoke$arity$variadic = G__8198__3.cljs$core$IFn$_invoke$arity$variadic;
return G__8198;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__8204__delegate = function (args){
return x;
};
var G__8204 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__8205__i = 0, G__8205__a = new Array(arguments.length -  0);
while (G__8205__i < G__8205__a.length) {G__8205__a[G__8205__i] = arguments[G__8205__i + 0]; ++G__8205__i;}
  args = new cljs.core.IndexedSeq(G__8205__a,0);
} 
return G__8204__delegate.call(this,args);};
G__8204.cljs$lang$maxFixedArity = 0;
G__8204.cljs$lang$applyTo = (function (arglist__8206){
var args = cljs.core.seq(arglist__8206);
return G__8204__delegate(args);
});
G__8204.cljs$core$IFn$_invoke$arity$variadic = G__8204__delegate;
return G__8204;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__8261 = null;
var G__8261__0 = (function (){
var G__8234 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8234) : f.call(null,G__8234));
});
var G__8261__1 = (function (x){
var G__8235 = (function (){var G__8236 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__8236) : g.call(null,G__8236));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8235) : f.call(null,G__8235));
});
var G__8261__2 = (function (x,y){
var G__8237 = (function (){var G__8238 = x;
var G__8239 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__8238,G__8239) : g.call(null,G__8238,G__8239));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8237) : f.call(null,G__8237));
});
var G__8261__3 = (function (x,y,z){
var G__8240 = (function (){var G__8241 = x;
var G__8242 = y;
var G__8243 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__8241,G__8242,G__8243) : g.call(null,G__8241,G__8242,G__8243));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8240) : f.call(null,G__8240));
});
var G__8261__4 = (function() { 
var G__8262__delegate = function (x,y,z,args){
var G__8244 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8244) : f.call(null,G__8244));
};
var G__8262 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8263__i = 0, G__8263__a = new Array(arguments.length -  3);
while (G__8263__i < G__8263__a.length) {G__8263__a[G__8263__i] = arguments[G__8263__i + 3]; ++G__8263__i;}
  args = new cljs.core.IndexedSeq(G__8263__a,0);
} 
return G__8262__delegate.call(this,x,y,z,args);};
G__8262.cljs$lang$maxFixedArity = 3;
G__8262.cljs$lang$applyTo = (function (arglist__8264){
var x = cljs.core.first(arglist__8264);
arglist__8264 = cljs.core.next(arglist__8264);
var y = cljs.core.first(arglist__8264);
arglist__8264 = cljs.core.next(arglist__8264);
var z = cljs.core.first(arglist__8264);
var args = cljs.core.rest(arglist__8264);
return G__8262__delegate(x,y,z,args);
});
G__8262.cljs$core$IFn$_invoke$arity$variadic = G__8262__delegate;
return G__8262;
})()
;
G__8261 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__8261__0.call(this);
case 1:
return G__8261__1.call(this,x);
case 2:
return G__8261__2.call(this,x,y);
case 3:
return G__8261__3.call(this,x,y,z);
default:
var G__8265 = null;
if (arguments.length > 3) {
var G__8266__i = 0, G__8266__a = new Array(arguments.length -  3);
while (G__8266__i < G__8266__a.length) {G__8266__a[G__8266__i] = arguments[G__8266__i + 3]; ++G__8266__i;}
G__8265 = new cljs.core.IndexedSeq(G__8266__a,0);
}
return G__8261__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8265);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8261.cljs$lang$maxFixedArity = 3;
G__8261.cljs$lang$applyTo = G__8261__4.cljs$lang$applyTo;
G__8261.cljs$core$IFn$_invoke$arity$0 = G__8261__0;
G__8261.cljs$core$IFn$_invoke$arity$1 = G__8261__1;
G__8261.cljs$core$IFn$_invoke$arity$2 = G__8261__2;
G__8261.cljs$core$IFn$_invoke$arity$3 = G__8261__3;
G__8261.cljs$core$IFn$_invoke$arity$variadic = G__8261__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8261;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__8267 = null;
var G__8267__0 = (function (){
var G__8245 = (function (){var G__8246 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__8246) : g.call(null,G__8246));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8245) : f.call(null,G__8245));
});
var G__8267__1 = (function (x){
var G__8247 = (function (){var G__8248 = (function (){var G__8249 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__8249) : h.call(null,G__8249));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__8248) : g.call(null,G__8248));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8247) : f.call(null,G__8247));
});
var G__8267__2 = (function (x,y){
var G__8250 = (function (){var G__8251 = (function (){var G__8252 = x;
var G__8253 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__8252,G__8253) : h.call(null,G__8252,G__8253));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__8251) : g.call(null,G__8251));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8250) : f.call(null,G__8250));
});
var G__8267__3 = (function (x,y,z){
var G__8254 = (function (){var G__8255 = (function (){var G__8256 = x;
var G__8257 = y;
var G__8258 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__8256,G__8257,G__8258) : h.call(null,G__8256,G__8257,G__8258));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__8255) : g.call(null,G__8255));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8254) : f.call(null,G__8254));
});
var G__8267__4 = (function() { 
var G__8268__delegate = function (x,y,z,args){
var G__8259 = (function (){var G__8260 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__8260) : g.call(null,G__8260));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8259) : f.call(null,G__8259));
};
var G__8268 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8269__i = 0, G__8269__a = new Array(arguments.length -  3);
while (G__8269__i < G__8269__a.length) {G__8269__a[G__8269__i] = arguments[G__8269__i + 3]; ++G__8269__i;}
  args = new cljs.core.IndexedSeq(G__8269__a,0);
} 
return G__8268__delegate.call(this,x,y,z,args);};
G__8268.cljs$lang$maxFixedArity = 3;
G__8268.cljs$lang$applyTo = (function (arglist__8270){
var x = cljs.core.first(arglist__8270);
arglist__8270 = cljs.core.next(arglist__8270);
var y = cljs.core.first(arglist__8270);
arglist__8270 = cljs.core.next(arglist__8270);
var z = cljs.core.first(arglist__8270);
var args = cljs.core.rest(arglist__8270);
return G__8268__delegate(x,y,z,args);
});
G__8268.cljs$core$IFn$_invoke$arity$variadic = G__8268__delegate;
return G__8268;
})()
;
G__8267 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__8267__0.call(this);
case 1:
return G__8267__1.call(this,x);
case 2:
return G__8267__2.call(this,x,y);
case 3:
return G__8267__3.call(this,x,y,z);
default:
var G__8271 = null;
if (arguments.length > 3) {
var G__8272__i = 0, G__8272__a = new Array(arguments.length -  3);
while (G__8272__i < G__8272__a.length) {G__8272__a[G__8272__i] = arguments[G__8272__i + 3]; ++G__8272__i;}
G__8271 = new cljs.core.IndexedSeq(G__8272__a,0);
}
return G__8267__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8271);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8267.cljs$lang$maxFixedArity = 3;
G__8267.cljs$lang$applyTo = G__8267__4.cljs$lang$applyTo;
G__8267.cljs$core$IFn$_invoke$arity$0 = G__8267__0;
G__8267.cljs$core$IFn$_invoke$arity$1 = G__8267__1;
G__8267.cljs$core$IFn$_invoke$arity$2 = G__8267__2;
G__8267.cljs$core$IFn$_invoke$arity$3 = G__8267__3;
G__8267.cljs$core$IFn$_invoke$arity$variadic = G__8267__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8267;
})()
});
var comp__4 = (function() { 
var G__8273__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__8274__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__8275 = cljs.core.first(fs__$2).call(null,ret);
var G__8276 = cljs.core.next(fs__$2);
ret = G__8275;
fs__$2 = G__8276;
continue;
} else {
return ret;
}
break;
}
};
var G__8274 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__8277__i = 0, G__8277__a = new Array(arguments.length -  0);
while (G__8277__i < G__8277__a.length) {G__8277__a[G__8277__i] = arguments[G__8277__i + 0]; ++G__8277__i;}
  args = new cljs.core.IndexedSeq(G__8277__a,0);
} 
return G__8274__delegate.call(this,args);};
G__8274.cljs$lang$maxFixedArity = 0;
G__8274.cljs$lang$applyTo = (function (arglist__8278){
var args = cljs.core.seq(arglist__8278);
return G__8274__delegate(args);
});
G__8274.cljs$core$IFn$_invoke$arity$variadic = G__8274__delegate;
return G__8274;
})()
;
;})(fs__$1))
};
var G__8273 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__8279__i = 0, G__8279__a = new Array(arguments.length -  3);
while (G__8279__i < G__8279__a.length) {G__8279__a[G__8279__i] = arguments[G__8279__i + 3]; ++G__8279__i;}
  fs = new cljs.core.IndexedSeq(G__8279__a,0);
} 
return G__8273__delegate.call(this,f1,f2,f3,fs);};
G__8273.cljs$lang$maxFixedArity = 3;
G__8273.cljs$lang$applyTo = (function (arglist__8280){
var f1 = cljs.core.first(arglist__8280);
arglist__8280 = cljs.core.next(arglist__8280);
var f2 = cljs.core.first(arglist__8280);
arglist__8280 = cljs.core.next(arglist__8280);
var f3 = cljs.core.first(arglist__8280);
var fs = cljs.core.rest(arglist__8280);
return G__8273__delegate(f1,f2,f3,fs);
});
G__8273.cljs$core$IFn$_invoke$arity$variadic = G__8273__delegate;
return G__8273;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__8281 = null;
if (arguments.length > 3) {
var G__8282__i = 0, G__8282__a = new Array(arguments.length -  3);
while (G__8282__i < G__8282__a.length) {G__8282__a[G__8282__i] = arguments[G__8282__i + 3]; ++G__8282__i;}
G__8281 = new cljs.core.IndexedSeq(G__8282__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__8281);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__8367 = null;
var G__8367__0 = (function (){
var G__8325 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8325) : f.call(null,G__8325));
});
var G__8367__1 = (function (x){
var G__8326 = arg1;
var G__8327 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8326,G__8327) : f.call(null,G__8326,G__8327));
});
var G__8367__2 = (function (x,y){
var G__8328 = arg1;
var G__8329 = x;
var G__8330 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8328,G__8329,G__8330) : f.call(null,G__8328,G__8329,G__8330));
});
var G__8367__3 = (function (x,y,z){
var G__8331 = arg1;
var G__8332 = x;
var G__8333 = y;
var G__8334 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8331,G__8332,G__8333,G__8334) : f.call(null,G__8331,G__8332,G__8333,G__8334));
});
var G__8367__4 = (function() { 
var G__8368__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__8368 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8369__i = 0, G__8369__a = new Array(arguments.length -  3);
while (G__8369__i < G__8369__a.length) {G__8369__a[G__8369__i] = arguments[G__8369__i + 3]; ++G__8369__i;}
  args = new cljs.core.IndexedSeq(G__8369__a,0);
} 
return G__8368__delegate.call(this,x,y,z,args);};
G__8368.cljs$lang$maxFixedArity = 3;
G__8368.cljs$lang$applyTo = (function (arglist__8370){
var x = cljs.core.first(arglist__8370);
arglist__8370 = cljs.core.next(arglist__8370);
var y = cljs.core.first(arglist__8370);
arglist__8370 = cljs.core.next(arglist__8370);
var z = cljs.core.first(arglist__8370);
var args = cljs.core.rest(arglist__8370);
return G__8368__delegate(x,y,z,args);
});
G__8368.cljs$core$IFn$_invoke$arity$variadic = G__8368__delegate;
return G__8368;
})()
;
G__8367 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__8367__0.call(this);
case 1:
return G__8367__1.call(this,x);
case 2:
return G__8367__2.call(this,x,y);
case 3:
return G__8367__3.call(this,x,y,z);
default:
var G__8371 = null;
if (arguments.length > 3) {
var G__8372__i = 0, G__8372__a = new Array(arguments.length -  3);
while (G__8372__i < G__8372__a.length) {G__8372__a[G__8372__i] = arguments[G__8372__i + 3]; ++G__8372__i;}
G__8371 = new cljs.core.IndexedSeq(G__8372__a,0);
}
return G__8367__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8371);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8367.cljs$lang$maxFixedArity = 3;
G__8367.cljs$lang$applyTo = G__8367__4.cljs$lang$applyTo;
G__8367.cljs$core$IFn$_invoke$arity$0 = G__8367__0;
G__8367.cljs$core$IFn$_invoke$arity$1 = G__8367__1;
G__8367.cljs$core$IFn$_invoke$arity$2 = G__8367__2;
G__8367.cljs$core$IFn$_invoke$arity$3 = G__8367__3;
G__8367.cljs$core$IFn$_invoke$arity$variadic = G__8367__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8367;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__8373 = null;
var G__8373__0 = (function (){
var G__8335 = arg1;
var G__8336 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8335,G__8336) : f.call(null,G__8335,G__8336));
});
var G__8373__1 = (function (x){
var G__8337 = arg1;
var G__8338 = arg2;
var G__8339 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8337,G__8338,G__8339) : f.call(null,G__8337,G__8338,G__8339));
});
var G__8373__2 = (function (x,y){
var G__8340 = arg1;
var G__8341 = arg2;
var G__8342 = x;
var G__8343 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8340,G__8341,G__8342,G__8343) : f.call(null,G__8340,G__8341,G__8342,G__8343));
});
var G__8373__3 = (function (x,y,z){
var G__8344 = arg1;
var G__8345 = arg2;
var G__8346 = x;
var G__8347 = y;
var G__8348 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__8344,G__8345,G__8346,G__8347,G__8348) : f.call(null,G__8344,G__8345,G__8346,G__8347,G__8348));
});
var G__8373__4 = (function() { 
var G__8374__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__8374 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8375__i = 0, G__8375__a = new Array(arguments.length -  3);
while (G__8375__i < G__8375__a.length) {G__8375__a[G__8375__i] = arguments[G__8375__i + 3]; ++G__8375__i;}
  args = new cljs.core.IndexedSeq(G__8375__a,0);
} 
return G__8374__delegate.call(this,x,y,z,args);};
G__8374.cljs$lang$maxFixedArity = 3;
G__8374.cljs$lang$applyTo = (function (arglist__8376){
var x = cljs.core.first(arglist__8376);
arglist__8376 = cljs.core.next(arglist__8376);
var y = cljs.core.first(arglist__8376);
arglist__8376 = cljs.core.next(arglist__8376);
var z = cljs.core.first(arglist__8376);
var args = cljs.core.rest(arglist__8376);
return G__8374__delegate(x,y,z,args);
});
G__8374.cljs$core$IFn$_invoke$arity$variadic = G__8374__delegate;
return G__8374;
})()
;
G__8373 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__8373__0.call(this);
case 1:
return G__8373__1.call(this,x);
case 2:
return G__8373__2.call(this,x,y);
case 3:
return G__8373__3.call(this,x,y,z);
default:
var G__8377 = null;
if (arguments.length > 3) {
var G__8378__i = 0, G__8378__a = new Array(arguments.length -  3);
while (G__8378__i < G__8378__a.length) {G__8378__a[G__8378__i] = arguments[G__8378__i + 3]; ++G__8378__i;}
G__8377 = new cljs.core.IndexedSeq(G__8378__a,0);
}
return G__8373__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8377);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8373.cljs$lang$maxFixedArity = 3;
G__8373.cljs$lang$applyTo = G__8373__4.cljs$lang$applyTo;
G__8373.cljs$core$IFn$_invoke$arity$0 = G__8373__0;
G__8373.cljs$core$IFn$_invoke$arity$1 = G__8373__1;
G__8373.cljs$core$IFn$_invoke$arity$2 = G__8373__2;
G__8373.cljs$core$IFn$_invoke$arity$3 = G__8373__3;
G__8373.cljs$core$IFn$_invoke$arity$variadic = G__8373__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8373;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__8379 = null;
var G__8379__0 = (function (){
var G__8349 = arg1;
var G__8350 = arg2;
var G__8351 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8349,G__8350,G__8351) : f.call(null,G__8349,G__8350,G__8351));
});
var G__8379__1 = (function (x){
var G__8352 = arg1;
var G__8353 = arg2;
var G__8354 = arg3;
var G__8355 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8352,G__8353,G__8354,G__8355) : f.call(null,G__8352,G__8353,G__8354,G__8355));
});
var G__8379__2 = (function (x,y){
var G__8356 = arg1;
var G__8357 = arg2;
var G__8358 = arg3;
var G__8359 = x;
var G__8360 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__8356,G__8357,G__8358,G__8359,G__8360) : f.call(null,G__8356,G__8357,G__8358,G__8359,G__8360));
});
var G__8379__3 = (function (x,y,z){
var G__8361 = arg1;
var G__8362 = arg2;
var G__8363 = arg3;
var G__8364 = x;
var G__8365 = y;
var G__8366 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__8361,G__8362,G__8363,G__8364,G__8365,G__8366) : f.call(null,G__8361,G__8362,G__8363,G__8364,G__8365,G__8366));
});
var G__8379__4 = (function() { 
var G__8380__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__8380 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8381__i = 0, G__8381__a = new Array(arguments.length -  3);
while (G__8381__i < G__8381__a.length) {G__8381__a[G__8381__i] = arguments[G__8381__i + 3]; ++G__8381__i;}
  args = new cljs.core.IndexedSeq(G__8381__a,0);
} 
return G__8380__delegate.call(this,x,y,z,args);};
G__8380.cljs$lang$maxFixedArity = 3;
G__8380.cljs$lang$applyTo = (function (arglist__8382){
var x = cljs.core.first(arglist__8382);
arglist__8382 = cljs.core.next(arglist__8382);
var y = cljs.core.first(arglist__8382);
arglist__8382 = cljs.core.next(arglist__8382);
var z = cljs.core.first(arglist__8382);
var args = cljs.core.rest(arglist__8382);
return G__8380__delegate(x,y,z,args);
});
G__8380.cljs$core$IFn$_invoke$arity$variadic = G__8380__delegate;
return G__8380;
})()
;
G__8379 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__8379__0.call(this);
case 1:
return G__8379__1.call(this,x);
case 2:
return G__8379__2.call(this,x,y);
case 3:
return G__8379__3.call(this,x,y,z);
default:
var G__8383 = null;
if (arguments.length > 3) {
var G__8384__i = 0, G__8384__a = new Array(arguments.length -  3);
while (G__8384__i < G__8384__a.length) {G__8384__a[G__8384__i] = arguments[G__8384__i + 3]; ++G__8384__i;}
G__8383 = new cljs.core.IndexedSeq(G__8384__a,0);
}
return G__8379__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8383);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8379.cljs$lang$maxFixedArity = 3;
G__8379.cljs$lang$applyTo = G__8379__4.cljs$lang$applyTo;
G__8379.cljs$core$IFn$_invoke$arity$0 = G__8379__0;
G__8379.cljs$core$IFn$_invoke$arity$1 = G__8379__1;
G__8379.cljs$core$IFn$_invoke$arity$2 = G__8379__2;
G__8379.cljs$core$IFn$_invoke$arity$3 = G__8379__3;
G__8379.cljs$core$IFn$_invoke$arity$variadic = G__8379__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8379;
})()
});
var partial__5 = (function() { 
var G__8385__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__8386__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__8386 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__8387__i = 0, G__8387__a = new Array(arguments.length -  0);
while (G__8387__i < G__8387__a.length) {G__8387__a[G__8387__i] = arguments[G__8387__i + 0]; ++G__8387__i;}
  args = new cljs.core.IndexedSeq(G__8387__a,0);
} 
return G__8386__delegate.call(this,args);};
G__8386.cljs$lang$maxFixedArity = 0;
G__8386.cljs$lang$applyTo = (function (arglist__8388){
var args = cljs.core.seq(arglist__8388);
return G__8386__delegate(args);
});
G__8386.cljs$core$IFn$_invoke$arity$variadic = G__8386__delegate;
return G__8386;
})()
;
};
var G__8385 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__8389__i = 0, G__8389__a = new Array(arguments.length -  4);
while (G__8389__i < G__8389__a.length) {G__8389__a[G__8389__i] = arguments[G__8389__i + 4]; ++G__8389__i;}
  more = new cljs.core.IndexedSeq(G__8389__a,0);
} 
return G__8385__delegate.call(this,f,arg1,arg2,arg3,more);};
G__8385.cljs$lang$maxFixedArity = 4;
G__8385.cljs$lang$applyTo = (function (arglist__8390){
var f = cljs.core.first(arglist__8390);
arglist__8390 = cljs.core.next(arglist__8390);
var arg1 = cljs.core.first(arglist__8390);
arglist__8390 = cljs.core.next(arglist__8390);
var arg2 = cljs.core.first(arglist__8390);
arglist__8390 = cljs.core.next(arglist__8390);
var arg3 = cljs.core.first(arglist__8390);
var more = cljs.core.rest(arglist__8390);
return G__8385__delegate(f,arg1,arg2,arg3,more);
});
G__8385.cljs$core$IFn$_invoke$arity$variadic = G__8385__delegate;
return G__8385;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__8391 = null;
if (arguments.length > 4) {
var G__8392__i = 0, G__8392__a = new Array(arguments.length -  4);
while (G__8392__i < G__8392__a.length) {G__8392__a[G__8392__i] = arguments[G__8392__i + 4]; ++G__8392__i;}
G__8391 = new cljs.core.IndexedSeq(G__8392__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__8391);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__8425 = null;
var G__8425__1 = (function (a){
var G__8409 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8409) : f.call(null,G__8409));
});
var G__8425__2 = (function (a,b){
var G__8410 = (((a == null))?x:a);
var G__8411 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8410,G__8411) : f.call(null,G__8410,G__8411));
});
var G__8425__3 = (function (a,b,c){
var G__8412 = (((a == null))?x:a);
var G__8413 = b;
var G__8414 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8412,G__8413,G__8414) : f.call(null,G__8412,G__8413,G__8414));
});
var G__8425__4 = (function() { 
var G__8426__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__8426 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__8427__i = 0, G__8427__a = new Array(arguments.length -  3);
while (G__8427__i < G__8427__a.length) {G__8427__a[G__8427__i] = arguments[G__8427__i + 3]; ++G__8427__i;}
  ds = new cljs.core.IndexedSeq(G__8427__a,0);
} 
return G__8426__delegate.call(this,a,b,c,ds);};
G__8426.cljs$lang$maxFixedArity = 3;
G__8426.cljs$lang$applyTo = (function (arglist__8428){
var a = cljs.core.first(arglist__8428);
arglist__8428 = cljs.core.next(arglist__8428);
var b = cljs.core.first(arglist__8428);
arglist__8428 = cljs.core.next(arglist__8428);
var c = cljs.core.first(arglist__8428);
var ds = cljs.core.rest(arglist__8428);
return G__8426__delegate(a,b,c,ds);
});
G__8426.cljs$core$IFn$_invoke$arity$variadic = G__8426__delegate;
return G__8426;
})()
;
G__8425 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__8425__1.call(this,a);
case 2:
return G__8425__2.call(this,a,b);
case 3:
return G__8425__3.call(this,a,b,c);
default:
var G__8429 = null;
if (arguments.length > 3) {
var G__8430__i = 0, G__8430__a = new Array(arguments.length -  3);
while (G__8430__i < G__8430__a.length) {G__8430__a[G__8430__i] = arguments[G__8430__i + 3]; ++G__8430__i;}
G__8429 = new cljs.core.IndexedSeq(G__8430__a,0);
}
return G__8425__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__8429);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8425.cljs$lang$maxFixedArity = 3;
G__8425.cljs$lang$applyTo = G__8425__4.cljs$lang$applyTo;
G__8425.cljs$core$IFn$_invoke$arity$1 = G__8425__1;
G__8425.cljs$core$IFn$_invoke$arity$2 = G__8425__2;
G__8425.cljs$core$IFn$_invoke$arity$3 = G__8425__3;
G__8425.cljs$core$IFn$_invoke$arity$variadic = G__8425__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8425;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__8431 = null;
var G__8431__2 = (function (a,b){
var G__8415 = (((a == null))?x:a);
var G__8416 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8415,G__8416) : f.call(null,G__8415,G__8416));
});
var G__8431__3 = (function (a,b,c){
var G__8417 = (((a == null))?x:a);
var G__8418 = (((b == null))?y:b);
var G__8419 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8417,G__8418,G__8419) : f.call(null,G__8417,G__8418,G__8419));
});
var G__8431__4 = (function() { 
var G__8432__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__8432 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__8433__i = 0, G__8433__a = new Array(arguments.length -  3);
while (G__8433__i < G__8433__a.length) {G__8433__a[G__8433__i] = arguments[G__8433__i + 3]; ++G__8433__i;}
  ds = new cljs.core.IndexedSeq(G__8433__a,0);
} 
return G__8432__delegate.call(this,a,b,c,ds);};
G__8432.cljs$lang$maxFixedArity = 3;
G__8432.cljs$lang$applyTo = (function (arglist__8434){
var a = cljs.core.first(arglist__8434);
arglist__8434 = cljs.core.next(arglist__8434);
var b = cljs.core.first(arglist__8434);
arglist__8434 = cljs.core.next(arglist__8434);
var c = cljs.core.first(arglist__8434);
var ds = cljs.core.rest(arglist__8434);
return G__8432__delegate(a,b,c,ds);
});
G__8432.cljs$core$IFn$_invoke$arity$variadic = G__8432__delegate;
return G__8432;
})()
;
G__8431 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__8431__2.call(this,a,b);
case 3:
return G__8431__3.call(this,a,b,c);
default:
var G__8435 = null;
if (arguments.length > 3) {
var G__8436__i = 0, G__8436__a = new Array(arguments.length -  3);
while (G__8436__i < G__8436__a.length) {G__8436__a[G__8436__i] = arguments[G__8436__i + 3]; ++G__8436__i;}
G__8435 = new cljs.core.IndexedSeq(G__8436__a,0);
}
return G__8431__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__8435);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8431.cljs$lang$maxFixedArity = 3;
G__8431.cljs$lang$applyTo = G__8431__4.cljs$lang$applyTo;
G__8431.cljs$core$IFn$_invoke$arity$2 = G__8431__2;
G__8431.cljs$core$IFn$_invoke$arity$3 = G__8431__3;
G__8431.cljs$core$IFn$_invoke$arity$variadic = G__8431__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8431;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__8437 = null;
var G__8437__2 = (function (a,b){
var G__8420 = (((a == null))?x:a);
var G__8421 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8420,G__8421) : f.call(null,G__8420,G__8421));
});
var G__8437__3 = (function (a,b,c){
var G__8422 = (((a == null))?x:a);
var G__8423 = (((b == null))?y:b);
var G__8424 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8422,G__8423,G__8424) : f.call(null,G__8422,G__8423,G__8424));
});
var G__8437__4 = (function() { 
var G__8438__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__8438 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__8439__i = 0, G__8439__a = new Array(arguments.length -  3);
while (G__8439__i < G__8439__a.length) {G__8439__a[G__8439__i] = arguments[G__8439__i + 3]; ++G__8439__i;}
  ds = new cljs.core.IndexedSeq(G__8439__a,0);
} 
return G__8438__delegate.call(this,a,b,c,ds);};
G__8438.cljs$lang$maxFixedArity = 3;
G__8438.cljs$lang$applyTo = (function (arglist__8440){
var a = cljs.core.first(arglist__8440);
arglist__8440 = cljs.core.next(arglist__8440);
var b = cljs.core.first(arglist__8440);
arglist__8440 = cljs.core.next(arglist__8440);
var c = cljs.core.first(arglist__8440);
var ds = cljs.core.rest(arglist__8440);
return G__8438__delegate(a,b,c,ds);
});
G__8438.cljs$core$IFn$_invoke$arity$variadic = G__8438__delegate;
return G__8438;
})()
;
G__8437 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__8437__2.call(this,a,b);
case 3:
return G__8437__3.call(this,a,b,c);
default:
var G__8441 = null;
if (arguments.length > 3) {
var G__8442__i = 0, G__8442__a = new Array(arguments.length -  3);
while (G__8442__i < G__8442__a.length) {G__8442__a[G__8442__i] = arguments[G__8442__i + 3]; ++G__8442__i;}
G__8441 = new cljs.core.IndexedSeq(G__8442__a,0);
}
return G__8437__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__8441);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8437.cljs$lang$maxFixedArity = 3;
G__8437.cljs$lang$applyTo = G__8437__4.cljs$lang$applyTo;
G__8437.cljs$core$IFn$_invoke$arity$2 = G__8437__2;
G__8437.cljs$core$IFn$_invoke$arity$3 = G__8437__3;
G__8437.cljs$core$IFn$_invoke$arity$variadic = G__8437__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8437;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__8473 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__8473) : cljs.core.volatile_BANG_.call(null,G__8473));
})();
return ((function (i){
return (function() {
var G__8503 = null;
var G__8503__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__8503__1 = (function (result){
var G__8474 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8474) : rf.call(null,G__8474));
});
var G__8503__2 = (function (result,input){
var G__8475 = result;
var G__8476 = (function (){var G__8477 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__8478 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8477,G__8478) : f.call(null,G__8477,G__8478));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8475,G__8476) : rf.call(null,G__8475,G__8476));
});
G__8503 = function(result,input){
switch(arguments.length){
case 0:
return G__8503__0.call(this);
case 1:
return G__8503__1.call(this,result);
case 2:
return G__8503__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8503.cljs$core$IFn$_invoke$arity$0 = G__8503__0;
G__8503.cljs$core$IFn$_invoke$arity$1 = G__8503__1;
G__8503.cljs$core$IFn$_invoke$arity$2 = G__8503__2;
return G__8503;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4871__auto___8504 = size;
var i_8505 = (0);
while(true){
if((i_8505 < n__4871__auto___8504)){
cljs.core.chunk_append(b,(function (){var G__8499 = (idx + i_8505);
var G__8500 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_8505);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8499,G__8500) : f.call(null,G__8499,G__8500));
})());

var G__8506 = (i_8505 + (1));
i_8505 = G__8506;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__8501 = idx;
var G__8502 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8501,G__8502) : f.call(null,G__8501,G__8502));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__8525 = null;
var G__8525__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__8525__1 = (function (result){
var G__8519 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8519) : rf.call(null,G__8519));
});
var G__8525__2 = (function (result,input){
var v = (function (){var G__8520 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8520) : f.call(null,G__8520));
})();
if((v == null)){
return result;
} else {
var G__8521 = result;
var G__8522 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8521,G__8522) : rf.call(null,G__8521,G__8522));
}
});
G__8525 = function(result,input){
switch(arguments.length){
case 0:
return G__8525__0.call(this);
case 1:
return G__8525__1.call(this,result);
case 2:
return G__8525__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8525.cljs$core$IFn$_invoke$arity$0 = G__8525__0;
G__8525.cljs$core$IFn$_invoke$arity$1 = G__8525__1;
G__8525.cljs$core$IFn$_invoke$arity$2 = G__8525__2;
return G__8525;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4871__auto___8526 = size;
var i_8527 = (0);
while(true){
if((i_8527 < n__4871__auto___8526)){
var x_8528 = (function (){var G__8523 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_8527);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8523) : f.call(null,G__8523));
})();
if((x_8528 == null)){
} else {
cljs.core.chunk_append(b,x_8528);
}

var G__8529 = (i_8527 + (1));
i_8527 = G__8529;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__8524 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8524) : f.call(null,G__8524));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__8530 = this$__$1;
return goog.getUid(G__8530);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__8531 = cljs.core.seq(self__.watches);
var chunk__8532 = null;
var count__8533 = (0);
var i__8534 = (0);
while(true){
if((i__8534 < count__8533)){
var vec__8535 = chunk__8532.cljs$core$IIndexed$_nth$arity$2(null,i__8534);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8535,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8535,(1),null);
var G__8536_8545 = key;
var G__8537_8546 = this$__$1;
var G__8538_8547 = oldval;
var G__8539_8548 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8536_8545,G__8537_8546,G__8538_8547,G__8539_8548) : f.call(null,G__8536_8545,G__8537_8546,G__8538_8547,G__8539_8548));

var G__8549 = seq__8531;
var G__8550 = chunk__8532;
var G__8551 = count__8533;
var G__8552 = (i__8534 + (1));
seq__8531 = G__8549;
chunk__8532 = G__8550;
count__8533 = G__8551;
i__8534 = G__8552;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__8531);
if(temp__4126__auto__){
var seq__8531__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__8531__$1)){
var c__4771__auto__ = cljs.core.chunk_first(seq__8531__$1);
var G__8553 = cljs.core.chunk_rest(seq__8531__$1);
var G__8554 = c__4771__auto__;
var G__8555 = cljs.core.count(c__4771__auto__);
var G__8556 = (0);
seq__8531 = G__8553;
chunk__8532 = G__8554;
count__8533 = G__8555;
i__8534 = G__8556;
continue;
} else {
var vec__8540 = cljs.core.first(seq__8531__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8540,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8540,(1),null);
var G__8541_8557 = key;
var G__8542_8558 = this$__$1;
var G__8543_8559 = oldval;
var G__8544_8560 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8541_8557,G__8542_8558,G__8543_8559,G__8544_8560) : f.call(null,G__8541_8557,G__8542_8558,G__8543_8559,G__8544_8560));

var G__8561 = cljs.core.next(seq__8531__$1);
var G__8562 = null;
var G__8563 = (0);
var G__8564 = (0);
seq__8531 = G__8561;
chunk__8532 = G__8562;
count__8533 = G__8563;
i__8534 = G__8564;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__8568__delegate = function (x,p__8565){
var map__8567 = p__8565;
var map__8567__$1 = ((cljs.core.seq_QMARK_(map__8567))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__8567):map__8567);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__8567__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__8567__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__8568 = function (x,var_args){
var p__8565 = null;
if (arguments.length > 1) {
var G__8569__i = 0, G__8569__a = new Array(arguments.length -  1);
while (G__8569__i < G__8569__a.length) {G__8569__a[G__8569__i] = arguments[G__8569__i + 1]; ++G__8569__i;}
  p__8565 = new cljs.core.IndexedSeq(G__8569__a,0);
} 
return G__8568__delegate.call(this,x,p__8565);};
G__8568.cljs$lang$maxFixedArity = 1;
G__8568.cljs$lang$applyTo = (function (arglist__8570){
var x = cljs.core.first(arglist__8570);
var p__8565 = cljs.core.rest(arglist__8570);
return G__8568__delegate(x,p__8565);
});
G__8568.cljs$core$IFn$_invoke$arity$variadic = G__8568__delegate;
return G__8568;
})()
;
atom = function(x,var_args){
var p__8565 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__8571 = null;
if (arguments.length > 1) {
var G__8572__i = 0, G__8572__a = new Array(arguments.length -  1);
while (G__8572__i < G__8572__a.length) {G__8572__a[G__8572__i] = arguments[G__8572__i + 1]; ++G__8572__i;}
G__8571 = new cljs.core.IndexedSeq(G__8572__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__8571);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__8575 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__8575) : validate.call(null,G__8575));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__8576 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__8576) : cljs.core.pr_str.call(null,G__8576));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__8583 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8583) : f.call(null,G__8583));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__8584 = a.state;
var G__8585 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8584,G__8585) : f.call(null,G__8584,G__8585));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__8586 = a.state;
var G__8587 = x;
var G__8588 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8586,G__8587,G__8588) : f.call(null,G__8586,G__8587,G__8588));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__8589__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__8589 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__8590__i = 0, G__8590__a = new Array(arguments.length -  4);
while (G__8590__i < G__8590__a.length) {G__8590__a[G__8590__i] = arguments[G__8590__i + 4]; ++G__8590__i;}
  more = new cljs.core.IndexedSeq(G__8590__a,0);
} 
return G__8589__delegate.call(this,a,f,x,y,more);};
G__8589.cljs$lang$maxFixedArity = 4;
G__8589.cljs$lang$applyTo = (function (arglist__8591){
var a = cljs.core.first(arglist__8591);
arglist__8591 = cljs.core.next(arglist__8591);
var f = cljs.core.first(arglist__8591);
arglist__8591 = cljs.core.next(arglist__8591);
var x = cljs.core.first(arglist__8591);
arglist__8591 = cljs.core.next(arglist__8591);
var y = cljs.core.first(arglist__8591);
var more = cljs.core.rest(arglist__8591);
return G__8589__delegate(a,f,x,y,more);
});
G__8589.cljs$core$IFn$_invoke$arity$variadic = G__8589__delegate;
return G__8589;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__8592 = null;
if (arguments.length > 4) {
var G__8593__i = 0, G__8593__a = new Array(arguments.length -  4);
while (G__8593__i < G__8593__a.length) {G__8593__a[G__8593__i] = arguments[G__8593__i + 4]; ++G__8593__i;}
G__8592 = new cljs.core.IndexedSeq(G__8593__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__8592);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__8660 = null;
var G__8660__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__8660__1 = (function (result){
var G__8627 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8627) : rf.call(null,G__8627));
});
var G__8660__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__8628 = i;
var G__8629 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8628,G__8629) : f.call(null,G__8628,G__8629));
})();
if((v == null)){
return result;
} else {
var G__8630 = result;
var G__8631 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8630,G__8631) : rf.call(null,G__8630,G__8631));
}
});
G__8660 = function(result,input){
switch(arguments.length){
case 0:
return G__8660__0.call(this);
case 1:
return G__8660__1.call(this,result);
case 2:
return G__8660__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8660.cljs$core$IFn$_invoke$arity$0 = G__8660__0;
G__8660.cljs$core$IFn$_invoke$arity$1 = G__8660__1;
G__8660.cljs$core$IFn$_invoke$arity$2 = G__8660__2;
return G__8660;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4871__auto___8661 = size;
var i_8662 = (0);
while(true){
if((i_8662 < n__4871__auto___8661)){
var x_8663 = (function (){var G__8656 = (idx + i_8662);
var G__8657 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_8662);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8656,G__8657) : f.call(null,G__8656,G__8657));
})();
if((x_8663 == null)){
} else {
cljs.core.chunk_append(b,x_8663);
}

var G__8664 = (i_8662 + (1));
i_8662 = G__8664;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__8658 = idx;
var G__8659 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8658,G__8659) : f.call(null,G__8658,G__8659));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__8878 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8878) : p.call(null,G__8878));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3972__auto__ = (function (){var G__8880 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8880) : p.call(null,G__8880));
})();
if(cljs.core.truth_(and__3972__auto__)){
var G__8881 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8881) : p.call(null,G__8881));
} else {
return and__3972__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3972__auto__ = (function (){var G__8883 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8883) : p.call(null,G__8883));
})();
if(cljs.core.truth_(and__3972__auto__)){
var and__3972__auto____$1 = (function (){var G__8885 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8885) : p.call(null,G__8885));
})();
if(cljs.core.truth_(and__3972__auto____$1)){
var G__8886 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8886) : p.call(null,G__8886));
} else {
return and__3972__auto____$1;
}
} else {
return and__3972__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__9055__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__9055 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9056__i = 0, G__9056__a = new Array(arguments.length -  3);
while (G__9056__i < G__9056__a.length) {G__9056__a[G__9056__i] = arguments[G__9056__i + 3]; ++G__9056__i;}
  args = new cljs.core.IndexedSeq(G__9056__a,0);
} 
return G__9055__delegate.call(this,x,y,z,args);};
G__9055.cljs$lang$maxFixedArity = 3;
G__9055.cljs$lang$applyTo = (function (arglist__9057){
var x = cljs.core.first(arglist__9057);
arglist__9057 = cljs.core.next(arglist__9057);
var y = cljs.core.first(arglist__9057);
arglist__9057 = cljs.core.next(arglist__9057);
var z = cljs.core.first(arglist__9057);
var args = cljs.core.rest(arglist__9057);
return G__9055__delegate(x,y,z,args);
});
G__9055.cljs$core$IFn$_invoke$arity$variadic = G__9055__delegate;
return G__9055;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__9058 = null;
if (arguments.length > 3) {
var G__9059__i = 0, G__9059__a = new Array(arguments.length -  3);
while (G__9059__i < G__9059__a.length) {G__9059__a[G__9059__i] = arguments[G__9059__i + 3]; ++G__9059__i;}
G__9058 = new cljs.core.IndexedSeq(G__9059__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9058);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__3972__auto__ = (function (){var G__8918 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8918) : p1.call(null,G__8918));
})();
if(cljs.core.truth_(and__3972__auto__)){
var G__8919 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8919) : p2.call(null,G__8919));
} else {
return and__3972__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3972__auto__ = (function (){var G__8921 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8921) : p1.call(null,G__8921));
})();
if(cljs.core.truth_(and__3972__auto__)){
var and__3972__auto____$1 = (function (){var G__8923 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8923) : p1.call(null,G__8923));
})();
if(cljs.core.truth_(and__3972__auto____$1)){
var and__3972__auto____$2 = (function (){var G__8925 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8925) : p2.call(null,G__8925));
})();
if(cljs.core.truth_(and__3972__auto____$2)){
var G__8926 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8926) : p2.call(null,G__8926));
} else {
return and__3972__auto____$2;
}
} else {
return and__3972__auto____$1;
}
} else {
return and__3972__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3972__auto__ = (function (){var G__8928 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8928) : p1.call(null,G__8928));
})();
if(cljs.core.truth_(and__3972__auto__)){
var and__3972__auto____$1 = (function (){var G__8930 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8930) : p1.call(null,G__8930));
})();
if(cljs.core.truth_(and__3972__auto____$1)){
var and__3972__auto____$2 = (function (){var G__8932 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8932) : p1.call(null,G__8932));
})();
if(cljs.core.truth_(and__3972__auto____$2)){
var and__3972__auto____$3 = (function (){var G__8934 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8934) : p2.call(null,G__8934));
})();
if(cljs.core.truth_(and__3972__auto____$3)){
var and__3972__auto____$4 = (function (){var G__8936 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8936) : p2.call(null,G__8936));
})();
if(cljs.core.truth_(and__3972__auto____$4)){
var G__8937 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8937) : p2.call(null,G__8937));
} else {
return and__3972__auto____$4;
}
} else {
return and__3972__auto____$3;
}
} else {
return and__3972__auto____$2;
}
} else {
return and__3972__auto____$1;
}
} else {
return and__3972__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__9060__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__8665_SHARP_){
var and__3972__auto__ = (function (){var G__8942 = p1__8665_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8942) : p1.call(null,G__8942));
})();
if(cljs.core.truth_(and__3972__auto__)){
var G__8943 = p1__8665_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8943) : p2.call(null,G__8943));
} else {
return and__3972__auto__;
}
}),args)));
};
var G__9060 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9061__i = 0, G__9061__a = new Array(arguments.length -  3);
while (G__9061__i < G__9061__a.length) {G__9061__a[G__9061__i] = arguments[G__9061__i + 3]; ++G__9061__i;}
  args = new cljs.core.IndexedSeq(G__9061__a,0);
} 
return G__9060__delegate.call(this,x,y,z,args);};
G__9060.cljs$lang$maxFixedArity = 3;
G__9060.cljs$lang$applyTo = (function (arglist__9062){
var x = cljs.core.first(arglist__9062);
arglist__9062 = cljs.core.next(arglist__9062);
var y = cljs.core.first(arglist__9062);
arglist__9062 = cljs.core.next(arglist__9062);
var z = cljs.core.first(arglist__9062);
var args = cljs.core.rest(arglist__9062);
return G__9060__delegate(x,y,z,args);
});
G__9060.cljs$core$IFn$_invoke$arity$variadic = G__9060__delegate;
return G__9060;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__9063 = null;
if (arguments.length > 3) {
var G__9064__i = 0, G__9064__a = new Array(arguments.length -  3);
while (G__9064__i < G__9064__a.length) {G__9064__a[G__9064__i] = arguments[G__9064__i + 3]; ++G__9064__i;}
G__9063 = new cljs.core.IndexedSeq(G__9064__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9063);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__3972__auto__ = (function (){var G__8989 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8989) : p1.call(null,G__8989));
})();
if(cljs.core.truth_(and__3972__auto__)){
var and__3972__auto____$1 = (function (){var G__8991 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8991) : p2.call(null,G__8991));
})();
if(cljs.core.truth_(and__3972__auto____$1)){
var G__8992 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8992) : p3.call(null,G__8992));
} else {
return and__3972__auto____$1;
}
} else {
return and__3972__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3972__auto__ = (function (){var G__8994 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8994) : p1.call(null,G__8994));
})();
if(cljs.core.truth_(and__3972__auto__)){
var and__3972__auto____$1 = (function (){var G__8996 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8996) : p2.call(null,G__8996));
})();
if(cljs.core.truth_(and__3972__auto____$1)){
var and__3972__auto____$2 = (function (){var G__8998 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8998) : p3.call(null,G__8998));
})();
if(cljs.core.truth_(and__3972__auto____$2)){
var and__3972__auto____$3 = (function (){var G__9000 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9000) : p1.call(null,G__9000));
})();
if(cljs.core.truth_(and__3972__auto____$3)){
var and__3972__auto____$4 = (function (){var G__9002 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9002) : p2.call(null,G__9002));
})();
if(cljs.core.truth_(and__3972__auto____$4)){
var G__9003 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9003) : p3.call(null,G__9003));
} else {
return and__3972__auto____$4;
}
} else {
return and__3972__auto____$3;
}
} else {
return and__3972__auto____$2;
}
} else {
return and__3972__auto____$1;
}
} else {
return and__3972__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3972__auto__ = (function (){var G__9005 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9005) : p1.call(null,G__9005));
})();
if(cljs.core.truth_(and__3972__auto__)){
var and__3972__auto____$1 = (function (){var G__9007 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9007) : p2.call(null,G__9007));
})();
if(cljs.core.truth_(and__3972__auto____$1)){
var and__3972__auto____$2 = (function (){var G__9009 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9009) : p3.call(null,G__9009));
})();
if(cljs.core.truth_(and__3972__auto____$2)){
var and__3972__auto____$3 = (function (){var G__9011 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9011) : p1.call(null,G__9011));
})();
if(cljs.core.truth_(and__3972__auto____$3)){
var and__3972__auto____$4 = (function (){var G__9013 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9013) : p2.call(null,G__9013));
})();
if(cljs.core.truth_(and__3972__auto____$4)){
var and__3972__auto____$5 = (function (){var G__9015 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9015) : p3.call(null,G__9015));
})();
if(cljs.core.truth_(and__3972__auto____$5)){
var and__3972__auto____$6 = (function (){var G__9017 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9017) : p1.call(null,G__9017));
})();
if(cljs.core.truth_(and__3972__auto____$6)){
var and__3972__auto____$7 = (function (){var G__9019 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9019) : p2.call(null,G__9019));
})();
if(cljs.core.truth_(and__3972__auto____$7)){
var G__9020 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9020) : p3.call(null,G__9020));
} else {
return and__3972__auto____$7;
}
} else {
return and__3972__auto____$6;
}
} else {
return and__3972__auto____$5;
}
} else {
return and__3972__auto____$4;
}
} else {
return and__3972__auto____$3;
}
} else {
return and__3972__auto____$2;
}
} else {
return and__3972__auto____$1;
}
} else {
return and__3972__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__9065__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__8666_SHARP_){
var and__3972__auto__ = (function (){var G__9027 = p1__8666_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9027) : p1.call(null,G__9027));
})();
if(cljs.core.truth_(and__3972__auto__)){
var and__3972__auto____$1 = (function (){var G__9029 = p1__8666_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9029) : p2.call(null,G__9029));
})();
if(cljs.core.truth_(and__3972__auto____$1)){
var G__9030 = p1__8666_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9030) : p3.call(null,G__9030));
} else {
return and__3972__auto____$1;
}
} else {
return and__3972__auto__;
}
}),args)));
};
var G__9065 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9066__i = 0, G__9066__a = new Array(arguments.length -  3);
while (G__9066__i < G__9066__a.length) {G__9066__a[G__9066__i] = arguments[G__9066__i + 3]; ++G__9066__i;}
  args = new cljs.core.IndexedSeq(G__9066__a,0);
} 
return G__9065__delegate.call(this,x,y,z,args);};
G__9065.cljs$lang$maxFixedArity = 3;
G__9065.cljs$lang$applyTo = (function (arglist__9067){
var x = cljs.core.first(arglist__9067);
arglist__9067 = cljs.core.next(arglist__9067);
var y = cljs.core.first(arglist__9067);
arglist__9067 = cljs.core.next(arglist__9067);
var z = cljs.core.first(arglist__9067);
var args = cljs.core.rest(arglist__9067);
return G__9065__delegate(x,y,z,args);
});
G__9065.cljs$core$IFn$_invoke$arity$variadic = G__9065__delegate;
return G__9065;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__9068 = null;
if (arguments.length > 3) {
var G__9069__i = 0, G__9069__a = new Array(arguments.length -  3);
while (G__9069__i < G__9069__a.length) {G__9069__a[G__9069__i] = arguments[G__9069__i + 3]; ++G__9069__i;}
G__9068 = new cljs.core.IndexedSeq(G__9069__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9068);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__9070__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__8667_SHARP_){
var G__9046 = x;
return (p1__8667_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8667_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9046) : p1__8667_SHARP_.call(null,G__9046));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__8668_SHARP_){
var and__3972__auto__ = (function (){var G__9048 = x;
return (p1__8668_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8668_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9048) : p1__8668_SHARP_.call(null,G__9048));
})();
if(cljs.core.truth_(and__3972__auto__)){
var G__9049 = y;
return (p1__8668_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8668_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9049) : p1__8668_SHARP_.call(null,G__9049));
} else {
return and__3972__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__8669_SHARP_){
var and__3972__auto__ = (function (){var G__9051 = x;
return (p1__8669_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8669_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9051) : p1__8669_SHARP_.call(null,G__9051));
})();
if(cljs.core.truth_(and__3972__auto__)){
var and__3972__auto____$1 = (function (){var G__9053 = y;
return (p1__8669_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8669_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9053) : p1__8669_SHARP_.call(null,G__9053));
})();
if(cljs.core.truth_(and__3972__auto____$1)){
var G__9054 = z;
return (p1__8669_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8669_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9054) : p1__8669_SHARP_.call(null,G__9054));
} else {
return and__3972__auto____$1;
}
} else {
return and__3972__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__9071__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__8670_SHARP_){
return cljs.core.every_QMARK_(p1__8670_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__9071 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9072__i = 0, G__9072__a = new Array(arguments.length -  3);
while (G__9072__i < G__9072__a.length) {G__9072__a[G__9072__i] = arguments[G__9072__i + 3]; ++G__9072__i;}
  args = new cljs.core.IndexedSeq(G__9072__a,0);
} 
return G__9071__delegate.call(this,x,y,z,args);};
G__9071.cljs$lang$maxFixedArity = 3;
G__9071.cljs$lang$applyTo = (function (arglist__9073){
var x = cljs.core.first(arglist__9073);
arglist__9073 = cljs.core.next(arglist__9073);
var y = cljs.core.first(arglist__9073);
arglist__9073 = cljs.core.next(arglist__9073);
var z = cljs.core.first(arglist__9073);
var args = cljs.core.rest(arglist__9073);
return G__9071__delegate(x,y,z,args);
});
G__9071.cljs$core$IFn$_invoke$arity$variadic = G__9071__delegate;
return G__9071;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__9074 = null;
if (arguments.length > 3) {
var G__9075__i = 0, G__9075__a = new Array(arguments.length -  3);
while (G__9075__i < G__9075__a.length) {G__9075__a[G__9075__i] = arguments[G__9075__i + 3]; ++G__9075__i;}
G__9074 = new cljs.core.IndexedSeq(G__9075__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9074);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__9070 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__9076__i = 0, G__9076__a = new Array(arguments.length -  3);
while (G__9076__i < G__9076__a.length) {G__9076__a[G__9076__i] = arguments[G__9076__i + 3]; ++G__9076__i;}
  ps = new cljs.core.IndexedSeq(G__9076__a,0);
} 
return G__9070__delegate.call(this,p1,p2,p3,ps);};
G__9070.cljs$lang$maxFixedArity = 3;
G__9070.cljs$lang$applyTo = (function (arglist__9077){
var p1 = cljs.core.first(arglist__9077);
arglist__9077 = cljs.core.next(arglist__9077);
var p2 = cljs.core.first(arglist__9077);
arglist__9077 = cljs.core.next(arglist__9077);
var p3 = cljs.core.first(arglist__9077);
var ps = cljs.core.rest(arglist__9077);
return G__9070__delegate(p1,p2,p3,ps);
});
G__9070.cljs$core$IFn$_invoke$arity$variadic = G__9070__delegate;
return G__9070;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__9078 = null;
if (arguments.length > 3) {
var G__9079__i = 0, G__9079__a = new Array(arguments.length -  3);
while (G__9079__i < G__9079__a.length) {G__9079__a[G__9079__i] = arguments[G__9079__i + 3]; ++G__9079__i;}
G__9078 = new cljs.core.IndexedSeq(G__9079__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__9078);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__9285 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9285) : p.call(null,G__9285));
});
var sp1__2 = (function (x,y){
var or__3984__auto__ = (function (){var G__9287 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9287) : p.call(null,G__9287));
})();
if(cljs.core.truth_(or__3984__auto__)){
return or__3984__auto__;
} else {
var G__9288 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9288) : p.call(null,G__9288));
}
});
var sp1__3 = (function (x,y,z){
var or__3984__auto__ = (function (){var G__9290 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9290) : p.call(null,G__9290));
})();
if(cljs.core.truth_(or__3984__auto__)){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (function (){var G__9292 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9292) : p.call(null,G__9292));
})();
if(cljs.core.truth_(or__3984__auto____$1)){
return or__3984__auto____$1;
} else {
var G__9293 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9293) : p.call(null,G__9293));
}
}
});
var sp1__4 = (function() { 
var G__9454__delegate = function (x,y,z,args){
var or__3984__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3984__auto__)){
return or__3984__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__9454 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9455__i = 0, G__9455__a = new Array(arguments.length -  3);
while (G__9455__i < G__9455__a.length) {G__9455__a[G__9455__i] = arguments[G__9455__i + 3]; ++G__9455__i;}
  args = new cljs.core.IndexedSeq(G__9455__a,0);
} 
return G__9454__delegate.call(this,x,y,z,args);};
G__9454.cljs$lang$maxFixedArity = 3;
G__9454.cljs$lang$applyTo = (function (arglist__9456){
var x = cljs.core.first(arglist__9456);
arglist__9456 = cljs.core.next(arglist__9456);
var y = cljs.core.first(arglist__9456);
arglist__9456 = cljs.core.next(arglist__9456);
var z = cljs.core.first(arglist__9456);
var args = cljs.core.rest(arglist__9456);
return G__9454__delegate(x,y,z,args);
});
G__9454.cljs$core$IFn$_invoke$arity$variadic = G__9454__delegate;
return G__9454;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__9457 = null;
if (arguments.length > 3) {
var G__9458__i = 0, G__9458__a = new Array(arguments.length -  3);
while (G__9458__i < G__9458__a.length) {G__9458__a[G__9458__i] = arguments[G__9458__i + 3]; ++G__9458__i;}
G__9457 = new cljs.core.IndexedSeq(G__9458__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9457);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__3984__auto__ = (function (){var G__9325 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9325) : p1.call(null,G__9325));
})();
if(cljs.core.truth_(or__3984__auto__)){
return or__3984__auto__;
} else {
var G__9326 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9326) : p2.call(null,G__9326));
}
});
var sp2__2 = (function (x,y){
var or__3984__auto__ = (function (){var G__9328 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9328) : p1.call(null,G__9328));
})();
if(cljs.core.truth_(or__3984__auto__)){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (function (){var G__9330 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9330) : p1.call(null,G__9330));
})();
if(cljs.core.truth_(or__3984__auto____$1)){
return or__3984__auto____$1;
} else {
var or__3984__auto____$2 = (function (){var G__9332 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9332) : p2.call(null,G__9332));
})();
if(cljs.core.truth_(or__3984__auto____$2)){
return or__3984__auto____$2;
} else {
var G__9333 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9333) : p2.call(null,G__9333));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__3984__auto__ = (function (){var G__9335 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9335) : p1.call(null,G__9335));
})();
if(cljs.core.truth_(or__3984__auto__)){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (function (){var G__9337 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9337) : p1.call(null,G__9337));
})();
if(cljs.core.truth_(or__3984__auto____$1)){
return or__3984__auto____$1;
} else {
var or__3984__auto____$2 = (function (){var G__9339 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9339) : p1.call(null,G__9339));
})();
if(cljs.core.truth_(or__3984__auto____$2)){
return or__3984__auto____$2;
} else {
var or__3984__auto____$3 = (function (){var G__9341 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9341) : p2.call(null,G__9341));
})();
if(cljs.core.truth_(or__3984__auto____$3)){
return or__3984__auto____$3;
} else {
var or__3984__auto____$4 = (function (){var G__9343 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9343) : p2.call(null,G__9343));
})();
if(cljs.core.truth_(or__3984__auto____$4)){
return or__3984__auto____$4;
} else {
var G__9344 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9344) : p2.call(null,G__9344));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__9459__delegate = function (x,y,z,args){
var or__3984__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3984__auto__)){
return or__3984__auto__;
} else {
return cljs.core.some(((function (or__3984__auto__){
return (function (p1__9080_SHARP_){
var or__3984__auto____$1 = (function (){var G__9346 = p1__9080_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9346) : p1.call(null,G__9346));
})();
if(cljs.core.truth_(or__3984__auto____$1)){
return or__3984__auto____$1;
} else {
var G__9347 = p1__9080_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9347) : p2.call(null,G__9347));
}
});})(or__3984__auto__))
,args);
}
};
var G__9459 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9460__i = 0, G__9460__a = new Array(arguments.length -  3);
while (G__9460__i < G__9460__a.length) {G__9460__a[G__9460__i] = arguments[G__9460__i + 3]; ++G__9460__i;}
  args = new cljs.core.IndexedSeq(G__9460__a,0);
} 
return G__9459__delegate.call(this,x,y,z,args);};
G__9459.cljs$lang$maxFixedArity = 3;
G__9459.cljs$lang$applyTo = (function (arglist__9461){
var x = cljs.core.first(arglist__9461);
arglist__9461 = cljs.core.next(arglist__9461);
var y = cljs.core.first(arglist__9461);
arglist__9461 = cljs.core.next(arglist__9461);
var z = cljs.core.first(arglist__9461);
var args = cljs.core.rest(arglist__9461);
return G__9459__delegate(x,y,z,args);
});
G__9459.cljs$core$IFn$_invoke$arity$variadic = G__9459__delegate;
return G__9459;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__9462 = null;
if (arguments.length > 3) {
var G__9463__i = 0, G__9463__a = new Array(arguments.length -  3);
while (G__9463__i < G__9463__a.length) {G__9463__a[G__9463__i] = arguments[G__9463__i + 3]; ++G__9463__i;}
G__9462 = new cljs.core.IndexedSeq(G__9463__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9462);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__3984__auto__ = (function (){var G__9393 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9393) : p1.call(null,G__9393));
})();
if(cljs.core.truth_(or__3984__auto__)){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (function (){var G__9395 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9395) : p2.call(null,G__9395));
})();
if(cljs.core.truth_(or__3984__auto____$1)){
return or__3984__auto____$1;
} else {
var G__9396 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9396) : p3.call(null,G__9396));
}
}
});
var sp3__2 = (function (x,y){
var or__3984__auto__ = (function (){var G__9398 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9398) : p1.call(null,G__9398));
})();
if(cljs.core.truth_(or__3984__auto__)){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (function (){var G__9400 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9400) : p2.call(null,G__9400));
})();
if(cljs.core.truth_(or__3984__auto____$1)){
return or__3984__auto____$1;
} else {
var or__3984__auto____$2 = (function (){var G__9402 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9402) : p3.call(null,G__9402));
})();
if(cljs.core.truth_(or__3984__auto____$2)){
return or__3984__auto____$2;
} else {
var or__3984__auto____$3 = (function (){var G__9404 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9404) : p1.call(null,G__9404));
})();
if(cljs.core.truth_(or__3984__auto____$3)){
return or__3984__auto____$3;
} else {
var or__3984__auto____$4 = (function (){var G__9406 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9406) : p2.call(null,G__9406));
})();
if(cljs.core.truth_(or__3984__auto____$4)){
return or__3984__auto____$4;
} else {
var G__9407 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9407) : p3.call(null,G__9407));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__3984__auto__ = (function (){var G__9409 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9409) : p1.call(null,G__9409));
})();
if(cljs.core.truth_(or__3984__auto__)){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (function (){var G__9411 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9411) : p2.call(null,G__9411));
})();
if(cljs.core.truth_(or__3984__auto____$1)){
return or__3984__auto____$1;
} else {
var or__3984__auto____$2 = (function (){var G__9413 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9413) : p3.call(null,G__9413));
})();
if(cljs.core.truth_(or__3984__auto____$2)){
return or__3984__auto____$2;
} else {
var or__3984__auto____$3 = (function (){var G__9415 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9415) : p1.call(null,G__9415));
})();
if(cljs.core.truth_(or__3984__auto____$3)){
return or__3984__auto____$3;
} else {
var or__3984__auto____$4 = (function (){var G__9417 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9417) : p2.call(null,G__9417));
})();
if(cljs.core.truth_(or__3984__auto____$4)){
return or__3984__auto____$4;
} else {
var or__3984__auto____$5 = (function (){var G__9419 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9419) : p3.call(null,G__9419));
})();
if(cljs.core.truth_(or__3984__auto____$5)){
return or__3984__auto____$5;
} else {
var or__3984__auto____$6 = (function (){var G__9421 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9421) : p1.call(null,G__9421));
})();
if(cljs.core.truth_(or__3984__auto____$6)){
return or__3984__auto____$6;
} else {
var or__3984__auto____$7 = (function (){var G__9423 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9423) : p2.call(null,G__9423));
})();
if(cljs.core.truth_(or__3984__auto____$7)){
return or__3984__auto____$7;
} else {
var G__9424 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9424) : p3.call(null,G__9424));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__9464__delegate = function (x,y,z,args){
var or__3984__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3984__auto__)){
return or__3984__auto__;
} else {
return cljs.core.some(((function (or__3984__auto__){
return (function (p1__9081_SHARP_){
var or__3984__auto____$1 = (function (){var G__9426 = p1__9081_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9426) : p1.call(null,G__9426));
})();
if(cljs.core.truth_(or__3984__auto____$1)){
return or__3984__auto____$1;
} else {
var or__3984__auto____$2 = (function (){var G__9428 = p1__9081_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9428) : p2.call(null,G__9428));
})();
if(cljs.core.truth_(or__3984__auto____$2)){
return or__3984__auto____$2;
} else {
var G__9429 = p1__9081_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9429) : p3.call(null,G__9429));
}
}
});})(or__3984__auto__))
,args);
}
};
var G__9464 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9465__i = 0, G__9465__a = new Array(arguments.length -  3);
while (G__9465__i < G__9465__a.length) {G__9465__a[G__9465__i] = arguments[G__9465__i + 3]; ++G__9465__i;}
  args = new cljs.core.IndexedSeq(G__9465__a,0);
} 
return G__9464__delegate.call(this,x,y,z,args);};
G__9464.cljs$lang$maxFixedArity = 3;
G__9464.cljs$lang$applyTo = (function (arglist__9466){
var x = cljs.core.first(arglist__9466);
arglist__9466 = cljs.core.next(arglist__9466);
var y = cljs.core.first(arglist__9466);
arglist__9466 = cljs.core.next(arglist__9466);
var z = cljs.core.first(arglist__9466);
var args = cljs.core.rest(arglist__9466);
return G__9464__delegate(x,y,z,args);
});
G__9464.cljs$core$IFn$_invoke$arity$variadic = G__9464__delegate;
return G__9464;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__9467 = null;
if (arguments.length > 3) {
var G__9468__i = 0, G__9468__a = new Array(arguments.length -  3);
while (G__9468__i < G__9468__a.length) {G__9468__a[G__9468__i] = arguments[G__9468__i + 3]; ++G__9468__i;}
G__9467 = new cljs.core.IndexedSeq(G__9468__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9467);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__9469__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__9082_SHARP_){
var G__9445 = x;
return (p1__9082_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9082_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9445) : p1__9082_SHARP_.call(null,G__9445));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__9083_SHARP_){
var or__3984__auto__ = (function (){var G__9447 = x;
return (p1__9083_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9083_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9447) : p1__9083_SHARP_.call(null,G__9447));
})();
if(cljs.core.truth_(or__3984__auto__)){
return or__3984__auto__;
} else {
var G__9448 = y;
return (p1__9083_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9083_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9448) : p1__9083_SHARP_.call(null,G__9448));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__9084_SHARP_){
var or__3984__auto__ = (function (){var G__9450 = x;
return (p1__9084_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9084_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9450) : p1__9084_SHARP_.call(null,G__9450));
})();
if(cljs.core.truth_(or__3984__auto__)){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (function (){var G__9452 = y;
return (p1__9084_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9084_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9452) : p1__9084_SHARP_.call(null,G__9452));
})();
if(cljs.core.truth_(or__3984__auto____$1)){
return or__3984__auto____$1;
} else {
var G__9453 = z;
return (p1__9084_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9084_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9453) : p1__9084_SHARP_.call(null,G__9453));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__9470__delegate = function (x,y,z,args){
var or__3984__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3984__auto__)){
return or__3984__auto__;
} else {
return cljs.core.some(((function (or__3984__auto__,ps__$1){
return (function (p1__9085_SHARP_){
return cljs.core.some(p1__9085_SHARP_,args);
});})(or__3984__auto__,ps__$1))
,ps__$1);
}
};
var G__9470 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9471__i = 0, G__9471__a = new Array(arguments.length -  3);
while (G__9471__i < G__9471__a.length) {G__9471__a[G__9471__i] = arguments[G__9471__i + 3]; ++G__9471__i;}
  args = new cljs.core.IndexedSeq(G__9471__a,0);
} 
return G__9470__delegate.call(this,x,y,z,args);};
G__9470.cljs$lang$maxFixedArity = 3;
G__9470.cljs$lang$applyTo = (function (arglist__9472){
var x = cljs.core.first(arglist__9472);
arglist__9472 = cljs.core.next(arglist__9472);
var y = cljs.core.first(arglist__9472);
arglist__9472 = cljs.core.next(arglist__9472);
var z = cljs.core.first(arglist__9472);
var args = cljs.core.rest(arglist__9472);
return G__9470__delegate(x,y,z,args);
});
G__9470.cljs$core$IFn$_invoke$arity$variadic = G__9470__delegate;
return G__9470;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__9473 = null;
if (arguments.length > 3) {
var G__9474__i = 0, G__9474__a = new Array(arguments.length -  3);
while (G__9474__i < G__9474__a.length) {G__9474__a[G__9474__i] = arguments[G__9474__i + 3]; ++G__9474__i;}
G__9473 = new cljs.core.IndexedSeq(G__9474__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9473);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__9469 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__9475__i = 0, G__9475__a = new Array(arguments.length -  3);
while (G__9475__i < G__9475__a.length) {G__9475__a[G__9475__i] = arguments[G__9475__i + 3]; ++G__9475__i;}
  ps = new cljs.core.IndexedSeq(G__9475__a,0);
} 
return G__9469__delegate.call(this,p1,p2,p3,ps);};
G__9469.cljs$lang$maxFixedArity = 3;
G__9469.cljs$lang$applyTo = (function (arglist__9476){
var p1 = cljs.core.first(arglist__9476);
arglist__9476 = cljs.core.next(arglist__9476);
var p2 = cljs.core.first(arglist__9476);
arglist__9476 = cljs.core.next(arglist__9476);
var p3 = cljs.core.first(arglist__9476);
var ps = cljs.core.rest(arglist__9476);
return G__9469__delegate(p1,p2,p3,ps);
});
G__9469.cljs$core$IFn$_invoke$arity$variadic = G__9469__delegate;
return G__9469;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__9477 = null;
if (arguments.length > 3) {
var G__9478__i = 0, G__9478__a = new Array(arguments.length -  3);
while (G__9478__i < G__9478__a.length) {G__9478__a[G__9478__i] = arguments[G__9478__i + 3]; ++G__9478__i;}
G__9477 = new cljs.core.IndexedSeq(G__9478__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__9477);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__9533 = null;
var G__9533__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9533__1 = (function (result){
var G__9519 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9519) : rf.call(null,G__9519));
});
var G__9533__2 = (function (result,input){
var G__9520 = result;
var G__9521 = (function (){var G__9522 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9522) : f.call(null,G__9522));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9520,G__9521) : rf.call(null,G__9520,G__9521));
});
var G__9533__3 = (function() { 
var G__9534__delegate = function (result,input,inputs){
var G__9523 = result;
var G__9524 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9523,G__9524) : rf.call(null,G__9523,G__9524));
};
var G__9534 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__9535__i = 0, G__9535__a = new Array(arguments.length -  2);
while (G__9535__i < G__9535__a.length) {G__9535__a[G__9535__i] = arguments[G__9535__i + 2]; ++G__9535__i;}
  inputs = new cljs.core.IndexedSeq(G__9535__a,0);
} 
return G__9534__delegate.call(this,result,input,inputs);};
G__9534.cljs$lang$maxFixedArity = 2;
G__9534.cljs$lang$applyTo = (function (arglist__9536){
var result = cljs.core.first(arglist__9536);
arglist__9536 = cljs.core.next(arglist__9536);
var input = cljs.core.first(arglist__9536);
var inputs = cljs.core.rest(arglist__9536);
return G__9534__delegate(result,input,inputs);
});
G__9534.cljs$core$IFn$_invoke$arity$variadic = G__9534__delegate;
return G__9534;
})()
;
G__9533 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__9533__0.call(this);
case 1:
return G__9533__1.call(this,result);
case 2:
return G__9533__2.call(this,result,input);
default:
var G__9537 = null;
if (arguments.length > 2) {
var G__9538__i = 0, G__9538__a = new Array(arguments.length -  2);
while (G__9538__i < G__9538__a.length) {G__9538__a[G__9538__i] = arguments[G__9538__i + 2]; ++G__9538__i;}
G__9537 = new cljs.core.IndexedSeq(G__9538__a,0);
}
return G__9533__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__9537);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9533.cljs$lang$maxFixedArity = 2;
G__9533.cljs$lang$applyTo = G__9533__3.cljs$lang$applyTo;
G__9533.cljs$core$IFn$_invoke$arity$0 = G__9533__0;
G__9533.cljs$core$IFn$_invoke$arity$1 = G__9533__1;
G__9533.cljs$core$IFn$_invoke$arity$2 = G__9533__2;
G__9533.cljs$core$IFn$_invoke$arity$variadic = G__9533__3.cljs$core$IFn$_invoke$arity$variadic;
return G__9533;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4871__auto___9539 = size;
var i_9540 = (0);
while(true){
if((i_9540 < n__4871__auto___9539)){
cljs.core.chunk_append(b,(function (){var G__9525 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_9540);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9525) : f.call(null,G__9525));
})());

var G__9541 = (i_9540 + (1));
i_9540 = G__9541;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__9526 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9526) : f.call(null,G__9526));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__9527 = cljs.core.first(s1);
var G__9528 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9527,G__9528) : f.call(null,G__9527,G__9528));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__9529 = cljs.core.first(s1);
var G__9530 = cljs.core.first(s2);
var G__9531 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9529,G__9530,G__9531) : f.call(null,G__9529,G__9530,G__9531));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__9542__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__9479_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__9479_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__9542 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__9543__i = 0, G__9543__a = new Array(arguments.length -  4);
while (G__9543__i < G__9543__a.length) {G__9543__a[G__9543__i] = arguments[G__9543__i + 4]; ++G__9543__i;}
  colls = new cljs.core.IndexedSeq(G__9543__a,0);
} 
return G__9542__delegate.call(this,f,c1,c2,c3,colls);};
G__9542.cljs$lang$maxFixedArity = 4;
G__9542.cljs$lang$applyTo = (function (arglist__9544){
var f = cljs.core.first(arglist__9544);
arglist__9544 = cljs.core.next(arglist__9544);
var c1 = cljs.core.first(arglist__9544);
arglist__9544 = cljs.core.next(arglist__9544);
var c2 = cljs.core.first(arglist__9544);
arglist__9544 = cljs.core.next(arglist__9544);
var c3 = cljs.core.first(arglist__9544);
var colls = cljs.core.rest(arglist__9544);
return G__9542__delegate(f,c1,c2,c3,colls);
});
G__9542.cljs$core$IFn$_invoke$arity$variadic = G__9542__delegate;
return G__9542;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__9545 = null;
if (arguments.length > 4) {
var G__9546__i = 0, G__9546__a = new Array(arguments.length -  4);
while (G__9546__i < G__9546__a.length) {G__9546__a[G__9546__i] = arguments[G__9546__i + 4]; ++G__9546__i;}
G__9545 = new cljs.core.IndexedSeq(G__9546__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__9545);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__9555 = null;
var G__9555__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9555__1 = (function (result){
var G__9552 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9552) : rf.call(null,G__9552));
});
var G__9555__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__9553 = result;
var G__9554 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9553,G__9554) : rf.call(null,G__9553,G__9554));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__9555 = function(result,input){
switch(arguments.length){
case 0:
return G__9555__0.call(this);
case 1:
return G__9555__1.call(this,result);
case 2:
return G__9555__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9555.cljs$core$IFn$_invoke$arity$0 = G__9555__0;
G__9555.cljs$core$IFn$_invoke$arity$1 = G__9555__1;
G__9555.cljs$core$IFn$_invoke$arity$2 = G__9555__2;
return G__9555;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__9562 = null;
var G__9562__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9562__1 = (function (result){
var G__9559 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9559) : rf.call(null,G__9559));
});
var G__9562__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__9560 = result;
var G__9561 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9560,G__9561) : rf.call(null,G__9560,G__9561));
}
});
G__9562 = function(result,input){
switch(arguments.length){
case 0:
return G__9562__0.call(this);
case 1:
return G__9562__1.call(this,result);
case 2:
return G__9562__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9562.cljs$core$IFn$_invoke$arity$0 = G__9562__0;
G__9562.cljs$core$IFn$_invoke$arity$1 = G__9562__1;
G__9562.cljs$core$IFn$_invoke$arity$2 = G__9562__2;
return G__9562;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__9563 = (n__$1 - (1));
var G__9564 = cljs.core.rest(s);
n__$1 = G__9563;
coll__$1 = G__9564;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__9567 = cljs.core.next(s);
var G__9568 = cljs.core.next(lead);
s = G__9567;
lead = G__9568;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__9581 = null;
var G__9581__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9581__1 = (function (result){
var G__9575 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9575) : rf.call(null,G__9575));
});
var G__9581__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__3972__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__3972__auto__)){
var G__9576 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9576) : pred.call(null,G__9576));
} else {
return and__3972__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__9577 = result;
var G__9578 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9577,G__9578) : rf.call(null,G__9577,G__9578));
}
});
G__9581 = function(result,input){
switch(arguments.length){
case 0:
return G__9581__0.call(this);
case 1:
return G__9581__1.call(this,result);
case 2:
return G__9581__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9581.cljs$core$IFn$_invoke$arity$0 = G__9581__0;
G__9581.cljs$core$IFn$_invoke$arity$1 = G__9581__1;
G__9581.cljs$core$IFn$_invoke$arity$2 = G__9581__2;
return G__9581;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__3972__auto__ = s;
if(and__3972__auto__){
var G__9580 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__9580) : pred__$1.call(null,G__9580));
} else {
return and__3972__auto__;
}
})())){
var G__9582 = pred__$1;
var G__9583 = cljs.core.rest(s);
pred__$1 = G__9582;
coll__$1 = G__9583;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__9592 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9592) : f.call(null,G__9592));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__9595__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__9595 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__9596__i = 0, G__9596__a = new Array(arguments.length -  2);
while (G__9596__i < G__9596__a.length) {G__9596__a[G__9596__i] = arguments[G__9596__i + 2]; ++G__9596__i;}
  colls = new cljs.core.IndexedSeq(G__9596__a,0);
} 
return G__9595__delegate.call(this,c1,c2,colls);};
G__9595.cljs$lang$maxFixedArity = 2;
G__9595.cljs$lang$applyTo = (function (arglist__9597){
var c1 = cljs.core.first(arglist__9597);
arglist__9597 = cljs.core.next(arglist__9597);
var c2 = cljs.core.first(arglist__9597);
var colls = cljs.core.rest(arglist__9597);
return G__9595__delegate(c1,c2,colls);
});
G__9595.cljs$core$IFn$_invoke$arity$variadic = G__9595__delegate;
return G__9595;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__9598 = null;
if (arguments.length > 2) {
var G__9599__i = 0, G__9599__a = new Array(arguments.length -  2);
while (G__9599__i < G__9599__a.length) {G__9599__a[G__9599__i] = arguments[G__9599__i + 2]; ++G__9599__i;}
G__9598 = new cljs.core.IndexedSeq(G__9599__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__9598);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__9614 = null;
var G__9614__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9614__1 = (function (result){
var G__9607 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9607) : rf.call(null,G__9607));
});
var G__9614__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__9608 = result;
var G__9609 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9608,G__9609) : rf.call(null,G__9608,G__9609));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__9610 = sepr;
var G__9611 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9610,G__9611) : rf.call(null,G__9610,G__9611));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__9612 = result;
var G__9613 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9612,G__9613) : rf.call(null,G__9612,G__9613));
}
});
G__9614 = function(result,input){
switch(arguments.length){
case 0:
return G__9614__0.call(this);
case 1:
return G__9614__1.call(this,result);
case 2:
return G__9614__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9614.cljs$core$IFn$_invoke$arity$0 = G__9614__0;
G__9614.cljs$core$IFn$_invoke$arity$1 = G__9614__1;
G__9614.cljs$core$IFn$_invoke$arity$2 = G__9614__2;
return G__9614;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__9623__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__9623 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__9624__i = 0, G__9624__a = new Array(arguments.length -  1);
while (G__9624__i < G__9624__a.length) {G__9624__a[G__9624__i] = arguments[G__9624__i + 1]; ++G__9624__i;}
  colls = new cljs.core.IndexedSeq(G__9624__a,0);
} 
return G__9623__delegate.call(this,f,colls);};
G__9623.cljs$lang$maxFixedArity = 1;
G__9623.cljs$lang$applyTo = (function (arglist__9625){
var f = cljs.core.first(arglist__9625);
var colls = cljs.core.rest(arglist__9625);
return G__9623__delegate(f,colls);
});
G__9623.cljs$core$IFn$_invoke$arity$variadic = G__9623__delegate;
return G__9623;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__9626 = null;
if (arguments.length > 1) {
var G__9627__i = 0, G__9627__a = new Array(arguments.length -  1);
while (G__9627__i < G__9627__a.length) {G__9627__a[G__9627__i] = arguments[G__9627__i + 1]; ++G__9627__i;}
G__9626 = new cljs.core.IndexedSeq(G__9627__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__9626);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__9646 = null;
var G__9646__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9646__1 = (function (result){
var G__9640 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9640) : rf.call(null,G__9640));
});
var G__9646__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__9641 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9641) : pred.call(null,G__9641));
})())){
var G__9642 = result;
var G__9643 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9642,G__9643) : rf.call(null,G__9642,G__9643));
} else {
return result;
}
});
G__9646 = function(result,input){
switch(arguments.length){
case 0:
return G__9646__0.call(this);
case 1:
return G__9646__1.call(this,result);
case 2:
return G__9646__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9646.cljs$core$IFn$_invoke$arity$0 = G__9646__0;
G__9646.cljs$core$IFn$_invoke$arity$1 = G__9646__1;
G__9646.cljs$core$IFn$_invoke$arity$2 = G__9646__2;
return G__9646;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4871__auto___9647 = size;
var i_9648 = (0);
while(true){
if((i_9648 < n__4871__auto___9647)){
if(cljs.core.truth_((function (){var G__9644 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_9648);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9644) : pred.call(null,G__9644));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_9648));
} else {
}

var G__9649 = (i_9648 + (1));
i_9648 = G__9649;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__9645 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9645) : pred.call(null,G__9645));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__9656 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__9656) : branch_QMARK_.call(null,G__9656));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__9657 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__9657) : children.call(null,G__9657));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__9658_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__9658_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__9661 = to;
if(G__9661){
var bit__4658__auto__ = (G__9661.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4658__auto__) || (G__9661.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__9662 = to;
if(G__9662){
var bit__4658__auto__ = (G__9662.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4658__auto__) || (G__9662.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__9664 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9664) : f.call(null,G__9664));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__9665__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__9665 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__9666__i = 0, G__9666__a = new Array(arguments.length -  4);
while (G__9666__i < G__9666__a.length) {G__9666__a[G__9666__i] = arguments[G__9666__i + 4]; ++G__9666__i;}
  colls = new cljs.core.IndexedSeq(G__9666__a,0);
} 
return G__9665__delegate.call(this,f,c1,c2,c3,colls);};
G__9665.cljs$lang$maxFixedArity = 4;
G__9665.cljs$lang$applyTo = (function (arglist__9667){
var f = cljs.core.first(arglist__9667);
arglist__9667 = cljs.core.next(arglist__9667);
var c1 = cljs.core.first(arglist__9667);
arglist__9667 = cljs.core.next(arglist__9667);
var c2 = cljs.core.first(arglist__9667);
arglist__9667 = cljs.core.next(arglist__9667);
var c3 = cljs.core.first(arglist__9667);
var colls = cljs.core.rest(arglist__9667);
return G__9665__delegate(f,c1,c2,c3,colls);
});
G__9665.cljs$core$IFn$_invoke$arity$variadic = G__9665__delegate;
return G__9665;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__9668 = null;
if (arguments.length > 4) {
var G__9669__i = 0, G__9669__a = new Array(arguments.length -  4);
while (G__9669__i < G__9669__a.length) {G__9669__a[G__9669__i] = arguments[G__9669__i + 4]; ++G__9669__i;}
G__9668 = new cljs.core.IndexedSeq(G__9669__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__9668);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__9671 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9671) : pred.call(null,G__9671));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__9686 = m__$1;
if(G__9686){
var bit__4665__auto__ = (G__9686.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4665__auto__) || (G__9686.cljs$core$ILookup$)){
return true;
} else {
if((!G__9686.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__9686);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__9686);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__9687 = sentinel;
var G__9688 = m__$2;
var G__9689 = cljs.core.next(ks__$1);
sentinel = G__9687;
m__$1 = G__9688;
ks__$1 = G__9689;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__9690,v){
var vec__9695 = p__9690;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9695,(0),null);
var ks = cljs.core.nthnext(vec__9695,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__9696,f){
var vec__9734 = p__9696;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9734,(0),null);
var ks = cljs.core.nthnext(vec__9734,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9735 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9735) : f.call(null,G__9735));
})());
}
});
var update_in__4 = (function (m,p__9697,f,a){
var vec__9736 = p__9697;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9736,(0),null);
var ks = cljs.core.nthnext(vec__9736,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9737 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__9738 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9737,G__9738) : f.call(null,G__9737,G__9738));
})());
}
});
var update_in__5 = (function (m,p__9698,f,a,b){
var vec__9739 = p__9698;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9739,(0),null);
var ks = cljs.core.nthnext(vec__9739,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9740 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__9741 = a;
var G__9742 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9740,G__9741,G__9742) : f.call(null,G__9740,G__9741,G__9742));
})());
}
});
var update_in__6 = (function (m,p__9699,f,a,b,c){
var vec__9743 = p__9699;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9743,(0),null);
var ks = cljs.core.nthnext(vec__9743,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9744 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__9745 = a;
var G__9746 = b;
var G__9747 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9744,G__9745,G__9746,G__9747) : f.call(null,G__9744,G__9745,G__9746,G__9747));
})());
}
});
var update_in__7 = (function() { 
var G__9749__delegate = function (m,p__9700,f,a,b,c,args){
var vec__9748 = p__9700;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9748,(0),null);
var ks = cljs.core.nthnext(vec__9748,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__9749 = function (m,p__9700,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__9750__i = 0, G__9750__a = new Array(arguments.length -  6);
while (G__9750__i < G__9750__a.length) {G__9750__a[G__9750__i] = arguments[G__9750__i + 6]; ++G__9750__i;}
  args = new cljs.core.IndexedSeq(G__9750__a,0);
} 
return G__9749__delegate.call(this,m,p__9700,f,a,b,c,args);};
G__9749.cljs$lang$maxFixedArity = 6;
G__9749.cljs$lang$applyTo = (function (arglist__9751){
var m = cljs.core.first(arglist__9751);
arglist__9751 = cljs.core.next(arglist__9751);
var p__9700 = cljs.core.first(arglist__9751);
arglist__9751 = cljs.core.next(arglist__9751);
var f = cljs.core.first(arglist__9751);
arglist__9751 = cljs.core.next(arglist__9751);
var a = cljs.core.first(arglist__9751);
arglist__9751 = cljs.core.next(arglist__9751);
var b = cljs.core.first(arglist__9751);
arglist__9751 = cljs.core.next(arglist__9751);
var c = cljs.core.first(arglist__9751);
var args = cljs.core.rest(arglist__9751);
return G__9749__delegate(m,p__9700,f,a,b,c,args);
});
G__9749.cljs$core$IFn$_invoke$arity$variadic = G__9749__delegate;
return G__9749;
})()
;
update_in = function(m,p__9700,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__9700,f);
case 4:
return update_in__4.call(this,m,p__9700,f,a);
case 5:
return update_in__5.call(this,m,p__9700,f,a,b);
case 6:
return update_in__6.call(this,m,p__9700,f,a,b,c);
default:
var G__9752 = null;
if (arguments.length > 6) {
var G__9753__i = 0, G__9753__a = new Array(arguments.length -  6);
while (G__9753__i < G__9753__a.length) {G__9753__a[G__9753__i] = arguments[G__9753__i + 6]; ++G__9753__i;}
G__9752 = new cljs.core.IndexedSeq(G__9753__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__9700,f,a,b,c, G__9752);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9764 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9764) : f.call(null,G__9764));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9765 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__9766 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9765,G__9766) : f.call(null,G__9765,G__9766));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9767 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__9768 = x;
var G__9769 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9767,G__9768,G__9769) : f.call(null,G__9767,G__9768,G__9769));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9770 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__9771 = x;
var G__9772 = y;
var G__9773 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9770,G__9771,G__9772,G__9773) : f.call(null,G__9770,G__9771,G__9772,G__9773));
})());
});
var update__7 = (function() { 
var G__9774__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__9774 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__9775__i = 0, G__9775__a = new Array(arguments.length -  6);
while (G__9775__i < G__9775__a.length) {G__9775__a[G__9775__i] = arguments[G__9775__i + 6]; ++G__9775__i;}
  more = new cljs.core.IndexedSeq(G__9775__a,0);
} 
return G__9774__delegate.call(this,m,k,f,x,y,z,more);};
G__9774.cljs$lang$maxFixedArity = 6;
G__9774.cljs$lang$applyTo = (function (arglist__9776){
var m = cljs.core.first(arglist__9776);
arglist__9776 = cljs.core.next(arglist__9776);
var k = cljs.core.first(arglist__9776);
arglist__9776 = cljs.core.next(arglist__9776);
var f = cljs.core.first(arglist__9776);
arglist__9776 = cljs.core.next(arglist__9776);
var x = cljs.core.first(arglist__9776);
arglist__9776 = cljs.core.next(arglist__9776);
var y = cljs.core.first(arglist__9776);
arglist__9776 = cljs.core.next(arglist__9776);
var z = cljs.core.first(arglist__9776);
var more = cljs.core.rest(arglist__9776);
return G__9774__delegate(m,k,f,x,y,z,more);
});
G__9774.cljs$core$IFn$_invoke$arity$variadic = G__9774__delegate;
return G__9774;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__9777 = null;
if (arguments.length > 6) {
var G__9778__i = 0, G__9778__a = new Array(arguments.length -  6);
while (G__9778__i < G__9778__a.length) {G__9778__a[G__9778__i] = arguments[G__9778__i + 6]; ++G__9778__i;}
G__9777 = new cljs.core.IndexedSeq(G__9778__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__9777);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__9779 = (ll - (5));
var G__9780 = r;
ll = G__9779;
ret = G__9780;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__9785 = cljs.core.pv_aget(node,(0));
var G__9786 = (level - (5));
node = G__9785;
level = G__9786;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__9787 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__9788 = (level - (5));
node = G__9787;
level = G__9788;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__9798 = init__$2;
var G__9799 = (j + i);
var G__9800 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9798,G__9799,G__9800) : f.call(null,G__9798,G__9799,G__9800));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__9811 = (j + (1));
var G__9812 = init__$3;
j = G__9811;
init__$2 = G__9812;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__9801 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9801) : cljs.core.deref.call(null,G__9801));
} else {
var G__9813 = (i + len);
var G__9814 = init__$2;
i = G__9813;
init__$1 = G__9814;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4405__auto__ = self__.__hash;
if(!((h__4405__auto__ == null))){
return h__4405__auto__;
} else {
var h__4405__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4405__auto____$1;

return h__4405__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__9802 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__9802) : cljs.core.tv_editable_root.call(null,G__9802));
})(),(function (){var G__9803 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__9803) : cljs.core.tv_editable_tail.call(null,G__9803));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__9804 = init__$2;
var G__9805 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9804,G__9805) : f.call(null,G__9804,G__9805));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__9815 = (j + (1));
var G__9816 = init__$3;
j = G__9815;
init__$2 = G__9816;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__9806 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9806) : cljs.core.deref.call(null,G__9806));
} else {
var G__9817 = (i + len);
var G__9818 = init__$2;
i = G__9817;
init__$1 = G__9818;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__9807 = coll__$1;
var G__9808 = cljs.core.first_array_for_longvec(coll__$1);
var G__9809 = (0);
var G__9810 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9807,G__9808,G__9809,G__9810) : cljs.core.chunked_seq.call(null,G__9807,G__9808,G__9809,G__9810));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__4871__auto___9819 = len;
var i_9820 = (0);
while(true){
if((i_9820 < n__4871__auto___9819)){
(new_tail[i_9820] = (self__.tail[i_9820]));

var G__9821 = (i_9820 + (1));
i_9820 = G__9821;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__9822 = null;
var G__9822__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__9822__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__9822 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9822__2.call(this,self__,k);
case 3:
return G__9822__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9822.cljs$core$IFn$_invoke$arity$2 = G__9822__2;
G__9822.cljs$core$IFn$_invoke$arity$3 = G__9822__3;
return G__9822;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args9797){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9797)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__9823 = (i + (1));
var G__9824 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__9823;
out = G__9824;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4962__auto__ = this;
return cljs.core.es6_iterator(this__4962__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__9825__i = 0, G__9825__a = new Array(arguments.length -  0);
while (G__9825__i < G__9825__a.length) {G__9825__a[G__9825__i] = arguments[G__9825__i + 0]; ++G__9825__i;}
  args = new cljs.core.IndexedSeq(G__9825__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__9826){
var args = cljs.core.seq(arglist__9826);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__9827 = self__.vec;
var G__9828 = self__.node;
var G__9829 = self__.i;
var G__9830 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9827,G__9828,G__9829,G__9830) : cljs.core.chunked_seq.call(null,G__9827,G__9828,G__9829,G__9830));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4405__auto__ = self__.__hash;
if(!((h__4405__auto__ == null))){
return h__4405__auto__;
} else {
var h__4405__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4405__auto____$1;

return h__4405__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__9831 = self__.vec;
var G__9832 = (self__.i + self__.off);
var G__9833 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__9831,G__9832,G__9833) : cljs.core.subvec.call(null,G__9831,G__9832,G__9833));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__9834 = self__.vec;
var G__9835 = (self__.i + self__.off);
var G__9836 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__9834,G__9835,G__9836) : cljs.core.subvec.call(null,G__9834,G__9835,G__9836));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__9837 = self__.vec;
var G__9838 = self__.node;
var G__9839 = self__.i;
var G__9840 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9837,G__9838,G__9839,G__9840) : cljs.core.chunked_seq.call(null,G__9837,G__9838,G__9839,G__9840));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__9841 = self__.vec;
var G__9842 = cljs.core.unchecked_array_for(self__.vec,end);
var G__9843 = end;
var G__9844 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9841,G__9842,G__9843,G__9844) : cljs.core.chunked_seq.call(null,G__9841,G__9842,G__9843,G__9844));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__9845 = self__.vec;
var G__9846 = self__.node;
var G__9847 = self__.i;
var G__9848 = self__.off;
var G__9849 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__9845,G__9846,G__9847,G__9848,G__9849) : cljs.core.chunked_seq.call(null,G__9845,G__9846,G__9847,G__9848,G__9849));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__9850 = self__.vec;
var G__9851 = cljs.core.unchecked_array_for(self__.vec,end);
var G__9852 = end;
var G__9853 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9850,G__9851,G__9852,G__9853) : cljs.core.chunked_seq.call(null,G__9850,G__9851,G__9852,G__9853));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4962__auto__ = this;
return cljs.core.es6_iterator(this__4962__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__9855 = self__.meta;
var G__9856 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__9857 = self__.start;
var G__9858 = (function (){var x__4301__auto__ = self__.end;
var y__4302__auto__ = (v_pos + (1));
return ((x__4301__auto__ > y__4302__auto__) ? x__4301__auto__ : y__4302__auto__);
})();
var G__9859 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__9855,G__9856,G__9857,G__9858,G__9859) : cljs.core.build_subvec.call(null,G__9855,G__9856,G__9857,G__9858,G__9859));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__9860 = self__.meta;
var G__9861 = self__.v;
var G__9862 = self__.start;
var G__9863 = (self__.end - (1));
var G__9864 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__9860,G__9861,G__9862,G__9863,G__9864) : cljs.core.build_subvec.call(null,G__9860,G__9861,G__9862,G__9863,G__9864));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4405__auto__ = self__.__hash;
if(!((h__4405__auto__ == null))){
return h__4405__auto__;
} else {
var h__4405__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4405__auto____$1;

return h__4405__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__9866 = meta__$1;
var G__9867 = self__.v;
var G__9868 = self__.start;
var G__9869 = self__.end;
var G__9870 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__9866,G__9867,G__9868,G__9869,G__9870) : cljs.core.build_subvec.call(null,G__9866,G__9867,G__9868,G__9869,G__9870));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__9871 = self__.meta;
var G__9872 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__9873 = self__.start;
var G__9874 = (self__.end + (1));
var G__9875 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__9871,G__9872,G__9873,G__9874,G__9875) : cljs.core.build_subvec.call(null,G__9871,G__9872,G__9873,G__9874,G__9875));
});

cljs.core.Subvec.prototype.call = (function() {
var G__9876 = null;
var G__9876__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__9876__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__9876 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9876__2.call(this,self__,k);
case 3:
return G__9876__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9876.cljs$core$IFn$_invoke$arity$2 = G__9876__2;
G__9876.cljs$core$IFn$_invoke$arity$3 = G__9876__3;
return G__9876;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args9854){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9854)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4962__auto__ = this;
return cljs.core.es6_iterator(this__4962__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__9877 = meta;
var G__9878 = v.v;
var G__9879 = (v.start + start);
var G__9880 = (v.start + end);
var G__9881 = __hash;
meta = G__9877;
v = G__9878;
start = G__9879;
end = G__9880;
__hash = G__9881;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj9888 = {};
return obj9888;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__9896 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__9897 = (level - (5));
node = G__9896;
level = G__9897;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__9901 = null;
var G__9901__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__9901__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__9901 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9901__2.call(this,self__,k);
case 3:
return G__9901__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9901.cljs$core$IFn$_invoke$arity$2 = G__9901__2;
G__9901.cljs$core$IFn$_invoke$arity$3 = G__9901__3;
return G__9901;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args9898){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9898)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4405__auto__ = self__.__hash;
if(!((h__4405__auto__ == null))){
return h__4405__auto__;
} else {
var h__4405__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4405__auto____$1;

return h__4405__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4962__auto__ = this;
return cljs.core.es6_iterator(this__4962__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4405__auto__ = self__.__hash;
if(!((h__4405__auto__ == null))){
return h__4405__auto__;
} else {
var h__4405__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4405__auto____$1;

return h__4405__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__3984__auto__ = self__.front;
if(cljs.core.truth_(or__3984__auto__)){
return or__3984__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3984__auto__ = self__.rear;
if(cljs.core.truth_(or__3984__auto__)){
return or__3984__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4962__auto__ = this;
return cljs.core.es6_iterator(this__4962__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__9902 = (i + incr);
i = G__9902;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__9903 = (i + (1));
var G__9904 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__9903;
out = G__9904;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj9908 = {};
return obj9908;
})();
var l = ks.length;
var i_9909 = (0);
while(true){
if((i_9909 < l)){
var k_9910 = (ks[i_9909]);
(new_obj[k_9910] = (obj[k_9910]));

var G__9911 = (i_9909 + (1));
i_9909 = G__9911;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3972__auto__ = (function (){var G__9915 = k;
return goog.isString(G__9915);
})();
if(cljs.core.truth_(and__3972__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3972__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__9916 = init__$1;
var G__9917 = k;
var G__9918 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9916,G__9917,G__9918) : f.call(null,G__9916,G__9917,G__9918));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__9919 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9919) : cljs.core.deref.call(null,G__9919));
} else {
var G__9925 = cljs.core.rest(keys__$1);
var G__9926 = init__$2;
keys__$1 = G__9925;
init__$1 = G__9926;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4405__auto__ = self__.__hash;
if(!((h__4405__auto__ == null))){
return h__4405__auto__;
} else {
var h__4405__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4405__auto____$1;

return h__4405__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3972__auto__ = (function (){var G__9921 = k;
return goog.isString(G__9921);
})();
if(cljs.core.truth_(and__3972__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3972__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__9922 = k;
return goog.isString(G__9922);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3972__auto__ = (function (){var G__9924 = k;
return goog.isString(G__9924);
})();
if(cljs.core.truth_(and__3972__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3972__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__9912_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__9912_SHARP_,(self__.strobj[p1__9912_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__9927 = null;
var G__9927__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__9927__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__9927 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9927__2.call(this,self__,k);
case 3:
return G__9927__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9927.cljs$core$IFn$_invoke$arity$2 = G__9927__2;
G__9927.cljs$core$IFn$_invoke$arity$3 = G__9927__3;
return G__9927;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args9913){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9913)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj9929 = {};
return obj9929;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__9930 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9930,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9930,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__9931 = (i + (2));
i = G__9931;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__9932 = (i + (2));
i = G__9932;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__9933 = (i + (2));
i = G__9933;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__9934 = (i + (2));
i = G__9934;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__9935 = (i + (2));
i = G__9935;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__3984__auto__ = (function (){var G__9939 = k;
return goog.isString(G__9939);
})();
if(cljs.core.truth_(or__3984__auto__)){
return or__3984__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_9940 = (0);
while(true){
if((i_9940 < l)){
(narr[i_9940] = (arr[i_9940]));

var G__9941 = (i_9940 + (1));
i_9940 = G__9941;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4962__auto__ = this;
return cljs.core.es6_iterator(this__4962__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__9943 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__9943) : cljs.core.keys.call(null,G__9943));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__9944 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__9944) : cljs.core.vals.call(null,G__9944));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__9945 = cljs.core.seq(coll);
var chunk__9946 = null;
var count__9947 = (0);
var i__9948 = (0);
while(true){
if((i__9948 < count__9947)){
var vec__9949 = chunk__9946.cljs$core$IIndexed$_nth$arity$2(null,i__9948);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9949,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9949,(1),null);
var G__9950_9963 = v;
var G__9951_9964 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9950_9963,G__9951_9964) : f.call(null,G__9950_9963,G__9951_9964));

var G__9965 = seq__9945;
var G__9966 = chunk__9946;
var G__9967 = count__9947;
var G__9968 = (i__9948 + (1));
seq__9945 = G__9965;
chunk__9946 = G__9966;
count__9947 = G__9967;
i__9948 = G__9968;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__9945);
if(temp__4126__auto__){
var seq__9945__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__9945__$1)){
var c__4771__auto__ = cljs.core.chunk_first(seq__9945__$1);
var G__9969 = cljs.core.chunk_rest(seq__9945__$1);
var G__9970 = c__4771__auto__;
var G__9971 = cljs.core.count(c__4771__auto__);
var G__9972 = (0);
seq__9945 = G__9969;
chunk__9946 = G__9970;
count__9947 = G__9971;
i__9948 = G__9972;
continue;
} else {
var vec__9952 = cljs.core.first(seq__9945__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9952,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9952,(1),null);
var G__9953_9973 = v;
var G__9954_9974 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9953_9973,G__9954_9974) : f.call(null,G__9953_9973,G__9954_9974));

var G__9975 = cljs.core.next(seq__9945__$1);
var G__9976 = null;
var G__9977 = (0);
var G__9978 = (0);
seq__9945 = G__9975;
chunk__9946 = G__9976;
count__9947 = G__9977;
i__9948 = G__9978;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__9955 = init__$1;
var G__9956 = (self__.arr[i]);
var G__9957 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9955,G__9956,G__9957) : f.call(null,G__9955,G__9956,G__9957));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__9958 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9958) : cljs.core.deref.call(null,G__9958));
} else {
var G__9979 = (i + (2));
var G__9980 = init__$2;
i = G__9979;
init__$1 = G__9980;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4405__auto__ = self__.__hash;
if(!((h__4405__auto__ == null))){
return h__4405__auto__;
} else {
var h__4405__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4405__auto____$1;

return h__4405__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__9959 = other;
if(G__9959){
var bit__4658__auto__ = (G__9959.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4658__auto__) || (G__9959.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__9981 = (i + (2));
i = G__9981;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj9961 = {};
return obj9961;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__9982 = (s + (2));
var G__9983 = d;
s = G__9982;
d = G__9983;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__9984 = (s + (2));
var G__9985 = (d + (2));
s = G__9984;
d = G__9985;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__9962 = cljs.core.aclone(self__.arr);
(G__9962[(idx + (1))] = v);

return G__9962;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__9986 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__9987 = cljs.core.next(es);
ret = G__9986;
es = G__9987;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__9988 = null;
var G__9988__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__9988__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__9988 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9988__2.call(this,self__,k);
case 3:
return G__9988__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9988.cljs$core$IFn$_invoke$arity$2 = G__9988__2;
G__9988.cljs$core$IFn$_invoke$arity$3 = G__9988__3;
return G__9988;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args9942){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9942)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__9989 = (i + (2));
var G__9990 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__9989;
ret = G__9990;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4962__auto__ = this;
return cljs.core.es6_iterator(this__4962__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__9991_9999 = self__.arr;
G__9991_9999.pop();

G__9991_9999.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__9992 = self__.len;
var G__9993 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__9992,G__9993) : cljs.core.array__GT_transient_hash_map.call(null,G__9992,G__9993));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__9994 = o;
if(G__9994){
var bit__4665__auto__ = (G__9994.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4665__auto__) || (G__9994.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__9994.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__9994);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__9994);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__9995 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9995) : cljs.core.key.call(null,G__9995));
})(),(function (){var G__9996 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__9996) : cljs.core.val.call(null,G__9996));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__10000 = cljs.core.next(es);
var G__10001 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__9997 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9997) : cljs.core.key.call(null,G__9997));
})(),(function (){var G__9998 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__9998) : cljs.core.val.call(null,G__9998));
})());
es = G__10000;
tcoll__$2 = G__10001;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__10002 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__10003 = (i + (2));
out = G__10002;
i = G__10003;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__10006 = cljs.core.aclone(arr);
(G__10006[i] = a);

return G__10006;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__10007 = cljs.core.aclone(arr);
(G__10007[i] = a);

(G__10007[j] = b);

return G__10007;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__10012 = init__$1;
var G__10013 = k;
var G__10014 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10012,G__10013,G__10014) : f.call(null,G__10012,G__10013,G__10014));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__10015 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10015) : cljs.core.deref.call(null,G__10015));
} else {
var G__10016 = (i + (2));
var G__10017 = init__$2;
i = G__10016;
init__$1 = G__10017;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__10018 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__10018) : cljs.core.create_inode_seq.call(null,G__10018));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_10032 = (0);
var j_10033 = (0);
while(true){
if((i_10032 < (32))){
if((((self__.bitmap >>> i_10032) & (1)) === (0))){
var G__10034 = (i_10032 + (1));
var G__10035 = j_10033;
i_10032 = G__10034;
j_10033 = G__10035;
continue;
} else {
(nodes[i_10032] = ((!(((self__.arr[j_10033]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_10033])),(self__.arr[j_10033]),(self__.arr[(j_10033 + (1))]),added_leaf_QMARK_):(self__.arr[(j_10033 + (1))])));

var G__10036 = (i_10032 + (1));
var G__10037 = (j_10033 + (2));
i_10032 = G__10036;
j_10033 = G__10037;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__10019 = edit__$1;
var G__10020 = (shift + (5));
var G__10021 = key_or_nil;
var G__10022 = val_or_node;
var G__10023 = hash;
var G__10024 = key;
var G__10025 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__10019,G__10020,G__10021,G__10022,G__10023,G__10024,G__10025) : cljs.core.create_node.call(null,G__10019,G__10020,G__10021,G__10022,G__10023,G__10024,G__10025));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_10038 = (0);
var j_10039 = (0);
while(true){
if((i_10038 < (32))){
if((((self__.bitmap >>> i_10038) & (1)) === (0))){
var G__10040 = (i_10038 + (1));
var G__10041 = j_10039;
i_10038 = G__10040;
j_10039 = G__10041;
continue;
} else {
(nodes[i_10038] = ((!(((self__.arr[j_10039]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_10039])),(self__.arr[j_10039]),(self__.arr[(j_10039 + (1))]),added_leaf_QMARK_):(self__.arr[(j_10039 + (1))])));

var G__10042 = (i_10038 + (1));
var G__10043 = (j_10039 + (2));
i_10038 = G__10042;
j_10039 = G__10043;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__10026 = (shift + (5));
var G__10027 = key_or_nil;
var G__10028 = val_or_node;
var G__10029 = hash;
var G__10030 = key;
var G__10031 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__10026,G__10027,G__10028,G__10029,G__10030,G__10031) : cljs.core.create_node.call(null,G__10026,G__10027,G__10028,G__10029,G__10030,G__10031));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__10044 = (i + (1));
var G__10045 = (j + (2));
var G__10046 = (bitmap | ((1) << i));
i = G__10044;
j = G__10045;
bitmap = G__10046;
continue;
} else {
var G__10047 = (i + (1));
var G__10048 = j;
var G__10049 = bitmap;
i = G__10047;
j = G__10048;
bitmap = G__10049;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__10050 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__10050) : cljs.core.create_array_node_seq.call(null,G__10050));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__10051 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10051) : cljs.core.deref.call(null,G__10051));
} else {
var G__10052 = (i + (1));
var G__10053 = init__$2;
i = G__10052;
init__$1 = G__10053;
continue;
}
} else {
var G__10054 = (i + (1));
var G__10055 = init__$1;
i = G__10054;
init__$1 = G__10055;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__10056 = (i + (2));
i = G__10056;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__10057 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__10057) : cljs.core.create_inode_seq.call(null,G__10057));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4405__auto__ = self__.__hash;
if(!((h__4405__auto__ == null))){
return h__4405__auto__;
} else {
var h__4405__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4405__auto____$1;

return h__4405__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__10058 = self__.nodes;
var G__10059 = (self__.i + (2));
var G__10060 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__10058,G__10059,G__10060) : cljs.core.create_inode_seq.call(null,G__10058,G__10059,G__10060));
} else {
var G__10061 = self__.nodes;
var G__10062 = self__.i;
var G__10063 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__10061,G__10062,G__10063) : cljs.core.create_inode_seq.call(null,G__10061,G__10062,G__10063));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4962__auto__ = this;
return cljs.core.es6_iterator(this__4962__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__10067 = (j + (2));
j = G__10067;
continue;
}
} else {
var G__10068 = (j + (2));
j = G__10068;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4405__auto__ = self__.__hash;
if(!((h__4405__auto__ == null))){
return h__4405__auto__;
} else {
var h__4405__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4405__auto____$1;

return h__4405__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__10069 = null;
var G__10070 = self__.nodes;
var G__10071 = self__.i;
var G__10072 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__10069,G__10070,G__10071,G__10072) : cljs.core.create_array_node_seq.call(null,G__10069,G__10070,G__10071,G__10072));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4962__auto__ = this;
return cljs.core.es6_iterator(this__4962__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__10077 = (j + (1));
j = G__10077;
continue;
}
} else {
var G__10078 = (j + (1));
j = G__10078;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__10080 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__10080) : cljs.core.keys.call(null,G__10080));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__10081 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__10081) : cljs.core.vals.call(null,G__10081));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__10082 = cljs.core.seq(coll);
var chunk__10083 = null;
var count__10084 = (0);
var i__10085 = (0);
while(true){
if((i__10085 < count__10084)){
var vec__10086 = chunk__10083.cljs$core$IIndexed$_nth$arity$2(null,i__10085);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10086,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10086,(1),null);
var G__10087_10098 = v;
var G__10088_10099 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10087_10098,G__10088_10099) : f.call(null,G__10087_10098,G__10088_10099));

var G__10100 = seq__10082;
var G__10101 = chunk__10083;
var G__10102 = count__10084;
var G__10103 = (i__10085 + (1));
seq__10082 = G__10100;
chunk__10083 = G__10101;
count__10084 = G__10102;
i__10085 = G__10103;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__10082);
if(temp__4126__auto__){
var seq__10082__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__10082__$1)){
var c__4771__auto__ = cljs.core.chunk_first(seq__10082__$1);
var G__10104 = cljs.core.chunk_rest(seq__10082__$1);
var G__10105 = c__4771__auto__;
var G__10106 = cljs.core.count(c__4771__auto__);
var G__10107 = (0);
seq__10082 = G__10104;
chunk__10083 = G__10105;
count__10084 = G__10106;
i__10085 = G__10107;
continue;
} else {
var vec__10089 = cljs.core.first(seq__10082__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10089,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10089,(1),null);
var G__10090_10108 = v;
var G__10091_10109 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10090_10108,G__10091_10109) : f.call(null,G__10090_10108,G__10091_10109));

var G__10110 = cljs.core.next(seq__10082__$1);
var G__10111 = null;
var G__10112 = (0);
var G__10113 = (0);
seq__10082 = G__10110;
chunk__10083 = G__10111;
count__10084 = G__10112;
i__10085 = G__10113;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__10092 = init;
var G__10093 = null;
var G__10094 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10092,G__10093,G__10094) : f.call(null,G__10092,G__10093,G__10094));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__10095 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10095) : cljs.core.deref.call(null,G__10095));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4405__auto__ = self__.__hash;
if(!((h__4405__auto__ == null))){
return h__4405__auto__;
} else {
var h__4405__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4405__auto____$1;

return h__4405__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj10097 = {};
return obj10097;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__10114 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__10115 = cljs.core.next(es);
ret = G__10114;
es = G__10115;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__10116 = null;
var G__10116__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10116__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10116 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10116__2.call(this,self__,k);
case 3:
return G__10116__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10116.cljs$core$IFn$_invoke$arity$2 = G__10116__2;
G__10116.cljs$core$IFn$_invoke$arity$3 = G__10116__3;
return G__10116;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args10079){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10079)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__10117 = (i + (2));
var G__10118 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__10117;
ret = G__10118;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__10119 = (i + (1));
var G__10120 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__10119;
out = G__10120;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4962__auto__ = this;
return cljs.core.es6_iterator(this__4962__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__10121 = o;
if(G__10121){
var bit__4665__auto__ = (G__10121.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4665__auto__) || (G__10121.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__10121.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__10121);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__10121);
}
})()){
return tcoll.assoc_BANG_((function (){var G__10122 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__10122) : cljs.core.key.call(null,G__10122));
})(),(function (){var G__10123 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__10123) : cljs.core.val.call(null,G__10123));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__10126 = cljs.core.next(es);
var G__10127 = tcoll__$1.assoc_BANG_((function (){var G__10124 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__10124) : cljs.core.key.call(null,G__10124));
})(),(function (){var G__10125 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__10125) : cljs.core.val.call(null,G__10125));
})());
es = G__10126;
tcoll__$1 = G__10127;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__10128 = ((ascending_QMARK_)?t.left:t.right);
var G__10129 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__10128;
stack__$1 = G__10129;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4405__auto__ = self__.__hash;
if(!((h__4405__auto__ == null))){
return h__4405__auto__;
} else {
var h__4405__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4405__auto____$1;

return h__4405__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4962__auto__ = this;
return cljs.core.es6_iterator(this__4962__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__10142 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10142) : cljs.core.deref.call(null,G__10142));
} else {
var init__$2 = (function (){var G__10143 = init__$1;
var G__10144 = node.key;
var G__10145 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10143,G__10144,G__10145) : f.call(null,G__10143,G__10144,G__10145));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__10146 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10146) : cljs.core.deref.call(null,G__10146));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__10147 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10147) : cljs.core.deref.call(null,G__10147));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4405__auto__ = self__.__hash;
if(!((h__4405__auto__ == null))){
return h__4405__auto__;
} else {
var h__4405__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4405__auto____$1;

return h__4405__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__10149 = null;
var G__10149__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10149__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10149 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10149__2.call(this,self__,k);
case 3:
return G__10149__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10149.cljs$core$IFn$_invoke$arity$2 = G__10149__2;
G__10149.cljs$core$IFn$_invoke$arity$3 = G__10149__3;
return G__10149;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args10148){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10148)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4962__auto__ = this;
return cljs.core.es6_iterator(this__4962__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4405__auto__ = self__.__hash;
if(!((h__4405__auto__ == null))){
return h__4405__auto__;
} else {
var h__4405__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4405__auto____$1;

return h__4405__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__10151 = null;
var G__10151__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10151__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10151 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10151__2.call(this,self__,k);
case 3:
return G__10151__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10151.cljs$core$IFn$_invoke$arity$2 = G__10151__2;
G__10151.cljs$core$IFn$_invoke$arity$3 = G__10151__3;
return G__10151;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args10150){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10150)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4962__auto__ = this;
return cljs.core.es6_iterator(this__4962__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__10164 = k;
var G__10165 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__10164,G__10165) : comp.call(null,G__10164,G__10165));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__10184 = k;
var G__10185 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__10184,G__10185) : comp.call(null,G__10184,G__10185));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__10196 = k;
var G__10197 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__10196,G__10197) : comp.call(null,G__10196,G__10197));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__10199 = cljs.core.seq(coll);
var chunk__10200 = null;
var count__10201 = (0);
var i__10202 = (0);
while(true){
if((i__10202 < count__10201)){
var vec__10203 = chunk__10200.cljs$core$IIndexed$_nth$arity$2(null,i__10202);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10203,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10203,(1),null);
var G__10204_10216 = v;
var G__10205_10217 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10204_10216,G__10205_10217) : f.call(null,G__10204_10216,G__10205_10217));

var G__10218 = seq__10199;
var G__10219 = chunk__10200;
var G__10220 = count__10201;
var G__10221 = (i__10202 + (1));
seq__10199 = G__10218;
chunk__10200 = G__10219;
count__10201 = G__10220;
i__10202 = G__10221;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__10199);
if(temp__4126__auto__){
var seq__10199__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__10199__$1)){
var c__4771__auto__ = cljs.core.chunk_first(seq__10199__$1);
var G__10222 = cljs.core.chunk_rest(seq__10199__$1);
var G__10223 = c__4771__auto__;
var G__10224 = cljs.core.count(c__4771__auto__);
var G__10225 = (0);
seq__10199 = G__10222;
chunk__10200 = G__10223;
count__10201 = G__10224;
i__10202 = G__10225;
continue;
} else {
var vec__10206 = cljs.core.first(seq__10199__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10206,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10206,(1),null);
var G__10207_10226 = v;
var G__10208_10227 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10207_10226,G__10208_10227) : f.call(null,G__10207_10226,G__10208_10227));

var G__10228 = cljs.core.next(seq__10199__$1);
var G__10229 = null;
var G__10230 = (0);
var G__10231 = (0);
seq__10199 = G__10228;
chunk__10200 = G__10229;
count__10201 = G__10230;
i__10202 = G__10231;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__10209 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__10209) : cljs.core.keys.call(null,G__10209));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__10210 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__10210) : cljs.core.vals.call(null,G__10210));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__10211 = k;
var G__10212 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__10211,G__10212) : self__.comp.call(null,G__10211,G__10212));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__10232 = t.left;
t = G__10232;
continue;
} else {
var G__10233 = t.right;
t = G__10233;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4405__auto__ = self__.__hash;
if(!((h__4405__auto__ == null))){
return h__4405__auto__;
} else {
var h__4405__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4405__auto____$1;

return h__4405__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__10234 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__10235 = cljs.core.next(es);
ret = G__10234;
es = G__10235;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__10236 = null;
var G__10236__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10236__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10236 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10236__2.call(this,self__,k);
case 3:
return G__10236__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10236.cljs$core$IFn$_invoke$arity$2 = G__10236__2;
G__10236.cljs$core$IFn$_invoke$arity$3 = G__10236__3;
return G__10236;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args10198){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10198)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__10213 = k;
var G__10214 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__10213,G__10214) : self__.comp.call(null,G__10213,G__10214));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__10237 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__10238 = t.left;
stack = G__10237;
t = G__10238;
continue;
} else {
var G__10239 = stack;
var G__10240 = t.right;
stack = G__10239;
t = G__10240;
continue;
}
} else {
if((c > (0))){
var G__10241 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__10242 = t.right;
stack = G__10241;
t = G__10242;
continue;
} else {
var G__10243 = stack;
var G__10244 = t.left;
stack = G__10243;
t = G__10244;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__10215 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__10215) : cljs.core.key.call(null,G__10215));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4962__auto__ = this;
return cljs.core.es6_iterator(this__4962__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__10245 = cljs.core.nnext(in$);
var G__10246 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__10245;
out = G__10246;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__10247__i = 0, G__10247__a = new Array(arguments.length -  0);
while (G__10247__i < G__10247__a.length) {G__10247__a[G__10247__i] = arguments[G__10247__i + 0]; ++G__10247__i;}
  keyvals = new cljs.core.IndexedSeq(G__10247__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__10248){
var keyvals = cljs.core.seq(arglist__10248);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__10249__i = 0, G__10249__a = new Array(arguments.length -  0);
while (G__10249__i < G__10249__a.length) {G__10249__a[G__10249__i] = arguments[G__10249__i + 0]; ++G__10249__i;}
  keyvals = new cljs.core.IndexedSeq(G__10249__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__10250){
var keyvals = cljs.core.seq(arglist__10250);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj10254 = {};
return obj10254;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__10255 = cljs.core.nnext(kvs);
kvs = G__10255;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__10256__i = 0, G__10256__a = new Array(arguments.length -  0);
while (G__10256__i < G__10256__a.length) {G__10256__a[G__10256__i] = arguments[G__10256__i + 0]; ++G__10256__i;}
  keyvals = new cljs.core.IndexedSeq(G__10256__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__10257){
var keyvals = cljs.core.seq(arglist__10257);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__10258 = cljs.core.nnext(in$);
var G__10259 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__10258;
out = G__10259;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__10260__i = 0, G__10260__a = new Array(arguments.length -  0);
while (G__10260__i < G__10260__a.length) {G__10260__a[G__10260__i] = arguments[G__10260__i + 0]; ++G__10260__i;}
  keyvals = new cljs.core.IndexedSeq(G__10260__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__10261){
var keyvals = cljs.core.seq(arglist__10261);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__10262 = cljs.core.nnext(in$);
var G__10263 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__10262;
out = G__10263;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__10264__i = 0, G__10264__a = new Array(arguments.length -  1);
while (G__10264__i < G__10264__a.length) {G__10264__a[G__10264__i] = arguments[G__10264__i + 1]; ++G__10264__i;}
  keyvals = new cljs.core.IndexedSeq(G__10264__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__10265){
var comparator = cljs.core.first(arglist__10265);
var keyvals = cljs.core.rest(arglist__10265);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__10266 = self__.mseq;
if(G__10266){
var bit__4665__auto__ = (G__10266.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4665__auto__) || (G__10266.cljs$core$INext$)){
return true;
} else {
if((!G__10266.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10266);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10266);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__10267 = self__.mseq;
if(G__10267){
var bit__4665__auto__ = (G__10267.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4665__auto__) || (G__10267.cljs$core$INext$)){
return true;
} else {
if((!G__10267.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10267);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10267);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4962__auto__ = this;
return cljs.core.es6_iterator(this__4962__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__10268 = self__.mseq;
if(G__10268){
var bit__4665__auto__ = (G__10268.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4665__auto__) || (G__10268.cljs$core$INext$)){
return true;
} else {
if((!G__10268.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10268);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10268);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__10269 = self__.mseq;
if(G__10269){
var bit__4665__auto__ = (G__10269.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4665__auto__) || (G__10269.cljs$core$INext$)){
return true;
} else {
if((!G__10269.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10269);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10269);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4962__auto__ = this;
return cljs.core.es6_iterator(this__4962__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__10270_SHARP_,p2__10271_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3984__auto__ = p1__10270_SHARP_;
if(cljs.core.truth_(or__3984__auto__)){
return or__3984__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__10271_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__10272__i = 0, G__10272__a = new Array(arguments.length -  0);
while (G__10272__i < G__10272__a.length) {G__10272__a[G__10272__i] = arguments[G__10272__i + 0]; ++G__10272__i;}
  maps = new cljs.core.IndexedSeq(G__10272__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__10273){
var maps = cljs.core.seq(arglist__10273);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10276 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__10277 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10276,G__10277) : f.call(null,G__10276,G__10277));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__3984__auto__ = m1;
if(cljs.core.truth_(or__3984__auto__)){
return or__3984__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__10278__i = 0, G__10278__a = new Array(arguments.length -  1);
while (G__10278__i < G__10278__a.length) {G__10278__a[G__10278__i] = arguments[G__10278__i + 1]; ++G__10278__i;}
  maps = new cljs.core.IndexedSeq(G__10278__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__10279){
var f = cljs.core.first(arglist__10279);
var maps = cljs.core.rest(arglist__10279);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__10280 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__10281 = cljs.core.next(keys);
ret = G__10280;
keys = G__10281;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__10284 = cljs.core.seq(coll);
var chunk__10285 = null;
var count__10286 = (0);
var i__10287 = (0);
while(true){
if((i__10287 < count__10286)){
var vec__10288 = chunk__10285.cljs$core$IIndexed$_nth$arity$2(null,i__10287);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10288,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10288,(1),null);
var G__10289_10294 = v;
var G__10290_10295 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10289_10294,G__10290_10295) : f.call(null,G__10289_10294,G__10290_10295));

var G__10296 = seq__10284;
var G__10297 = chunk__10285;
var G__10298 = count__10286;
var G__10299 = (i__10287 + (1));
seq__10284 = G__10296;
chunk__10285 = G__10297;
count__10286 = G__10298;
i__10287 = G__10299;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__10284);
if(temp__4126__auto__){
var seq__10284__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__10284__$1)){
var c__4771__auto__ = cljs.core.chunk_first(seq__10284__$1);
var G__10300 = cljs.core.chunk_rest(seq__10284__$1);
var G__10301 = c__4771__auto__;
var G__10302 = cljs.core.count(c__4771__auto__);
var G__10303 = (0);
seq__10284 = G__10300;
chunk__10285 = G__10301;
count__10286 = G__10302;
i__10287 = G__10303;
continue;
} else {
var vec__10291 = cljs.core.first(seq__10284__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10291,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10291,(1),null);
var G__10292_10304 = v;
var G__10293_10305 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10292_10304,G__10293_10305) : f.call(null,G__10292_10304,G__10293_10305));

var G__10306 = cljs.core.next(seq__10284__$1);
var G__10307 = null;
var G__10308 = (0);
var G__10309 = (0);
seq__10284 = G__10306;
chunk__10285 = G__10307;
count__10286 = G__10308;
i__10287 = G__10309;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4405__auto__ = self__.__hash;
if(!((h__4405__auto__ == null))){
return h__4405__auto__;
} else {
var h__4405__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4405__auto____$1;

return h__4405__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__10282_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__10282_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__10310 = null;
var G__10310__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10310__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10310 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10310__2.call(this,self__,k);
case 3:
return G__10310__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10310.cljs$core$IFn$_invoke$arity$2 = G__10310__2;
G__10310.cljs$core$IFn$_invoke$arity$3 = G__10310__3;
return G__10310;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args10283){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10283)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__10311 = (i + (1));
var G__10312 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__10311;
out = G__10312;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__10313 = (i + (1));
var G__10314 = cljs.core._conj_BANG_(out,(items[i]));
i = G__10313;
out = G__10314;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4962__auto__ = this;
return cljs.core.es6_iterator(this__4962__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__10316 = null;
var G__10316__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__10316__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__10316 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10316__2.call(this,self__,k);
case 3:
return G__10316__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10316.cljs$core$IFn$_invoke$arity$2 = G__10316__2;
G__10316.cljs$core$IFn$_invoke$arity$3 = G__10316__3;
return G__10316;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args10315){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10315)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__10319 = cljs.core.seq(coll);
var chunk__10320 = null;
var count__10321 = (0);
var i__10322 = (0);
while(true){
if((i__10322 < count__10321)){
var vec__10323 = chunk__10320.cljs$core$IIndexed$_nth$arity$2(null,i__10322);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10323,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10323,(1),null);
var G__10324_10329 = v;
var G__10325_10330 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10324_10329,G__10325_10330) : f.call(null,G__10324_10329,G__10325_10330));

var G__10331 = seq__10319;
var G__10332 = chunk__10320;
var G__10333 = count__10321;
var G__10334 = (i__10322 + (1));
seq__10319 = G__10331;
chunk__10320 = G__10332;
count__10321 = G__10333;
i__10322 = G__10334;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__10319);
if(temp__4126__auto__){
var seq__10319__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__10319__$1)){
var c__4771__auto__ = cljs.core.chunk_first(seq__10319__$1);
var G__10335 = cljs.core.chunk_rest(seq__10319__$1);
var G__10336 = c__4771__auto__;
var G__10337 = cljs.core.count(c__4771__auto__);
var G__10338 = (0);
seq__10319 = G__10335;
chunk__10320 = G__10336;
count__10321 = G__10337;
i__10322 = G__10338;
continue;
} else {
var vec__10326 = cljs.core.first(seq__10319__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10326,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10326,(1),null);
var G__10327_10339 = v;
var G__10328_10340 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10327_10339,G__10328_10340) : f.call(null,G__10327_10339,G__10328_10340));

var G__10341 = cljs.core.next(seq__10319__$1);
var G__10342 = null;
var G__10343 = (0);
var G__10344 = (0);
seq__10319 = G__10341;
chunk__10320 = G__10342;
count__10321 = G__10343;
i__10322 = G__10344;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4405__auto__ = self__.__hash;
if(!((h__4405__auto__ == null))){
return h__4405__auto__;
} else {
var h__4405__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4405__auto____$1;

return h__4405__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__10317_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__10317_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__10345 = null;
var G__10345__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10345__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10345 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10345__2.call(this,self__,k);
case 3:
return G__10345__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10345.cljs$core$IFn$_invoke$arity$2 = G__10345__2;
G__10345.cljs$core$IFn$_invoke$arity$3 = G__10345__3;
return G__10345;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args10318){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10318)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4962__auto__ = this;
return cljs.core.es6_iterator(this__4962__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__4865__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__4865__auto__.length)){
var G__10346 = (i + (1));
var G__10347 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__10346;
res = G__10347;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__10348 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__10349 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__10348;
out = G__10349;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__10350__delegate = function (keys){
return cljs.core.set(keys);
};
var G__10350 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__10351__i = 0, G__10351__a = new Array(arguments.length -  0);
while (G__10351__i < G__10351__a.length) {G__10351__a[G__10351__i] = arguments[G__10351__i + 0]; ++G__10351__i;}
  keys = new cljs.core.IndexedSeq(G__10351__a,0);
} 
return G__10350__delegate.call(this,keys);};
G__10350.cljs$lang$maxFixedArity = 0;
G__10350.cljs$lang$applyTo = (function (arglist__10352){
var keys = cljs.core.seq(arglist__10352);
return G__10350__delegate(keys);
});
G__10350.cljs$core$IFn$_invoke$arity$variadic = G__10350__delegate;
return G__10350;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__10353 = null;
if (arguments.length > 0) {
var G__10354__i = 0, G__10354__a = new Array(arguments.length -  0);
while (G__10354__i < G__10354__a.length) {G__10354__a[G__10354__i] = arguments[G__10354__i + 0]; ++G__10354__i;}
G__10353 = new cljs.core.IndexedSeq(G__10354__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__10353);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__10355__i = 0, G__10355__a = new Array(arguments.length -  0);
while (G__10355__i < G__10355__a.length) {G__10355__a[G__10355__i] = arguments[G__10355__i + 0]; ++G__10355__i;}
  keys = new cljs.core.IndexedSeq(G__10355__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__10356){
var keys = cljs.core.seq(arglist__10356);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__10357__i = 0, G__10357__a = new Array(arguments.length -  1);
while (G__10357__i < G__10357__a.length) {G__10357__a[G__10357__i] = arguments[G__10357__i + 1]; ++G__10357__i;}
  keys = new cljs.core.IndexedSeq(G__10357__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__10358){
var comparator = cljs.core.first(arglist__10358);
var keys = cljs.core.rest(arglist__10358);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__10359_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__10359_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__10359_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__10360_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__10360_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__10360_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__10381 = null;
var G__10381__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10381__1 = (function (result){
var G__10371 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10371) : rf.call(null,G__10371));
});
var G__10381__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__10372 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10372) : cljs.core.deref.call(null,G__10372));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__10373 = result;
var G__10374 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10373,G__10374) : rf.call(null,G__10373,G__10374));
}
});
G__10381 = function(result,input){
switch(arguments.length){
case 0:
return G__10381__0.call(this);
case 1:
return G__10381__1.call(this,result);
case 2:
return G__10381__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10381.cljs$core$IFn$_invoke$arity$0 = G__10381__0;
G__10381.cljs$core$IFn$_invoke$arity$1 = G__10381__1;
G__10381.cljs$core$IFn$_invoke$arity$2 = G__10381__2;
return G__10381;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__10379,seen__$1){
while(true){
var vec__10380 = p__10379;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10380,(0),null);
var xs__$1 = vec__10380;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__10382 = cljs.core.rest(s);
var G__10383 = seen__$1;
p__10379 = G__10382;
seen__$1 = G__10383;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__10384 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__10385 = cljs.core.next(s__$1);
ret = G__10384;
s__$1 = G__10385;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__10387 = x;
if(G__10387){
var bit__4658__auto__ = (G__10387.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4658__auto__) || (G__10387.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__10388 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__10389 = cljs.core.next(ks);
var G__10390 = cljs.core.next(vs);
map = G__10388;
ks = G__10389;
vs = G__10390;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__10401 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__10401) : k.call(null,G__10401));
})() > (function (){var G__10402 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__10402) : k.call(null,G__10402));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__10403__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__10391_SHARP_,p2__10392_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__10391_SHARP_,p2__10392_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__10403 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__10404__i = 0, G__10404__a = new Array(arguments.length -  3);
while (G__10404__i < G__10404__a.length) {G__10404__a[G__10404__i] = arguments[G__10404__i + 3]; ++G__10404__i;}
  more = new cljs.core.IndexedSeq(G__10404__a,0);
} 
return G__10403__delegate.call(this,k,x,y,more);};
G__10403.cljs$lang$maxFixedArity = 3;
G__10403.cljs$lang$applyTo = (function (arglist__10405){
var k = cljs.core.first(arglist__10405);
arglist__10405 = cljs.core.next(arglist__10405);
var x = cljs.core.first(arglist__10405);
arglist__10405 = cljs.core.next(arglist__10405);
var y = cljs.core.first(arglist__10405);
var more = cljs.core.rest(arglist__10405);
return G__10403__delegate(k,x,y,more);
});
G__10403.cljs$core$IFn$_invoke$arity$variadic = G__10403__delegate;
return G__10403;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__10406 = null;
if (arguments.length > 3) {
var G__10407__i = 0, G__10407__a = new Array(arguments.length -  3);
while (G__10407__i < G__10407__a.length) {G__10407__a[G__10407__i] = arguments[G__10407__i + 3]; ++G__10407__i;}
G__10406 = new cljs.core.IndexedSeq(G__10407__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__10406);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__10418 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__10418) : k.call(null,G__10418));
})() < (function (){var G__10419 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__10419) : k.call(null,G__10419));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__10420__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__10408_SHARP_,p2__10409_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__10408_SHARP_,p2__10409_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__10420 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__10421__i = 0, G__10421__a = new Array(arguments.length -  3);
while (G__10421__i < G__10421__a.length) {G__10421__a[G__10421__i] = arguments[G__10421__i + 3]; ++G__10421__i;}
  more = new cljs.core.IndexedSeq(G__10421__a,0);
} 
return G__10420__delegate.call(this,k,x,y,more);};
G__10420.cljs$lang$maxFixedArity = 3;
G__10420.cljs$lang$applyTo = (function (arglist__10422){
var k = cljs.core.first(arglist__10422);
arglist__10422 = cljs.core.next(arglist__10422);
var x = cljs.core.first(arglist__10422);
arglist__10422 = cljs.core.next(arglist__10422);
var y = cljs.core.first(arglist__10422);
var more = cljs.core.rest(arglist__10422);
return G__10420__delegate(k,x,y,more);
});
G__10420.cljs$core$IFn$_invoke$arity$variadic = G__10420__delegate;
return G__10420;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__10423 = null;
if (arguments.length > 3) {
var G__10424__i = 0, G__10424__a = new Array(arguments.length -  3);
while (G__10424__i < G__10424__a.length) {G__10424__a[G__10424__i] = arguments[G__10424__i + 3]; ++G__10424__i;}
G__10423 = new cljs.core.IndexedSeq(G__10424__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__10423);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__10441 = null;
var G__10441__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10441__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__10436 = result;
var G__10437 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10436,G__10437) : rf.call(null,G__10436,G__10437));
})());
})());
var G__10438 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10438) : rf.call(null,G__10438));
});
var G__10441__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__10439 = result;
var G__10440 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10439,G__10440) : rf.call(null,G__10439,G__10440));
} else {
return result;
}
});
G__10441 = function(result,input){
switch(arguments.length){
case 0:
return G__10441__0.call(this);
case 1:
return G__10441__1.call(this,result);
case 2:
return G__10441__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10441.cljs$core$IFn$_invoke$arity$0 = G__10441__0;
G__10441.cljs$core$IFn$_invoke$arity$1 = G__10441__1;
G__10441.cljs$core$IFn$_invoke$arity$2 = G__10441__2;
return G__10441;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__10454 = null;
var G__10454__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10454__1 = (function (result){
var G__10449 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10449) : rf.call(null,G__10449));
});
var G__10454__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__10450 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__10450) : pred.call(null,G__10450));
})())){
var G__10451 = result;
var G__10452 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10451,G__10452) : rf.call(null,G__10451,G__10452));
} else {
return cljs.core.reduced(result);
}
});
G__10454 = function(result,input){
switch(arguments.length){
case 0:
return G__10454__0.call(this);
case 1:
return G__10454__1.call(this,result);
case 2:
return G__10454__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10454.cljs$core$IFn$_invoke$arity$0 = G__10454__0;
G__10454.cljs$core$IFn$_invoke$arity$1 = G__10454__1;
G__10454.cljs$core$IFn$_invoke$arity$2 = G__10454__2;
return G__10454;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__10453 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__10453) : pred.call(null,G__10453));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__10459 = (function (){var G__10461 = cljs.core._entry_key(sc,e);
var G__10462 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__10461,G__10462) : comp.call(null,G__10461,G__10462));
})();
var G__10460 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__10459,G__10460) : test.call(null,G__10459,G__10460));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__10466 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10466,(0),null);
var s = vec__10466;
if(cljs.core.truth_((function (){var G__10467 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__10467) : include.call(null,G__10467));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__10468 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10468,(0),null);
var s = vec__10468;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__10472 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10472,(0),null);
var s = vec__10472;
if(cljs.core.truth_((function (){var G__10473 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__10473) : include.call(null,G__10473));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__10474 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10474,(0),null);
var s = vec__10474;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__10475 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__10475) : Math.ceil.call(null,G__10475));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__4405__auto__ = self__.__hash;
if(!((h__4405__auto__ == null))){
return h__4405__auto__;
} else {
var h__4405__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__4405__auto____$1;

return h__4405__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__10476 = ret;
var G__10477 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10476,G__10477) : f.call(null,G__10476,G__10477));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__10478 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10478) : cljs.core.deref.call(null,G__10478));
} else {
var G__10479 = (i + self__.step);
var G__10480 = ret__$1;
i = G__10479;
ret = G__10480;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4962__auto__ = this;
return cljs.core.es6_iterator(this__4962__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__10498 = null;
var G__10498__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10498__1 = (function (result){
var G__10495 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10495) : rf.call(null,G__10495));
});
var G__10498__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__10496 = result;
var G__10497 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10496,G__10497) : rf.call(null,G__10496,G__10497));
} else {
return result;
}
});
G__10498 = function(result,input){
switch(arguments.length){
case 0:
return G__10498__0.call(this);
case 1:
return G__10498__1.call(this,result);
case 2:
return G__10498__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10498.cljs$core$IFn$_invoke$arity$0 = G__10498__0;
G__10498.cljs$core$IFn$_invoke$arity$1 = G__10498__1;
G__10498.cljs$core$IFn$_invoke$arity$2 = G__10498__2;
return G__10498;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__10520 = null;
var G__10520__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10520__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__10511 = result;
var G__10512 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10511,G__10512) : rf.call(null,G__10511,G__10512));
})());
})());
var G__10513 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10513) : rf.call(null,G__10513));
});
var G__10520__2 = (function (result,input){
var pval = (function (){var G__10514 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10514) : cljs.core.deref.call(null,G__10514));
})();
var val = (function (){var G__10515 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10515) : f.call(null,G__10515));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__10516 = result;
var G__10517 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10516,G__10517) : rf.call(null,G__10516,G__10517));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__10520 = function(result,input){
switch(arguments.length){
case 0:
return G__10520__0.call(this);
case 1:
return G__10520__1.call(this,result);
case 2:
return G__10520__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10520.cljs$core$IFn$_invoke$arity$0 = G__10520__0;
G__10520.cljs$core$IFn$_invoke$arity$1 = G__10520__1;
G__10520.cljs$core$IFn$_invoke$arity$2 = G__10520__2;
return G__10520;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__10518 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10518) : f.call(null,G__10518));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__10499_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__10519 = p1__10499_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10519) : f.call(null,G__10519));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__10529 = init;
var G__10530 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10529,G__10530) : f.call(null,G__10529,G__10530));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__10625 = null;
var G__10625__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__10625__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10583 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10583) : f.call(null,G__10583));
})()],null));
});
var G__10625__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10584 = x;
var G__10585 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10584,G__10585) : f.call(null,G__10584,G__10585));
})()],null));
});
var G__10625__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10586 = x;
var G__10587 = y;
var G__10588 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10586,G__10587,G__10588) : f.call(null,G__10586,G__10587,G__10588));
})()],null));
});
var G__10625__4 = (function() { 
var G__10626__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__10626 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10627__i = 0, G__10627__a = new Array(arguments.length -  3);
while (G__10627__i < G__10627__a.length) {G__10627__a[G__10627__i] = arguments[G__10627__i + 3]; ++G__10627__i;}
  args = new cljs.core.IndexedSeq(G__10627__a,0);
} 
return G__10626__delegate.call(this,x,y,z,args);};
G__10626.cljs$lang$maxFixedArity = 3;
G__10626.cljs$lang$applyTo = (function (arglist__10628){
var x = cljs.core.first(arglist__10628);
arglist__10628 = cljs.core.next(arglist__10628);
var y = cljs.core.first(arglist__10628);
arglist__10628 = cljs.core.next(arglist__10628);
var z = cljs.core.first(arglist__10628);
var args = cljs.core.rest(arglist__10628);
return G__10626__delegate(x,y,z,args);
});
G__10626.cljs$core$IFn$_invoke$arity$variadic = G__10626__delegate;
return G__10626;
})()
;
G__10625 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__10625__0.call(this);
case 1:
return G__10625__1.call(this,x);
case 2:
return G__10625__2.call(this,x,y);
case 3:
return G__10625__3.call(this,x,y,z);
default:
var G__10629 = null;
if (arguments.length > 3) {
var G__10630__i = 0, G__10630__a = new Array(arguments.length -  3);
while (G__10630__i < G__10630__a.length) {G__10630__a[G__10630__i] = arguments[G__10630__i + 3]; ++G__10630__i;}
G__10629 = new cljs.core.IndexedSeq(G__10630__a,0);
}
return G__10625__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10629);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10625.cljs$lang$maxFixedArity = 3;
G__10625.cljs$lang$applyTo = G__10625__4.cljs$lang$applyTo;
G__10625.cljs$core$IFn$_invoke$arity$0 = G__10625__0;
G__10625.cljs$core$IFn$_invoke$arity$1 = G__10625__1;
G__10625.cljs$core$IFn$_invoke$arity$2 = G__10625__2;
G__10625.cljs$core$IFn$_invoke$arity$3 = G__10625__3;
G__10625.cljs$core$IFn$_invoke$arity$variadic = G__10625__4.cljs$core$IFn$_invoke$arity$variadic;
return G__10625;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__10631 = null;
var G__10631__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__10631__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10589 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10589) : f.call(null,G__10589));
})(),(function (){var G__10590 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__10590) : g.call(null,G__10590));
})()],null));
});
var G__10631__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10591 = x;
var G__10592 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10591,G__10592) : f.call(null,G__10591,G__10592));
})(),(function (){var G__10593 = x;
var G__10594 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__10593,G__10594) : g.call(null,G__10593,G__10594));
})()],null));
});
var G__10631__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10595 = x;
var G__10596 = y;
var G__10597 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10595,G__10596,G__10597) : f.call(null,G__10595,G__10596,G__10597));
})(),(function (){var G__10598 = x;
var G__10599 = y;
var G__10600 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__10598,G__10599,G__10600) : g.call(null,G__10598,G__10599,G__10600));
})()],null));
});
var G__10631__4 = (function() { 
var G__10632__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__10632 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10633__i = 0, G__10633__a = new Array(arguments.length -  3);
while (G__10633__i < G__10633__a.length) {G__10633__a[G__10633__i] = arguments[G__10633__i + 3]; ++G__10633__i;}
  args = new cljs.core.IndexedSeq(G__10633__a,0);
} 
return G__10632__delegate.call(this,x,y,z,args);};
G__10632.cljs$lang$maxFixedArity = 3;
G__10632.cljs$lang$applyTo = (function (arglist__10634){
var x = cljs.core.first(arglist__10634);
arglist__10634 = cljs.core.next(arglist__10634);
var y = cljs.core.first(arglist__10634);
arglist__10634 = cljs.core.next(arglist__10634);
var z = cljs.core.first(arglist__10634);
var args = cljs.core.rest(arglist__10634);
return G__10632__delegate(x,y,z,args);
});
G__10632.cljs$core$IFn$_invoke$arity$variadic = G__10632__delegate;
return G__10632;
})()
;
G__10631 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__10631__0.call(this);
case 1:
return G__10631__1.call(this,x);
case 2:
return G__10631__2.call(this,x,y);
case 3:
return G__10631__3.call(this,x,y,z);
default:
var G__10635 = null;
if (arguments.length > 3) {
var G__10636__i = 0, G__10636__a = new Array(arguments.length -  3);
while (G__10636__i < G__10636__a.length) {G__10636__a[G__10636__i] = arguments[G__10636__i + 3]; ++G__10636__i;}
G__10635 = new cljs.core.IndexedSeq(G__10636__a,0);
}
return G__10631__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10635);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10631.cljs$lang$maxFixedArity = 3;
G__10631.cljs$lang$applyTo = G__10631__4.cljs$lang$applyTo;
G__10631.cljs$core$IFn$_invoke$arity$0 = G__10631__0;
G__10631.cljs$core$IFn$_invoke$arity$1 = G__10631__1;
G__10631.cljs$core$IFn$_invoke$arity$2 = G__10631__2;
G__10631.cljs$core$IFn$_invoke$arity$3 = G__10631__3;
G__10631.cljs$core$IFn$_invoke$arity$variadic = G__10631__4.cljs$core$IFn$_invoke$arity$variadic;
return G__10631;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__10637 = null;
var G__10637__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__10637__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10601 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10601) : f.call(null,G__10601));
})(),(function (){var G__10602 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__10602) : g.call(null,G__10602));
})(),(function (){var G__10603 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__10603) : h.call(null,G__10603));
})()],null));
});
var G__10637__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10604 = x;
var G__10605 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10604,G__10605) : f.call(null,G__10604,G__10605));
})(),(function (){var G__10606 = x;
var G__10607 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__10606,G__10607) : g.call(null,G__10606,G__10607));
})(),(function (){var G__10608 = x;
var G__10609 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__10608,G__10609) : h.call(null,G__10608,G__10609));
})()],null));
});
var G__10637__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10610 = x;
var G__10611 = y;
var G__10612 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10610,G__10611,G__10612) : f.call(null,G__10610,G__10611,G__10612));
})(),(function (){var G__10613 = x;
var G__10614 = y;
var G__10615 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__10613,G__10614,G__10615) : g.call(null,G__10613,G__10614,G__10615));
})(),(function (){var G__10616 = x;
var G__10617 = y;
var G__10618 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__10616,G__10617,G__10618) : h.call(null,G__10616,G__10617,G__10618));
})()],null));
});
var G__10637__4 = (function() { 
var G__10638__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__10638 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10639__i = 0, G__10639__a = new Array(arguments.length -  3);
while (G__10639__i < G__10639__a.length) {G__10639__a[G__10639__i] = arguments[G__10639__i + 3]; ++G__10639__i;}
  args = new cljs.core.IndexedSeq(G__10639__a,0);
} 
return G__10638__delegate.call(this,x,y,z,args);};
G__10638.cljs$lang$maxFixedArity = 3;
G__10638.cljs$lang$applyTo = (function (arglist__10640){
var x = cljs.core.first(arglist__10640);
arglist__10640 = cljs.core.next(arglist__10640);
var y = cljs.core.first(arglist__10640);
arglist__10640 = cljs.core.next(arglist__10640);
var z = cljs.core.first(arglist__10640);
var args = cljs.core.rest(arglist__10640);
return G__10638__delegate(x,y,z,args);
});
G__10638.cljs$core$IFn$_invoke$arity$variadic = G__10638__delegate;
return G__10638;
})()
;
G__10637 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__10637__0.call(this);
case 1:
return G__10637__1.call(this,x);
case 2:
return G__10637__2.call(this,x,y);
case 3:
return G__10637__3.call(this,x,y,z);
default:
var G__10641 = null;
if (arguments.length > 3) {
var G__10642__i = 0, G__10642__a = new Array(arguments.length -  3);
while (G__10642__i < G__10642__a.length) {G__10642__a[G__10642__i] = arguments[G__10642__i + 3]; ++G__10642__i;}
G__10641 = new cljs.core.IndexedSeq(G__10642__a,0);
}
return G__10637__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10641);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10637.cljs$lang$maxFixedArity = 3;
G__10637.cljs$lang$applyTo = G__10637__4.cljs$lang$applyTo;
G__10637.cljs$core$IFn$_invoke$arity$0 = G__10637__0;
G__10637.cljs$core$IFn$_invoke$arity$1 = G__10637__1;
G__10637.cljs$core$IFn$_invoke$arity$2 = G__10637__2;
G__10637.cljs$core$IFn$_invoke$arity$3 = G__10637__3;
G__10637.cljs$core$IFn$_invoke$arity$variadic = G__10637__4.cljs$core$IFn$_invoke$arity$variadic;
return G__10637;
})()
});
var juxt__4 = (function() { 
var G__10643__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__10644 = null;
var G__10644__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__10531_SHARP_,p2__10532_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10531_SHARP_,(function (){return (p2__10532_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__10532_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__10532_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__10644__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__10533_SHARP_,p2__10534_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10533_SHARP_,(function (){var G__10619 = x;
return (p2__10534_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__10534_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10619) : p2__10534_SHARP_.call(null,G__10619));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__10644__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__10535_SHARP_,p2__10536_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10535_SHARP_,(function (){var G__10620 = x;
var G__10621 = y;
return (p2__10536_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__10536_SHARP_.cljs$core$IFn$_invoke$arity$2(G__10620,G__10621) : p2__10536_SHARP_.call(null,G__10620,G__10621));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__10644__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__10537_SHARP_,p2__10538_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10537_SHARP_,(function (){var G__10622 = x;
var G__10623 = y;
var G__10624 = z;
return (p2__10538_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__10538_SHARP_.cljs$core$IFn$_invoke$arity$3(G__10622,G__10623,G__10624) : p2__10538_SHARP_.call(null,G__10622,G__10623,G__10624));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__10644__4 = (function() { 
var G__10645__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__10539_SHARP_,p2__10540_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10539_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__10540_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__10645 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10646__i = 0, G__10646__a = new Array(arguments.length -  3);
while (G__10646__i < G__10646__a.length) {G__10646__a[G__10646__i] = arguments[G__10646__i + 3]; ++G__10646__i;}
  args = new cljs.core.IndexedSeq(G__10646__a,0);
} 
return G__10645__delegate.call(this,x,y,z,args);};
G__10645.cljs$lang$maxFixedArity = 3;
G__10645.cljs$lang$applyTo = (function (arglist__10647){
var x = cljs.core.first(arglist__10647);
arglist__10647 = cljs.core.next(arglist__10647);
var y = cljs.core.first(arglist__10647);
arglist__10647 = cljs.core.next(arglist__10647);
var z = cljs.core.first(arglist__10647);
var args = cljs.core.rest(arglist__10647);
return G__10645__delegate(x,y,z,args);
});
G__10645.cljs$core$IFn$_invoke$arity$variadic = G__10645__delegate;
return G__10645;
})()
;
G__10644 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__10644__0.call(this);
case 1:
return G__10644__1.call(this,x);
case 2:
return G__10644__2.call(this,x,y);
case 3:
return G__10644__3.call(this,x,y,z);
default:
var G__10648 = null;
if (arguments.length > 3) {
var G__10649__i = 0, G__10649__a = new Array(arguments.length -  3);
while (G__10649__i < G__10649__a.length) {G__10649__a[G__10649__i] = arguments[G__10649__i + 3]; ++G__10649__i;}
G__10648 = new cljs.core.IndexedSeq(G__10649__a,0);
}
return G__10644__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10648);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10644.cljs$lang$maxFixedArity = 3;
G__10644.cljs$lang$applyTo = G__10644__4.cljs$lang$applyTo;
G__10644.cljs$core$IFn$_invoke$arity$0 = G__10644__0;
G__10644.cljs$core$IFn$_invoke$arity$1 = G__10644__1;
G__10644.cljs$core$IFn$_invoke$arity$2 = G__10644__2;
G__10644.cljs$core$IFn$_invoke$arity$3 = G__10644__3;
G__10644.cljs$core$IFn$_invoke$arity$variadic = G__10644__4.cljs$core$IFn$_invoke$arity$variadic;
return G__10644;
})()
;})(fs__$1))
};
var G__10643 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__10650__i = 0, G__10650__a = new Array(arguments.length -  3);
while (G__10650__i < G__10650__a.length) {G__10650__a[G__10650__i] = arguments[G__10650__i + 3]; ++G__10650__i;}
  fs = new cljs.core.IndexedSeq(G__10650__a,0);
} 
return G__10643__delegate.call(this,f,g,h,fs);};
G__10643.cljs$lang$maxFixedArity = 3;
G__10643.cljs$lang$applyTo = (function (arglist__10651){
var f = cljs.core.first(arglist__10651);
arglist__10651 = cljs.core.next(arglist__10651);
var g = cljs.core.first(arglist__10651);
arglist__10651 = cljs.core.next(arglist__10651);
var h = cljs.core.first(arglist__10651);
var fs = cljs.core.rest(arglist__10651);
return G__10643__delegate(f,g,h,fs);
});
G__10643.cljs$core$IFn$_invoke$arity$variadic = G__10643__delegate;
return G__10643;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__10652 = null;
if (arguments.length > 3) {
var G__10653__i = 0, G__10653__a = new Array(arguments.length -  3);
while (G__10653__i < G__10653__a.length) {G__10653__a[G__10653__i] = arguments[G__10653__i + 3]; ++G__10653__i;}
G__10652 = new cljs.core.IndexedSeq(G__10653__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__10652);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__10654 = cljs.core.next(coll);
coll = G__10654;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__10655 = (n - (1));
var G__10656 = cljs.core.next(coll);
n = G__10655;
coll = G__10656;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__10660 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10660,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10660,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10660,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_10668 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,(function (){var or__3984__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__3984__auto__)){
return or__3984__auto__;
} else {
return "...";
}
})());
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__10669_10675 = cljs.core.first(coll);
var G__10670_10676 = writer;
var G__10671_10677 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__10669_10675,G__10670_10676,G__10671_10677) : print_one.call(null,G__10669_10675,G__10670_10676,G__10671_10677));
} else {
}

var coll_10678__$1 = cljs.core.next(coll);
var n_10679 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_10678__$1) && (((n_10679 == null)) || (!((n_10679 === (0)))))){
cljs.core._write(writer,sep);

var G__10672_10680 = cljs.core.first(coll_10678__$1);
var G__10673_10681 = writer;
var G__10674_10682 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__10672_10680,G__10673_10681,G__10674_10682) : print_one.call(null,G__10672_10680,G__10673_10681,G__10674_10682));

var G__10683 = cljs.core.next(coll_10678__$1);
var G__10684 = (n_10679 - (1));
coll_10678__$1 = G__10683;
n_10679 = G__10684;
continue;
} else {
if((cljs.core.seq(coll_10678__$1)) && ((n_10679 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,(function (){var or__3984__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__3984__auto__)){
return or__3984__auto__;
} else {
return "...";
}
})());
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_10668;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__10689 = cljs.core.seq(ss);
var chunk__10690 = null;
var count__10691 = (0);
var i__10692 = (0);
while(true){
if((i__10692 < count__10691)){
var s = chunk__10690.cljs$core$IIndexed$_nth$arity$2(null,i__10692);
cljs.core._write(writer,s);

var G__10693 = seq__10689;
var G__10694 = chunk__10690;
var G__10695 = count__10691;
var G__10696 = (i__10692 + (1));
seq__10689 = G__10693;
chunk__10690 = G__10694;
count__10691 = G__10695;
i__10692 = G__10696;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__10689);
if(temp__4126__auto__){
var seq__10689__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__10689__$1)){
var c__4771__auto__ = cljs.core.chunk_first(seq__10689__$1);
var G__10697 = cljs.core.chunk_rest(seq__10689__$1);
var G__10698 = c__4771__auto__;
var G__10699 = cljs.core.count(c__4771__auto__);
var G__10700 = (0);
seq__10689 = G__10697;
chunk__10690 = G__10698;
count__10691 = G__10699;
i__10692 = G__10700;
continue;
} else {
var s = cljs.core.first(seq__10689__$1);
cljs.core._write(writer,s);

var G__10701 = cljs.core.next(seq__10689__$1);
var G__10702 = null;
var G__10703 = (0);
var G__10704 = (0);
seq__10689 = G__10701;
chunk__10690 = G__10702;
count__10691 = G__10703;
i__10692 = G__10704;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__10705__i = 0, G__10705__a = new Array(arguments.length -  1);
while (G__10705__i < G__10705__a.length) {G__10705__a[G__10705__i] = arguments[G__10705__i + 1]; ++G__10705__i;}
  ss = new cljs.core.IndexedSeq(G__10705__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__10706){
var writer = cljs.core.first(arglist__10706);
var ss = cljs.core.rest(arglist__10706);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj10708 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj10708;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__10711 = "[\\\\\"\b\f\n\r\t]";
var G__10712 = "g";
return RegExp(G__10711,G__10712);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
cljs.core.pr_writer_impl = (function pr_writer_impl(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__3972__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__3972__auto__)){
var and__3972__auto____$1 = (function (){var G__10726 = obj;
if(G__10726){
var bit__4665__auto__ = (G__10726.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4665__auto__) || (G__10726.cljs$core$IMeta$)){
return true;
} else {
if((!G__10726.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__10726);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__10726);
}
})();
if(and__3972__auto____$1){
return cljs.core.meta(obj);
} else {
return and__3972__auto____$1;
}
} else {
return and__3972__auto__;
}
})())){
cljs.core._write(writer,"^");

var G__10727_10737 = cljs.core.meta(obj);
var G__10728_10738 = writer;
var G__10729_10739 = opts;
(cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__10727_10737,G__10728_10738,G__10729_10739) : cljs.core.pr_writer.call(null,G__10727_10737,G__10728_10738,G__10729_10739));

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__10730 = obj;
if(G__10730){
var bit__4658__auto__ = (G__10730.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4658__auto__) || (G__10730.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__10731 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__10732 = cljs.core.pr_writer;
var G__10733 = writer;
var G__10734 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__10731,G__10732,G__10733,G__10734) : cljs.core.print_map.call(null,G__10731,G__10732,G__10733,G__10734));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__10735 = obj;
return goog.isString(G__10735);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__10740 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__10740;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__10736 = obj;
if(G__10736){
var bit__4665__auto__ = (G__10736.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4665__auto__) || (G__10736.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__10736.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__10736);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__10736);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
var temp__4124__auto__ = new cljs.core.Keyword(null,"alt-impl","alt-impl",670969595).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(temp__4124__auto__)){
var alt_impl = temp__4124__auto__;
var G__10744 = obj;
var G__10745 = writer;
var G__10746 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,new cljs.core.Keyword(null,"fallback-impl","fallback-impl",-1501286995),cljs.core.pr_writer_impl);
return (alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__10744,G__10745,G__10746) : alt_impl.call(null,G__10744,G__10745,G__10746));
} else {
return cljs.core.pr_writer_impl(obj,writer,opts);
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__10751 = cljs.core.seq(cljs.core.next(objs));
var chunk__10752 = null;
var count__10753 = (0);
var i__10754 = (0);
while(true){
if((i__10754 < count__10753)){
var obj = chunk__10752.cljs$core$IIndexed$_nth$arity$2(null,i__10754);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__10755 = seq__10751;
var G__10756 = chunk__10752;
var G__10757 = count__10753;
var G__10758 = (i__10754 + (1));
seq__10751 = G__10755;
chunk__10752 = G__10756;
count__10753 = G__10757;
i__10754 = G__10758;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__10751);
if(temp__4126__auto__){
var seq__10751__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__10751__$1)){
var c__4771__auto__ = cljs.core.chunk_first(seq__10751__$1);
var G__10759 = cljs.core.chunk_rest(seq__10751__$1);
var G__10760 = c__4771__auto__;
var G__10761 = cljs.core.count(c__4771__auto__);
var G__10762 = (0);
seq__10751 = G__10759;
chunk__10752 = G__10760;
count__10753 = G__10761;
i__10754 = G__10762;
continue;
} else {
var obj = cljs.core.first(seq__10751__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__10763 = cljs.core.next(seq__10751__$1);
var G__10764 = null;
var G__10765 = (0);
var G__10766 = (0);
seq__10751 = G__10763;
chunk__10752 = G__10764;
count__10753 = G__10765;
i__10754 = G__10766;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__10767__i = 0, G__10767__a = new Array(arguments.length -  0);
while (G__10767__i < G__10767__a.length) {G__10767__a[G__10767__i] = arguments[G__10767__i + 0]; ++G__10767__i;}
  objs = new cljs.core.IndexedSeq(G__10767__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__10768){
var objs = cljs.core.seq(arglist__10768);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__10769__i = 0, G__10769__a = new Array(arguments.length -  0);
while (G__10769__i < G__10769__a.length) {G__10769__a[G__10769__i] = arguments[G__10769__i + 0]; ++G__10769__i;}
  objs = new cljs.core.IndexedSeq(G__10769__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__10770){
var objs = cljs.core.seq(arglist__10770);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__10771__i = 0, G__10771__a = new Array(arguments.length -  0);
while (G__10771__i < G__10771__a.length) {G__10771__a[G__10771__i] = arguments[G__10771__i + 0]; ++G__10771__i;}
  objs = new cljs.core.IndexedSeq(G__10771__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__10772){
var objs = cljs.core.seq(arglist__10772);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__10773__i = 0, G__10773__a = new Array(arguments.length -  0);
while (G__10773__i < G__10773__a.length) {G__10773__a[G__10773__i] = arguments[G__10773__i + 0]; ++G__10773__i;}
  objs = new cljs.core.IndexedSeq(G__10773__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__10774){
var objs = cljs.core.seq(arglist__10774);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__10775__i = 0, G__10775__a = new Array(arguments.length -  0);
while (G__10775__i < G__10775__a.length) {G__10775__a[G__10775__i] = arguments[G__10775__i + 0]; ++G__10775__i;}
  objs = new cljs.core.IndexedSeq(G__10775__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__10776){
var objs = cljs.core.seq(arglist__10776);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__10777__i = 0, G__10777__a = new Array(arguments.length -  0);
while (G__10777__i < G__10777__a.length) {G__10777__a[G__10777__i] = arguments[G__10777__i + 0]; ++G__10777__i;}
  objs = new cljs.core.IndexedSeq(G__10777__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__10778){
var objs = cljs.core.seq(arglist__10778);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__10779__i = 0, G__10779__a = new Array(arguments.length -  0);
while (G__10779__i < G__10779__a.length) {G__10779__a[G__10779__i] = arguments[G__10779__i + 0]; ++G__10779__i;}
  objs = new cljs.core.IndexedSeq(G__10779__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__10780){
var objs = cljs.core.seq(arglist__10780);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__10781__i = 0, G__10781__a = new Array(arguments.length -  0);
while (G__10781__i < G__10781__a.length) {G__10781__a[G__10781__i] = arguments[G__10781__i + 0]; ++G__10781__i;}
  objs = new cljs.core.IndexedSeq(G__10781__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__10782){
var objs = cljs.core.seq(arglist__10782);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__10789_10795 = cljs.core.key(e);
var G__10790_10796 = w;
var G__10791_10797 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__10789_10795,G__10790_10796,G__10791_10797) : print_one.call(null,G__10789_10795,G__10790_10796,G__10791_10797));

cljs.core._write(w," ");

var G__10792 = cljs.core.val(e);
var G__10793 = w;
var G__10794 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__10792,G__10793,G__10794) : print_one.call(null,G__10792,G__10793,G__10794));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__10798__i = 0, G__10798__a = new Array(arguments.length -  2);
while (G__10798__i < G__10798__a.length) {G__10798__a[G__10798__i] = arguments[G__10798__i + 2]; ++G__10798__i;}
  args = new cljs.core.IndexedSeq(G__10798__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__10799){
var iref = cljs.core.first(arglist__10799);
arglist__10799 = cljs.core.next(arglist__10799);
var f = cljs.core.first(arglist__10799);
var args = cljs.core.rest(arglist__10799);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__10802 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__10802) : cljs.core.atom.call(null,G__10802));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__10804 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10804) : cljs.core.deref.call(null,G__10804));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__10805_SHARP_,p2__10806_SHARP_){
var ret = (function (){var G__10809 = p1__10805_SHARP_;
var G__10810 = p2__10806_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10809,G__10810) : rf.call(null,G__10809,G__10810));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__10813 = null;
var G__10813__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10813__1 = (function (result){
var G__10812 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10812) : rf.call(null,G__10812));
});
var G__10813__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__10813 = function(result,input){
switch(arguments.length){
case 0:
return G__10813__0.call(this);
case 1:
return G__10813__1.call(this,result);
case 2:
return G__10813__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10813.cljs$core$IFn$_invoke$arity$0 = G__10813__0;
G__10813.cljs$core$IFn$_invoke$arity$1 = G__10813__1;
G__10813.cljs$core$IFn$_invoke$arity$2 = G__10813__2;
return G__10813;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__10822 = null;
var G__10822__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10822__1 = (function (result){
var G__10818 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10818) : rf.call(null,G__10818));
});
var G__10822__2 = (function (result,input){
var prior = (function (){var G__10819 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10819) : cljs.core.deref.call(null,G__10819));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__10820 = result;
var G__10821 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10820,G__10821) : rf.call(null,G__10820,G__10821));
}
});
G__10822 = function(result,input){
switch(arguments.length){
case 0:
return G__10822__0.call(this);
case 1:
return G__10822__1.call(this,result);
case 2:
return G__10822__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10822.cljs$core$IFn$_invoke$arity$0 = G__10822__0;
G__10822.cljs$core$IFn$_invoke$arity$1 = G__10822__1;
G__10822.cljs$core$IFn$_invoke$arity$2 = G__10822__2;
return G__10822;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4962__auto__ = this;
return cljs.core.es6_iterator(this__4962__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__10824_SHARP_,p2__10823_SHARP_){
var G__10826 = p2__10823_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__10826) : proc.call(null,G__10826));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj10828 = {};
return obj10828;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__3972__auto__ = x;
if(and__3972__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__3972__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__4628__auto__ = (((x == null))?null:x);
return (function (){var or__3984__auto__ = (cljs.core._clj__GT_js[(function (){var G__10832 = x__4628__auto__;
return goog.typeOf(G__10832);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__3972__auto__ = x;
if(and__3972__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__3972__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__4628__auto__ = (((x == null))?null:x);
return (function (){var or__3984__auto__ = (cljs.core._key__GT_js[(function (){var G__10836 = x__4628__auto__;
return goog.typeOf(G__10836);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__10839 = k;
if(G__10839){
var bit__4665__auto__ = null;
if(cljs.core.truth_((function (){var or__3984__auto__ = bit__4665__auto__;
if(cljs.core.truth_(or__3984__auto__)){
return or__3984__auto__;
} else {
return G__10839.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__10839.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__10839);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__10839);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__10840 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__10840) : cljs.core.clj__GT_js.call(null,G__10840));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__10856 = x;
if(G__10856){
var bit__4665__auto__ = null;
if(cljs.core.truth_((function (){var or__3984__auto__ = bit__4665__auto__;
if(cljs.core.truth_(or__3984__auto__)){
return or__3984__auto__;
} else {
return G__10856.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__10856.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__10856);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__10856);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj10858 = {};
return obj10858;
})();
var seq__10859_10869 = cljs.core.seq(x);
var chunk__10860_10870 = null;
var count__10861_10871 = (0);
var i__10862_10872 = (0);
while(true){
if((i__10862_10872 < count__10861_10871)){
var vec__10863_10873 = chunk__10860_10870.cljs$core$IIndexed$_nth$arity$2(null,i__10862_10872);
var k_10874 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10863_10873,(0),null);
var v_10875 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10863_10873,(1),null);
(m[cljs.core.key__GT_js(k_10874)] = clj__GT_js(v_10875));

var G__10876 = seq__10859_10869;
var G__10877 = chunk__10860_10870;
var G__10878 = count__10861_10871;
var G__10879 = (i__10862_10872 + (1));
seq__10859_10869 = G__10876;
chunk__10860_10870 = G__10877;
count__10861_10871 = G__10878;
i__10862_10872 = G__10879;
continue;
} else {
var temp__4126__auto___10880 = cljs.core.seq(seq__10859_10869);
if(temp__4126__auto___10880){
var seq__10859_10881__$1 = temp__4126__auto___10880;
if(cljs.core.chunked_seq_QMARK_(seq__10859_10881__$1)){
var c__4771__auto___10882 = cljs.core.chunk_first(seq__10859_10881__$1);
var G__10883 = cljs.core.chunk_rest(seq__10859_10881__$1);
var G__10884 = c__4771__auto___10882;
var G__10885 = cljs.core.count(c__4771__auto___10882);
var G__10886 = (0);
seq__10859_10869 = G__10883;
chunk__10860_10870 = G__10884;
count__10861_10871 = G__10885;
i__10862_10872 = G__10886;
continue;
} else {
var vec__10864_10887 = cljs.core.first(seq__10859_10881__$1);
var k_10888 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10864_10887,(0),null);
var v_10889 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10864_10887,(1),null);
(m[cljs.core.key__GT_js(k_10888)] = clj__GT_js(v_10889));

var G__10890 = cljs.core.next(seq__10859_10881__$1);
var G__10891 = null;
var G__10892 = (0);
var G__10893 = (0);
seq__10859_10869 = G__10890;
chunk__10860_10870 = G__10891;
count__10861_10871 = G__10892;
i__10862_10872 = G__10893;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__10865_10894 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__10866_10895 = null;
var count__10867_10896 = (0);
var i__10868_10897 = (0);
while(true){
if((i__10868_10897 < count__10867_10896)){
var x_10898__$1 = chunk__10866_10895.cljs$core$IIndexed$_nth$arity$2(null,i__10868_10897);
arr.push(x_10898__$1);

var G__10899 = seq__10865_10894;
var G__10900 = chunk__10866_10895;
var G__10901 = count__10867_10896;
var G__10902 = (i__10868_10897 + (1));
seq__10865_10894 = G__10899;
chunk__10866_10895 = G__10900;
count__10867_10896 = G__10901;
i__10868_10897 = G__10902;
continue;
} else {
var temp__4126__auto___10903 = cljs.core.seq(seq__10865_10894);
if(temp__4126__auto___10903){
var seq__10865_10904__$1 = temp__4126__auto___10903;
if(cljs.core.chunked_seq_QMARK_(seq__10865_10904__$1)){
var c__4771__auto___10905 = cljs.core.chunk_first(seq__10865_10904__$1);
var G__10906 = cljs.core.chunk_rest(seq__10865_10904__$1);
var G__10907 = c__4771__auto___10905;
var G__10908 = cljs.core.count(c__4771__auto___10905);
var G__10909 = (0);
seq__10865_10894 = G__10906;
chunk__10866_10895 = G__10907;
count__10867_10896 = G__10908;
i__10868_10897 = G__10909;
continue;
} else {
var x_10910__$1 = cljs.core.first(seq__10865_10904__$1);
arr.push(x_10910__$1);

var G__10911 = cljs.core.next(seq__10865_10904__$1);
var G__10912 = null;
var G__10913 = (0);
var G__10914 = (0);
seq__10865_10894 = G__10911;
chunk__10866_10895 = G__10912;
count__10867_10896 = G__10913;
i__10868_10897 = G__10914;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj10916 = {};
return obj10916;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__3972__auto__ = x;
if(and__3972__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__3972__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__4628__auto__ = (((x == null))?null:x);
return (function (){var or__3984__auto__ = (cljs.core._js__GT_clj[(function (){var G__10920 = x__4628__auto__;
return goog.typeOf(G__10920);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__10977__delegate = function (x,opts){
var map__10950 = opts;
var map__10950__$1 = ((cljs.core.seq_QMARK_(map__10950))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__10950):map__10950);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__10950__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__10950,map__10950__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__10966 = x__$1;
if(G__10966){
var bit__4665__auto__ = null;
if(cljs.core.truth_((function (){var or__3984__auto__ = bit__4665__auto__;
if(cljs.core.truth_(or__3984__auto__)){
return or__3984__auto__;
} else {
return G__10966.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__10966.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__10966);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__10966);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4740__auto__ = ((function (map__10950,map__10950__$1,keywordize_keys,keyfn){
return (function iter__10967(s__10968){
return (new cljs.core.LazySeq(null,((function (map__10950,map__10950__$1,keywordize_keys,keyfn){
return (function (){
var s__10968__$1 = s__10968;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__10968__$1);
if(temp__4126__auto__){
var s__10968__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__10968__$2)){
var c__4738__auto__ = cljs.core.chunk_first(s__10968__$2);
var size__4739__auto__ = cljs.core.count(c__4738__auto__);
var b__10970 = cljs.core.chunk_buffer(size__4739__auto__);
if((function (){var i__10969 = (0);
while(true){
if((i__10969 < size__4739__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4738__auto__,i__10969);
cljs.core.chunk_append(b__10970,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__10975 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__10975) : keyfn.call(null,G__10975));
})(),thisfn((x__$1[k]))], null));

var G__10978 = (i__10969 + (1));
i__10969 = G__10978;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__10970),iter__10967(cljs.core.chunk_rest(s__10968__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__10970),null);
}
} else {
var k = cljs.core.first(s__10968__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__10976 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__10976) : keyfn.call(null,G__10976));
})(),thisfn((x__$1[k]))], null),iter__10967(cljs.core.rest(s__10968__$2)));
}
} else {
return null;
}
break;
}
});})(map__10950,map__10950__$1,keywordize_keys,keyfn))
,null,null));
});})(map__10950,map__10950__$1,keywordize_keys,keyfn))
;
return iter__4740__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__10950,map__10950__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__10977 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__10979__i = 0, G__10979__a = new Array(arguments.length -  1);
while (G__10979__i < G__10979__a.length) {G__10979__a[G__10979__i] = arguments[G__10979__i + 1]; ++G__10979__i;}
  opts = new cljs.core.IndexedSeq(G__10979__a,0);
} 
return G__10977__delegate.call(this,x,opts);};
G__10977.cljs$lang$maxFixedArity = 1;
G__10977.cljs$lang$applyTo = (function (arglist__10980){
var x = cljs.core.first(arglist__10980);
var opts = cljs.core.rest(arglist__10980);
return G__10977__delegate(x,opts);
});
G__10977.cljs$core$IFn$_invoke$arity$variadic = G__10977__delegate;
return G__10977;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__10981 = null;
if (arguments.length > 1) {
var G__10982__i = 0, G__10982__a = new Array(arguments.length -  1);
while (G__10982__i < G__10982__a.length) {G__10982__a[G__10982__i] = arguments[G__10982__i + 1]; ++G__10982__i;}
G__10981 = new cljs.core.IndexedSeq(G__10982__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__10981);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__10985 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__10985) : cljs.core.atom.call(null,G__10985));
})();
return ((function (mem){
return (function() { 
var G__10987__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__10986 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10986) : cljs.core.deref.call(null,G__10986));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__10987 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__10988__i = 0, G__10988__a = new Array(arguments.length -  0);
while (G__10988__i < G__10988__a.length) {G__10988__a[G__10988__i] = arguments[G__10988__i + 0]; ++G__10988__i;}
  args = new cljs.core.IndexedSeq(G__10988__a,0);
} 
return G__10987__delegate.call(this,args);};
G__10987.cljs$lang$maxFixedArity = 0;
G__10987.cljs$lang$applyTo = (function (arglist__10989){
var args = cljs.core.seq(arglist__10989);
return G__10987__delegate(args);
});
G__10987.cljs$core$IFn$_invoke$arity$variadic = G__10987__delegate;
return G__10987;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__10991 = ret;
f = G__10991;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__10992__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__10992 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__10993__i = 0, G__10993__a = new Array(arguments.length -  1);
while (G__10993__i < G__10993__a.length) {G__10993__a[G__10993__i] = arguments[G__10993__i + 1]; ++G__10993__i;}
  args = new cljs.core.IndexedSeq(G__10993__a,0);
} 
return G__10992__delegate.call(this,f,args);};
G__10992.cljs$lang$maxFixedArity = 1;
G__10992.cljs$lang$applyTo = (function (arglist__10994){
var f = cljs.core.first(arglist__10994);
var args = cljs.core.rest(arglist__10994);
return G__10992__delegate(f,args);
});
G__10992.cljs$core$IFn$_invoke$arity$variadic = G__10992__delegate;
return G__10992;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__10995 = null;
if (arguments.length > 1) {
var G__10996__i = 0, G__10996__a = new Array(arguments.length -  1);
while (G__10996__i < G__10996__a.length) {G__10996__a[G__10996__i] = arguments[G__10996__i + 1]; ++G__10996__i;}
G__10995 = new cljs.core.IndexedSeq(G__10996__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__10995);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__10999 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__10999) : Math.floor.call(null,G__10999));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__11001 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11001) : f.call(null,G__11001));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__11003 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__11003) : cljs.core.atom.call(null,G__11003));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__11004__i = 0, G__11004__a = new Array(arguments.length -  1);
while (G__11004__i < G__11004__a.length) {G__11004__a[G__11004__i] = arguments[G__11004__i + 1]; ++G__11004__i;}
  args = new cljs.core.IndexedSeq(G__11004__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__11005){
var f = cljs.core.first(arglist__11005);
var args = cljs.core.rest(arglist__11005);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__11070 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11070) : cljs.core.deref.call(null,G__11070));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__3984__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
var and__3972__auto__ = cljs.core.vector_QMARK_(parent);
if(and__3972__auto__){
var and__3972__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__3972__auto____$1){
var and__3972__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__3972__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__11095 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__11093 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__11093) : child.call(null,G__11093));
})(),(function (){var G__11094 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__11094) : parent.call(null,G__11094));
})());
var G__11096 = (i + (1));
ret = G__11095;
i = G__11096;
continue;
}
break;
}
} else {
return and__3972__auto____$2;
}
} else {
return and__3972__auto____$1;
}
} else {
return and__3972__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__11100 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11100) : cljs.core.deref.call(null,G__11100));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__11104 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11104) : cljs.core.deref.call(null,G__11104));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__11108 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11108) : cljs.core.deref.call(null,G__11108));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__11117 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__11117) : targets.call(null,G__11117));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__11118 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__11118) : sources.call(null,G__11118));
})()));
});})(tp,td,ta))
;
var or__3984__auto__ = ((cljs.core.contains_QMARK_((function (){var G__11122 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__11122) : tp.call(null,G__11122));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__11123 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__11123) : ta.call(null,G__11123));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__11124 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__11124) : ta.call(null,G__11124));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__3984__auto__)){
return or__3984__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__11131 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__11131) : parentMap.call(null,G__11131));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__11132 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__11132) : parentMap.call(null,G__11132));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__11125_SHARP_){
return cljs.core.cons(cljs.core.first(p1__11125_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__11125_SHARP_),cljs.core.second(p1__11125_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__11133 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__11133) : parentMap.call(null,G__11133));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__11126_SHARP_,p2__11127_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__11126_SHARP_,p2__11127_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__11136 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11136) : cljs.core.deref.call(null,G__11136));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__11137 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11137) : cljs.core.deref.call(null,G__11137));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__11153 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11153) : cljs.core.deref.call(null,G__11153));
})().call(null,x);
var or__3984__auto__ = (cljs.core.truth_((function (){var and__3972__auto__ = xprefs;
if(cljs.core.truth_(and__3972__auto__)){
var G__11155 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__11155) : xprefs.call(null,G__11155));
} else {
return and__3972__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__3984__auto__)){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__11156 = cljs.core.rest(ps);
ps = G__11156;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3984__auto____$1)){
return or__3984__auto____$1;
} else {
var or__3984__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__11157 = cljs.core.rest(ps);
ps = G__11157;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3984__auto____$2)){
return or__3984__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__3984__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__3984__auto__)){
return or__3984__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__11171){
var vec__11172 = p__11171;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11172,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11172,(1),null);
var e = vec__11172;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__11173 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11173) : cljs.core.deref.call(null,G__11173));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__3984__auto__ = (be == null);
if(or__3984__auto__){
return or__3984__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__11174 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11174) : cljs.core.deref.call(null,G__11174));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__11175 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11175) : cljs.core.deref.call(null,G__11175));
})(),(function (){var G__11176 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11176) : cljs.core.deref.call(null,G__11176));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj11178 = {};
return obj11178;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__3972__auto__ = mf;
if(and__3972__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__3972__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__4628__auto__ = (((mf == null))?null:mf);
return (function (){var or__3984__auto__ = (cljs.core._reset[(function (){var G__11182 = x__4628__auto__;
return goog.typeOf(G__11182);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._reset["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__3972__auto__ = mf;
if(and__3972__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__3972__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__4628__auto__ = (((mf == null))?null:mf);
return (function (){var or__3984__auto__ = (cljs.core._add_method[(function (){var G__11186 = x__4628__auto__;
return goog.typeOf(G__11186);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._add_method["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__3972__auto__ = mf;
if(and__3972__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__3972__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__4628__auto__ = (((mf == null))?null:mf);
return (function (){var or__3984__auto__ = (cljs.core._remove_method[(function (){var G__11190 = x__4628__auto__;
return goog.typeOf(G__11190);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._remove_method["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__3972__auto__ = mf;
if(and__3972__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__3972__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__4628__auto__ = (((mf == null))?null:mf);
return (function (){var or__3984__auto__ = (cljs.core._prefer_method[(function (){var G__11194 = x__4628__auto__;
return goog.typeOf(G__11194);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__3972__auto__ = mf;
if(and__3972__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__3972__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__4628__auto__ = (((mf == null))?null:mf);
return (function (){var or__3984__auto__ = (cljs.core._get_method[(function (){var G__11198 = x__4628__auto__;
return goog.typeOf(G__11198);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._get_method["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__3972__auto__ = mf;
if(and__3972__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__3972__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__4628__auto__ = (((mf == null))?null:mf);
return (function (){var or__3984__auto__ = (cljs.core._methods[(function (){var G__11202 = x__4628__auto__;
return goog.typeOf(G__11202);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._methods["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__3972__auto__ = mf;
if(and__3972__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__3972__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__4628__auto__ = (((mf == null))?null:mf);
return (function (){var or__3984__auto__ = (cljs.core._prefers[(function (){var G__11206 = x__4628__auto__;
return goog.typeOf(G__11206);
})()]);
if(or__3984__auto__){
return or__3984__auto__;
} else {
var or__3984__auto____$1 = (cljs.core._prefers["_"]);
if(or__3984__auto____$1){
return or__3984__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__11208 = this$__$1;
return goog.getUid(G__11208);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__11209 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11209) : cljs.core.deref.call(null,G__11209));
})(),(function (){var G__11210 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11210) : cljs.core.deref.call(null,G__11210));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__11211 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11211) : cljs.core.deref.call(null,G__11211));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__11212 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11212) : cljs.core.deref.call(null,G__11212));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__11213 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11213) : cljs.core.deref.call(null,G__11213));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__11214 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11214) : cljs.core.deref.call(null,G__11214));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__12055 = null;
var G__12055__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__12055__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11215 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__11215) : self__.dispatch_fn.call(null,G__11215));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11216 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__11216) : target_fn.call(null,G__11216));
});
var G__12055__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11217 = a;
var G__11218 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__11217,G__11218) : self__.dispatch_fn.call(null,G__11217,G__11218));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11219 = a;
var G__11220 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__11219,G__11220) : target_fn.call(null,G__11219,G__11220));
});
var G__12055__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11221 = a;
var G__11222 = b;
var G__11223 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__11221,G__11222,G__11223) : self__.dispatch_fn.call(null,G__11221,G__11222,G__11223));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11224 = a;
var G__11225 = b;
var G__11226 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__11224,G__11225,G__11226) : target_fn.call(null,G__11224,G__11225,G__11226));
});
var G__12055__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11227 = a;
var G__11228 = b;
var G__11229 = c;
var G__11230 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__11227,G__11228,G__11229,G__11230) : self__.dispatch_fn.call(null,G__11227,G__11228,G__11229,G__11230));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11231 = a;
var G__11232 = b;
var G__11233 = c;
var G__11234 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__11231,G__11232,G__11233,G__11234) : target_fn.call(null,G__11231,G__11232,G__11233,G__11234));
});
var G__12055__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11235 = a;
var G__11236 = b;
var G__11237 = c;
var G__11238 = d;
var G__11239 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__11235,G__11236,G__11237,G__11238,G__11239) : self__.dispatch_fn.call(null,G__11235,G__11236,G__11237,G__11238,G__11239));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11240 = a;
var G__11241 = b;
var G__11242 = c;
var G__11243 = d;
var G__11244 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__11240,G__11241,G__11242,G__11243,G__11244) : target_fn.call(null,G__11240,G__11241,G__11242,G__11243,G__11244));
});
var G__12055__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11245 = a;
var G__11246 = b;
var G__11247 = c;
var G__11248 = d;
var G__11249 = e;
var G__11250 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__11245,G__11246,G__11247,G__11248,G__11249,G__11250) : self__.dispatch_fn.call(null,G__11245,G__11246,G__11247,G__11248,G__11249,G__11250));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11251 = a;
var G__11252 = b;
var G__11253 = c;
var G__11254 = d;
var G__11255 = e;
var G__11256 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__11251,G__11252,G__11253,G__11254,G__11255,G__11256) : target_fn.call(null,G__11251,G__11252,G__11253,G__11254,G__11255,G__11256));
});
var G__12055__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11257 = a;
var G__11258 = b;
var G__11259 = c;
var G__11260 = d;
var G__11261 = e;
var G__11262 = f;
var G__11263 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__11257,G__11258,G__11259,G__11260,G__11261,G__11262,G__11263) : self__.dispatch_fn.call(null,G__11257,G__11258,G__11259,G__11260,G__11261,G__11262,G__11263));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11264 = a;
var G__11265 = b;
var G__11266 = c;
var G__11267 = d;
var G__11268 = e;
var G__11269 = f;
var G__11270 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__11264,G__11265,G__11266,G__11267,G__11268,G__11269,G__11270) : target_fn.call(null,G__11264,G__11265,G__11266,G__11267,G__11268,G__11269,G__11270));
});
var G__12055__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11271 = a;
var G__11272 = b;
var G__11273 = c;
var G__11274 = d;
var G__11275 = e;
var G__11276 = f;
var G__11277 = g;
var G__11278 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__11271,G__11272,G__11273,G__11274,G__11275,G__11276,G__11277,G__11278) : self__.dispatch_fn.call(null,G__11271,G__11272,G__11273,G__11274,G__11275,G__11276,G__11277,G__11278));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11279 = a;
var G__11280 = b;
var G__11281 = c;
var G__11282 = d;
var G__11283 = e;
var G__11284 = f;
var G__11285 = g;
var G__11286 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__11279,G__11280,G__11281,G__11282,G__11283,G__11284,G__11285,G__11286) : target_fn.call(null,G__11279,G__11280,G__11281,G__11282,G__11283,G__11284,G__11285,G__11286));
});
var G__12055__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11287 = a;
var G__11288 = b;
var G__11289 = c;
var G__11290 = d;
var G__11291 = e;
var G__11292 = f;
var G__11293 = g;
var G__11294 = h;
var G__11295 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__11287,G__11288,G__11289,G__11290,G__11291,G__11292,G__11293,G__11294,G__11295) : self__.dispatch_fn.call(null,G__11287,G__11288,G__11289,G__11290,G__11291,G__11292,G__11293,G__11294,G__11295));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11296 = a;
var G__11297 = b;
var G__11298 = c;
var G__11299 = d;
var G__11300 = e;
var G__11301 = f;
var G__11302 = g;
var G__11303 = h;
var G__11304 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__11296,G__11297,G__11298,G__11299,G__11300,G__11301,G__11302,G__11303,G__11304) : target_fn.call(null,G__11296,G__11297,G__11298,G__11299,G__11300,G__11301,G__11302,G__11303,G__11304));
});
var G__12055__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11305 = a;
var G__11306 = b;
var G__11307 = c;
var G__11308 = d;
var G__11309 = e;
var G__11310 = f;
var G__11311 = g;
var G__11312 = h;
var G__11313 = i;
var G__11314 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__11305,G__11306,G__11307,G__11308,G__11309,G__11310,G__11311,G__11312,G__11313,G__11314) : self__.dispatch_fn.call(null,G__11305,G__11306,G__11307,G__11308,G__11309,G__11310,G__11311,G__11312,G__11313,G__11314));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11315 = a;
var G__11316 = b;
var G__11317 = c;
var G__11318 = d;
var G__11319 = e;
var G__11320 = f;
var G__11321 = g;
var G__11322 = h;
var G__11323 = i;
var G__11324 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__11315,G__11316,G__11317,G__11318,G__11319,G__11320,G__11321,G__11322,G__11323,G__11324) : target_fn.call(null,G__11315,G__11316,G__11317,G__11318,G__11319,G__11320,G__11321,G__11322,G__11323,G__11324));
});
var G__12055__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11325 = a;
var G__11326 = b;
var G__11327 = c;
var G__11328 = d;
var G__11329 = e;
var G__11330 = f;
var G__11331 = g;
var G__11332 = h;
var G__11333 = i;
var G__11334 = j;
var G__11335 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__11325,G__11326,G__11327,G__11328,G__11329,G__11330,G__11331,G__11332,G__11333,G__11334,G__11335) : self__.dispatch_fn.call(null,G__11325,G__11326,G__11327,G__11328,G__11329,G__11330,G__11331,G__11332,G__11333,G__11334,G__11335));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11336 = a;
var G__11337 = b;
var G__11338 = c;
var G__11339 = d;
var G__11340 = e;
var G__11341 = f;
var G__11342 = g;
var G__11343 = h;
var G__11344 = i;
var G__11345 = j;
var G__11346 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__11336,G__11337,G__11338,G__11339,G__11340,G__11341,G__11342,G__11343,G__11344,G__11345,G__11346) : target_fn.call(null,G__11336,G__11337,G__11338,G__11339,G__11340,G__11341,G__11342,G__11343,G__11344,G__11345,G__11346));
});
var G__12055__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11347 = a;
var G__11348 = b;
var G__11349 = c;
var G__11350 = d;
var G__11351 = e;
var G__11352 = f;
var G__11353 = g;
var G__11354 = h;
var G__11355 = i;
var G__11356 = j;
var G__11357 = k;
var G__11358 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__11347,G__11348,G__11349,G__11350,G__11351,G__11352,G__11353,G__11354,G__11355,G__11356,G__11357,G__11358) : self__.dispatch_fn.call(null,G__11347,G__11348,G__11349,G__11350,G__11351,G__11352,G__11353,G__11354,G__11355,G__11356,G__11357,G__11358));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11359 = a;
var G__11360 = b;
var G__11361 = c;
var G__11362 = d;
var G__11363 = e;
var G__11364 = f;
var G__11365 = g;
var G__11366 = h;
var G__11367 = i;
var G__11368 = j;
var G__11369 = k;
var G__11370 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__11359,G__11360,G__11361,G__11362,G__11363,G__11364,G__11365,G__11366,G__11367,G__11368,G__11369,G__11370) : target_fn.call(null,G__11359,G__11360,G__11361,G__11362,G__11363,G__11364,G__11365,G__11366,G__11367,G__11368,G__11369,G__11370));
});
var G__12055__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11371 = a;
var G__11372 = b;
var G__11373 = c;
var G__11374 = d;
var G__11375 = e;
var G__11376 = f;
var G__11377 = g;
var G__11378 = h;
var G__11379 = i;
var G__11380 = j;
var G__11381 = k;
var G__11382 = l;
var G__11383 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__11371,G__11372,G__11373,G__11374,G__11375,G__11376,G__11377,G__11378,G__11379,G__11380,G__11381,G__11382,G__11383) : self__.dispatch_fn.call(null,G__11371,G__11372,G__11373,G__11374,G__11375,G__11376,G__11377,G__11378,G__11379,G__11380,G__11381,G__11382,G__11383));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11384 = a;
var G__11385 = b;
var G__11386 = c;
var G__11387 = d;
var G__11388 = e;
var G__11389 = f;
var G__11390 = g;
var G__11391 = h;
var G__11392 = i;
var G__11393 = j;
var G__11394 = k;
var G__11395 = l;
var G__11396 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__11384,G__11385,G__11386,G__11387,G__11388,G__11389,G__11390,G__11391,G__11392,G__11393,G__11394,G__11395,G__11396) : target_fn.call(null,G__11384,G__11385,G__11386,G__11387,G__11388,G__11389,G__11390,G__11391,G__11392,G__11393,G__11394,G__11395,G__11396));
});
var G__12055__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11397 = a;
var G__11398 = b;
var G__11399 = c;
var G__11400 = d;
var G__11401 = e;
var G__11402 = f;
var G__11403 = g;
var G__11404 = h;
var G__11405 = i;
var G__11406 = j;
var G__11407 = k;
var G__11408 = l;
var G__11409 = m;
var G__11410 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__11397,G__11398,G__11399,G__11400,G__11401,G__11402,G__11403,G__11404,G__11405,G__11406,G__11407,G__11408,G__11409,G__11410) : self__.dispatch_fn.call(null,G__11397,G__11398,G__11399,G__11400,G__11401,G__11402,G__11403,G__11404,G__11405,G__11406,G__11407,G__11408,G__11409,G__11410));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11411 = a;
var G__11412 = b;
var G__11413 = c;
var G__11414 = d;
var G__11415 = e;
var G__11416 = f;
var G__11417 = g;
var G__11418 = h;
var G__11419 = i;
var G__11420 = j;
var G__11421 = k;
var G__11422 = l;
var G__11423 = m;
var G__11424 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__11411,G__11412,G__11413,G__11414,G__11415,G__11416,G__11417,G__11418,G__11419,G__11420,G__11421,G__11422,G__11423,G__11424) : target_fn.call(null,G__11411,G__11412,G__11413,G__11414,G__11415,G__11416,G__11417,G__11418,G__11419,G__11420,G__11421,G__11422,G__11423,G__11424));
});
var G__12055__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11425 = a;
var G__11426 = b;
var G__11427 = c;
var G__11428 = d;
var G__11429 = e;
var G__11430 = f;
var G__11431 = g;
var G__11432 = h;
var G__11433 = i;
var G__11434 = j;
var G__11435 = k;
var G__11436 = l;
var G__11437 = m;
var G__11438 = n;
var G__11439 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__11425,G__11426,G__11427,G__11428,G__11429,G__11430,G__11431,G__11432,G__11433,G__11434,G__11435,G__11436,G__11437,G__11438,G__11439) : self__.dispatch_fn.call(null,G__11425,G__11426,G__11427,G__11428,G__11429,G__11430,G__11431,G__11432,G__11433,G__11434,G__11435,G__11436,G__11437,G__11438,G__11439));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11440 = a;
var G__11441 = b;
var G__11442 = c;
var G__11443 = d;
var G__11444 = e;
var G__11445 = f;
var G__11446 = g;
var G__11447 = h;
var G__11448 = i;
var G__11449 = j;
var G__11450 = k;
var G__11451 = l;
var G__11452 = m;
var G__11453 = n;
var G__11454 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__11440,G__11441,G__11442,G__11443,G__11444,G__11445,G__11446,G__11447,G__11448,G__11449,G__11450,G__11451,G__11452,G__11453,G__11454) : target_fn.call(null,G__11440,G__11441,G__11442,G__11443,G__11444,G__11445,G__11446,G__11447,G__11448,G__11449,G__11450,G__11451,G__11452,G__11453,G__11454));
});
var G__12055__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11455 = a;
var G__11456 = b;
var G__11457 = c;
var G__11458 = d;
var G__11459 = e;
var G__11460 = f;
var G__11461 = g;
var G__11462 = h;
var G__11463 = i;
var G__11464 = j;
var G__11465 = k;
var G__11466 = l;
var G__11467 = m;
var G__11468 = n;
var G__11469 = o;
var G__11470 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__11455,G__11456,G__11457,G__11458,G__11459,G__11460,G__11461,G__11462,G__11463,G__11464,G__11465,G__11466,G__11467,G__11468,G__11469,G__11470) : self__.dispatch_fn.call(null,G__11455,G__11456,G__11457,G__11458,G__11459,G__11460,G__11461,G__11462,G__11463,G__11464,G__11465,G__11466,G__11467,G__11468,G__11469,G__11470));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11471 = a;
var G__11472 = b;
var G__11473 = c;
var G__11474 = d;
var G__11475 = e;
var G__11476 = f;
var G__11477 = g;
var G__11478 = h;
var G__11479 = i;
var G__11480 = j;
var G__11481 = k;
var G__11482 = l;
var G__11483 = m;
var G__11484 = n;
var G__11485 = o;
var G__11486 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__11471,G__11472,G__11473,G__11474,G__11475,G__11476,G__11477,G__11478,G__11479,G__11480,G__11481,G__11482,G__11483,G__11484,G__11485,G__11486) : target_fn.call(null,G__11471,G__11472,G__11473,G__11474,G__11475,G__11476,G__11477,G__11478,G__11479,G__11480,G__11481,G__11482,G__11483,G__11484,G__11485,G__11486));
});
var G__12055__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11487 = a;
var G__11488 = b;
var G__11489 = c;
var G__11490 = d;
var G__11491 = e;
var G__11492 = f;
var G__11493 = g;
var G__11494 = h;
var G__11495 = i;
var G__11496 = j;
var G__11497 = k;
var G__11498 = l;
var G__11499 = m;
var G__11500 = n;
var G__11501 = o;
var G__11502 = p;
var G__11503 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__11487,G__11488,G__11489,G__11490,G__11491,G__11492,G__11493,G__11494,G__11495,G__11496,G__11497,G__11498,G__11499,G__11500,G__11501,G__11502,G__11503) : self__.dispatch_fn.call(null,G__11487,G__11488,G__11489,G__11490,G__11491,G__11492,G__11493,G__11494,G__11495,G__11496,G__11497,G__11498,G__11499,G__11500,G__11501,G__11502,G__11503));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11504 = a;
var G__11505 = b;
var G__11506 = c;
var G__11507 = d;
var G__11508 = e;
var G__11509 = f;
var G__11510 = g;
var G__11511 = h;
var G__11512 = i;
var G__11513 = j;
var G__11514 = k;
var G__11515 = l;
var G__11516 = m;
var G__11517 = n;
var G__11518 = o;
var G__11519 = p;
var G__11520 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__11504,G__11505,G__11506,G__11507,G__11508,G__11509,G__11510,G__11511,G__11512,G__11513,G__11514,G__11515,G__11516,G__11517,G__11518,G__11519,G__11520) : target_fn.call(null,G__11504,G__11505,G__11506,G__11507,G__11508,G__11509,G__11510,G__11511,G__11512,G__11513,G__11514,G__11515,G__11516,G__11517,G__11518,G__11519,G__11520));
});
var G__12055__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11521 = a;
var G__11522 = b;
var G__11523 = c;
var G__11524 = d;
var G__11525 = e;
var G__11526 = f;
var G__11527 = g;
var G__11528 = h;
var G__11529 = i;
var G__11530 = j;
var G__11531 = k;
var G__11532 = l;
var G__11533 = m;
var G__11534 = n;
var G__11535 = o;
var G__11536 = p;
var G__11537 = q;
var G__11538 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__11521,G__11522,G__11523,G__11524,G__11525,G__11526,G__11527,G__11528,G__11529,G__11530,G__11531,G__11532,G__11533,G__11534,G__11535,G__11536,G__11537,G__11538) : self__.dispatch_fn.call(null,G__11521,G__11522,G__11523,G__11524,G__11525,G__11526,G__11527,G__11528,G__11529,G__11530,G__11531,G__11532,G__11533,G__11534,G__11535,G__11536,G__11537,G__11538));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11539 = a;
var G__11540 = b;
var G__11541 = c;
var G__11542 = d;
var G__11543 = e;
var G__11544 = f;
var G__11545 = g;
var G__11546 = h;
var G__11547 = i;
var G__11548 = j;
var G__11549 = k;
var G__11550 = l;
var G__11551 = m;
var G__11552 = n;
var G__11553 = o;
var G__11554 = p;
var G__11555 = q;
var G__11556 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__11539,G__11540,G__11541,G__11542,G__11543,G__11544,G__11545,G__11546,G__11547,G__11548,G__11549,G__11550,G__11551,G__11552,G__11553,G__11554,G__11555,G__11556) : target_fn.call(null,G__11539,G__11540,G__11541,G__11542,G__11543,G__11544,G__11545,G__11546,G__11547,G__11548,G__11549,G__11550,G__11551,G__11552,G__11553,G__11554,G__11555,G__11556));
});
var G__12055__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11557 = a;
var G__11558 = b;
var G__11559 = c;
var G__11560 = d;
var G__11561 = e;
var G__11562 = f;
var G__11563 = g;
var G__11564 = h;
var G__11565 = i;
var G__11566 = j;
var G__11567 = k;
var G__11568 = l;
var G__11569 = m;
var G__11570 = n;
var G__11571 = o;
var G__11572 = p;
var G__11573 = q;
var G__11574 = r;
var G__11575 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__11557,G__11558,G__11559,G__11560,G__11561,G__11562,G__11563,G__11564,G__11565,G__11566,G__11567,G__11568,G__11569,G__11570,G__11571,G__11572,G__11573,G__11574,G__11575) : self__.dispatch_fn.call(null,G__11557,G__11558,G__11559,G__11560,G__11561,G__11562,G__11563,G__11564,G__11565,G__11566,G__11567,G__11568,G__11569,G__11570,G__11571,G__11572,G__11573,G__11574,G__11575));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11576 = a;
var G__11577 = b;
var G__11578 = c;
var G__11579 = d;
var G__11580 = e;
var G__11581 = f;
var G__11582 = g;
var G__11583 = h;
var G__11584 = i;
var G__11585 = j;
var G__11586 = k;
var G__11587 = l;
var G__11588 = m;
var G__11589 = n;
var G__11590 = o;
var G__11591 = p;
var G__11592 = q;
var G__11593 = r;
var G__11594 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__11576,G__11577,G__11578,G__11579,G__11580,G__11581,G__11582,G__11583,G__11584,G__11585,G__11586,G__11587,G__11588,G__11589,G__11590,G__11591,G__11592,G__11593,G__11594) : target_fn.call(null,G__11576,G__11577,G__11578,G__11579,G__11580,G__11581,G__11582,G__11583,G__11584,G__11585,G__11586,G__11587,G__11588,G__11589,G__11590,G__11591,G__11592,G__11593,G__11594));
});
var G__12055__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11595 = a;
var G__11596 = b;
var G__11597 = c;
var G__11598 = d;
var G__11599 = e;
var G__11600 = f;
var G__11601 = g;
var G__11602 = h;
var G__11603 = i;
var G__11604 = j;
var G__11605 = k;
var G__11606 = l;
var G__11607 = m;
var G__11608 = n;
var G__11609 = o;
var G__11610 = p;
var G__11611 = q;
var G__11612 = r;
var G__11613 = s;
var G__11614 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__11595,G__11596,G__11597,G__11598,G__11599,G__11600,G__11601,G__11602,G__11603,G__11604,G__11605,G__11606,G__11607,G__11608,G__11609,G__11610,G__11611,G__11612,G__11613,G__11614) : self__.dispatch_fn.call(null,G__11595,G__11596,G__11597,G__11598,G__11599,G__11600,G__11601,G__11602,G__11603,G__11604,G__11605,G__11606,G__11607,G__11608,G__11609,G__11610,G__11611,G__11612,G__11613,G__11614));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11615 = a;
var G__11616 = b;
var G__11617 = c;
var G__11618 = d;
var G__11619 = e;
var G__11620 = f;
var G__11621 = g;
var G__11622 = h;
var G__11623 = i;
var G__11624 = j;
var G__11625 = k;
var G__11626 = l;
var G__11627 = m;
var G__11628 = n;
var G__11629 = o;
var G__11630 = p;
var G__11631 = q;
var G__11632 = r;
var G__11633 = s;
var G__11634 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__11615,G__11616,G__11617,G__11618,G__11619,G__11620,G__11621,G__11622,G__11623,G__11624,G__11625,G__11626,G__11627,G__11628,G__11629,G__11630,G__11631,G__11632,G__11633,G__11634) : target_fn.call(null,G__11615,G__11616,G__11617,G__11618,G__11619,G__11620,G__11621,G__11622,G__11623,G__11624,G__11625,G__11626,G__11627,G__11628,G__11629,G__11630,G__11631,G__11632,G__11633,G__11634));
});
var G__12055__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__12055 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__12055__1.call(this,self__);
case 2:
return G__12055__2.call(this,self__,a);
case 3:
return G__12055__3.call(this,self__,a,b);
case 4:
return G__12055__4.call(this,self__,a,b,c);
case 5:
return G__12055__5.call(this,self__,a,b,c,d);
case 6:
return G__12055__6.call(this,self__,a,b,c,d,e);
case 7:
return G__12055__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__12055__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__12055__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__12055__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__12055__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__12055__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__12055__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__12055__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__12055__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__12055__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__12055__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__12055__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__12055__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__12055__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__12055__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__12055__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12055.cljs$core$IFn$_invoke$arity$1 = G__12055__1;
G__12055.cljs$core$IFn$_invoke$arity$2 = G__12055__2;
G__12055.cljs$core$IFn$_invoke$arity$3 = G__12055__3;
G__12055.cljs$core$IFn$_invoke$arity$4 = G__12055__4;
G__12055.cljs$core$IFn$_invoke$arity$5 = G__12055__5;
G__12055.cljs$core$IFn$_invoke$arity$6 = G__12055__6;
G__12055.cljs$core$IFn$_invoke$arity$7 = G__12055__7;
G__12055.cljs$core$IFn$_invoke$arity$8 = G__12055__8;
G__12055.cljs$core$IFn$_invoke$arity$9 = G__12055__9;
G__12055.cljs$core$IFn$_invoke$arity$10 = G__12055__10;
G__12055.cljs$core$IFn$_invoke$arity$11 = G__12055__11;
G__12055.cljs$core$IFn$_invoke$arity$12 = G__12055__12;
G__12055.cljs$core$IFn$_invoke$arity$13 = G__12055__13;
G__12055.cljs$core$IFn$_invoke$arity$14 = G__12055__14;
G__12055.cljs$core$IFn$_invoke$arity$15 = G__12055__15;
G__12055.cljs$core$IFn$_invoke$arity$16 = G__12055__16;
G__12055.cljs$core$IFn$_invoke$arity$17 = G__12055__17;
G__12055.cljs$core$IFn$_invoke$arity$18 = G__12055__18;
G__12055.cljs$core$IFn$_invoke$arity$19 = G__12055__19;
G__12055.cljs$core$IFn$_invoke$arity$20 = G__12055__20;
G__12055.cljs$core$IFn$_invoke$arity$21 = G__12055__21;
G__12055.cljs$core$IFn$_invoke$arity$22 = G__12055__22;
return G__12055;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args11207){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11207)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11635 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__11635) : self__.dispatch_fn.call(null,G__11635));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11636 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__11636) : target_fn.call(null,G__11636));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11637 = a;
var G__11638 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__11637,G__11638) : self__.dispatch_fn.call(null,G__11637,G__11638));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11639 = a;
var G__11640 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__11639,G__11640) : target_fn.call(null,G__11639,G__11640));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11641 = a;
var G__11642 = b;
var G__11643 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__11641,G__11642,G__11643) : self__.dispatch_fn.call(null,G__11641,G__11642,G__11643));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11644 = a;
var G__11645 = b;
var G__11646 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__11644,G__11645,G__11646) : target_fn.call(null,G__11644,G__11645,G__11646));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11647 = a;
var G__11648 = b;
var G__11649 = c;
var G__11650 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__11647,G__11648,G__11649,G__11650) : self__.dispatch_fn.call(null,G__11647,G__11648,G__11649,G__11650));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11651 = a;
var G__11652 = b;
var G__11653 = c;
var G__11654 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__11651,G__11652,G__11653,G__11654) : target_fn.call(null,G__11651,G__11652,G__11653,G__11654));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11655 = a;
var G__11656 = b;
var G__11657 = c;
var G__11658 = d;
var G__11659 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__11655,G__11656,G__11657,G__11658,G__11659) : self__.dispatch_fn.call(null,G__11655,G__11656,G__11657,G__11658,G__11659));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11660 = a;
var G__11661 = b;
var G__11662 = c;
var G__11663 = d;
var G__11664 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__11660,G__11661,G__11662,G__11663,G__11664) : target_fn.call(null,G__11660,G__11661,G__11662,G__11663,G__11664));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11665 = a;
var G__11666 = b;
var G__11667 = c;
var G__11668 = d;
var G__11669 = e;
var G__11670 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__11665,G__11666,G__11667,G__11668,G__11669,G__11670) : self__.dispatch_fn.call(null,G__11665,G__11666,G__11667,G__11668,G__11669,G__11670));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11671 = a;
var G__11672 = b;
var G__11673 = c;
var G__11674 = d;
var G__11675 = e;
var G__11676 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__11671,G__11672,G__11673,G__11674,G__11675,G__11676) : target_fn.call(null,G__11671,G__11672,G__11673,G__11674,G__11675,G__11676));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11677 = a;
var G__11678 = b;
var G__11679 = c;
var G__11680 = d;
var G__11681 = e;
var G__11682 = f;
var G__11683 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__11677,G__11678,G__11679,G__11680,G__11681,G__11682,G__11683) : self__.dispatch_fn.call(null,G__11677,G__11678,G__11679,G__11680,G__11681,G__11682,G__11683));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11684 = a;
var G__11685 = b;
var G__11686 = c;
var G__11687 = d;
var G__11688 = e;
var G__11689 = f;
var G__11690 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__11684,G__11685,G__11686,G__11687,G__11688,G__11689,G__11690) : target_fn.call(null,G__11684,G__11685,G__11686,G__11687,G__11688,G__11689,G__11690));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11691 = a;
var G__11692 = b;
var G__11693 = c;
var G__11694 = d;
var G__11695 = e;
var G__11696 = f;
var G__11697 = g;
var G__11698 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__11691,G__11692,G__11693,G__11694,G__11695,G__11696,G__11697,G__11698) : self__.dispatch_fn.call(null,G__11691,G__11692,G__11693,G__11694,G__11695,G__11696,G__11697,G__11698));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11699 = a;
var G__11700 = b;
var G__11701 = c;
var G__11702 = d;
var G__11703 = e;
var G__11704 = f;
var G__11705 = g;
var G__11706 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__11699,G__11700,G__11701,G__11702,G__11703,G__11704,G__11705,G__11706) : target_fn.call(null,G__11699,G__11700,G__11701,G__11702,G__11703,G__11704,G__11705,G__11706));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11707 = a;
var G__11708 = b;
var G__11709 = c;
var G__11710 = d;
var G__11711 = e;
var G__11712 = f;
var G__11713 = g;
var G__11714 = h;
var G__11715 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__11707,G__11708,G__11709,G__11710,G__11711,G__11712,G__11713,G__11714,G__11715) : self__.dispatch_fn.call(null,G__11707,G__11708,G__11709,G__11710,G__11711,G__11712,G__11713,G__11714,G__11715));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11716 = a;
var G__11717 = b;
var G__11718 = c;
var G__11719 = d;
var G__11720 = e;
var G__11721 = f;
var G__11722 = g;
var G__11723 = h;
var G__11724 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__11716,G__11717,G__11718,G__11719,G__11720,G__11721,G__11722,G__11723,G__11724) : target_fn.call(null,G__11716,G__11717,G__11718,G__11719,G__11720,G__11721,G__11722,G__11723,G__11724));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11725 = a;
var G__11726 = b;
var G__11727 = c;
var G__11728 = d;
var G__11729 = e;
var G__11730 = f;
var G__11731 = g;
var G__11732 = h;
var G__11733 = i;
var G__11734 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__11725,G__11726,G__11727,G__11728,G__11729,G__11730,G__11731,G__11732,G__11733,G__11734) : self__.dispatch_fn.call(null,G__11725,G__11726,G__11727,G__11728,G__11729,G__11730,G__11731,G__11732,G__11733,G__11734));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11735 = a;
var G__11736 = b;
var G__11737 = c;
var G__11738 = d;
var G__11739 = e;
var G__11740 = f;
var G__11741 = g;
var G__11742 = h;
var G__11743 = i;
var G__11744 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__11735,G__11736,G__11737,G__11738,G__11739,G__11740,G__11741,G__11742,G__11743,G__11744) : target_fn.call(null,G__11735,G__11736,G__11737,G__11738,G__11739,G__11740,G__11741,G__11742,G__11743,G__11744));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11745 = a;
var G__11746 = b;
var G__11747 = c;
var G__11748 = d;
var G__11749 = e;
var G__11750 = f;
var G__11751 = g;
var G__11752 = h;
var G__11753 = i;
var G__11754 = j;
var G__11755 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__11745,G__11746,G__11747,G__11748,G__11749,G__11750,G__11751,G__11752,G__11753,G__11754,G__11755) : self__.dispatch_fn.call(null,G__11745,G__11746,G__11747,G__11748,G__11749,G__11750,G__11751,G__11752,G__11753,G__11754,G__11755));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11756 = a;
var G__11757 = b;
var G__11758 = c;
var G__11759 = d;
var G__11760 = e;
var G__11761 = f;
var G__11762 = g;
var G__11763 = h;
var G__11764 = i;
var G__11765 = j;
var G__11766 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__11756,G__11757,G__11758,G__11759,G__11760,G__11761,G__11762,G__11763,G__11764,G__11765,G__11766) : target_fn.call(null,G__11756,G__11757,G__11758,G__11759,G__11760,G__11761,G__11762,G__11763,G__11764,G__11765,G__11766));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11767 = a;
var G__11768 = b;
var G__11769 = c;
var G__11770 = d;
var G__11771 = e;
var G__11772 = f;
var G__11773 = g;
var G__11774 = h;
var G__11775 = i;
var G__11776 = j;
var G__11777 = k;
var G__11778 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__11767,G__11768,G__11769,G__11770,G__11771,G__11772,G__11773,G__11774,G__11775,G__11776,G__11777,G__11778) : self__.dispatch_fn.call(null,G__11767,G__11768,G__11769,G__11770,G__11771,G__11772,G__11773,G__11774,G__11775,G__11776,G__11777,G__11778));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11779 = a;
var G__11780 = b;
var G__11781 = c;
var G__11782 = d;
var G__11783 = e;
var G__11784 = f;
var G__11785 = g;
var G__11786 = h;
var G__11787 = i;
var G__11788 = j;
var G__11789 = k;
var G__11790 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__11779,G__11780,G__11781,G__11782,G__11783,G__11784,G__11785,G__11786,G__11787,G__11788,G__11789,G__11790) : target_fn.call(null,G__11779,G__11780,G__11781,G__11782,G__11783,G__11784,G__11785,G__11786,G__11787,G__11788,G__11789,G__11790));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11791 = a;
var G__11792 = b;
var G__11793 = c;
var G__11794 = d;
var G__11795 = e;
var G__11796 = f;
var G__11797 = g;
var G__11798 = h;
var G__11799 = i;
var G__11800 = j;
var G__11801 = k;
var G__11802 = l;
var G__11803 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__11791,G__11792,G__11793,G__11794,G__11795,G__11796,G__11797,G__11798,G__11799,G__11800,G__11801,G__11802,G__11803) : self__.dispatch_fn.call(null,G__11791,G__11792,G__11793,G__11794,G__11795,G__11796,G__11797,G__11798,G__11799,G__11800,G__11801,G__11802,G__11803));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11804 = a;
var G__11805 = b;
var G__11806 = c;
var G__11807 = d;
var G__11808 = e;
var G__11809 = f;
var G__11810 = g;
var G__11811 = h;
var G__11812 = i;
var G__11813 = j;
var G__11814 = k;
var G__11815 = l;
var G__11816 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__11804,G__11805,G__11806,G__11807,G__11808,G__11809,G__11810,G__11811,G__11812,G__11813,G__11814,G__11815,G__11816) : target_fn.call(null,G__11804,G__11805,G__11806,G__11807,G__11808,G__11809,G__11810,G__11811,G__11812,G__11813,G__11814,G__11815,G__11816));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11817 = a;
var G__11818 = b;
var G__11819 = c;
var G__11820 = d;
var G__11821 = e;
var G__11822 = f;
var G__11823 = g;
var G__11824 = h;
var G__11825 = i;
var G__11826 = j;
var G__11827 = k;
var G__11828 = l;
var G__11829 = m;
var G__11830 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__11817,G__11818,G__11819,G__11820,G__11821,G__11822,G__11823,G__11824,G__11825,G__11826,G__11827,G__11828,G__11829,G__11830) : self__.dispatch_fn.call(null,G__11817,G__11818,G__11819,G__11820,G__11821,G__11822,G__11823,G__11824,G__11825,G__11826,G__11827,G__11828,G__11829,G__11830));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11831 = a;
var G__11832 = b;
var G__11833 = c;
var G__11834 = d;
var G__11835 = e;
var G__11836 = f;
var G__11837 = g;
var G__11838 = h;
var G__11839 = i;
var G__11840 = j;
var G__11841 = k;
var G__11842 = l;
var G__11843 = m;
var G__11844 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__11831,G__11832,G__11833,G__11834,G__11835,G__11836,G__11837,G__11838,G__11839,G__11840,G__11841,G__11842,G__11843,G__11844) : target_fn.call(null,G__11831,G__11832,G__11833,G__11834,G__11835,G__11836,G__11837,G__11838,G__11839,G__11840,G__11841,G__11842,G__11843,G__11844));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11845 = a;
var G__11846 = b;
var G__11847 = c;
var G__11848 = d;
var G__11849 = e;
var G__11850 = f;
var G__11851 = g;
var G__11852 = h;
var G__11853 = i;
var G__11854 = j;
var G__11855 = k;
var G__11856 = l;
var G__11857 = m;
var G__11858 = n;
var G__11859 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__11845,G__11846,G__11847,G__11848,G__11849,G__11850,G__11851,G__11852,G__11853,G__11854,G__11855,G__11856,G__11857,G__11858,G__11859) : self__.dispatch_fn.call(null,G__11845,G__11846,G__11847,G__11848,G__11849,G__11850,G__11851,G__11852,G__11853,G__11854,G__11855,G__11856,G__11857,G__11858,G__11859));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11860 = a;
var G__11861 = b;
var G__11862 = c;
var G__11863 = d;
var G__11864 = e;
var G__11865 = f;
var G__11866 = g;
var G__11867 = h;
var G__11868 = i;
var G__11869 = j;
var G__11870 = k;
var G__11871 = l;
var G__11872 = m;
var G__11873 = n;
var G__11874 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__11860,G__11861,G__11862,G__11863,G__11864,G__11865,G__11866,G__11867,G__11868,G__11869,G__11870,G__11871,G__11872,G__11873,G__11874) : target_fn.call(null,G__11860,G__11861,G__11862,G__11863,G__11864,G__11865,G__11866,G__11867,G__11868,G__11869,G__11870,G__11871,G__11872,G__11873,G__11874));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11875 = a;
var G__11876 = b;
var G__11877 = c;
var G__11878 = d;
var G__11879 = e;
var G__11880 = f;
var G__11881 = g;
var G__11882 = h;
var G__11883 = i;
var G__11884 = j;
var G__11885 = k;
var G__11886 = l;
var G__11887 = m;
var G__11888 = n;
var G__11889 = o;
var G__11890 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__11875,G__11876,G__11877,G__11878,G__11879,G__11880,G__11881,G__11882,G__11883,G__11884,G__11885,G__11886,G__11887,G__11888,G__11889,G__11890) : self__.dispatch_fn.call(null,G__11875,G__11876,G__11877,G__11878,G__11879,G__11880,G__11881,G__11882,G__11883,G__11884,G__11885,G__11886,G__11887,G__11888,G__11889,G__11890));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11891 = a;
var G__11892 = b;
var G__11893 = c;
var G__11894 = d;
var G__11895 = e;
var G__11896 = f;
var G__11897 = g;
var G__11898 = h;
var G__11899 = i;
var G__11900 = j;
var G__11901 = k;
var G__11902 = l;
var G__11903 = m;
var G__11904 = n;
var G__11905 = o;
var G__11906 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__11891,G__11892,G__11893,G__11894,G__11895,G__11896,G__11897,G__11898,G__11899,G__11900,G__11901,G__11902,G__11903,G__11904,G__11905,G__11906) : target_fn.call(null,G__11891,G__11892,G__11893,G__11894,G__11895,G__11896,G__11897,G__11898,G__11899,G__11900,G__11901,G__11902,G__11903,G__11904,G__11905,G__11906));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11907 = a;
var G__11908 = b;
var G__11909 = c;
var G__11910 = d;
var G__11911 = e;
var G__11912 = f;
var G__11913 = g;
var G__11914 = h;
var G__11915 = i;
var G__11916 = j;
var G__11917 = k;
var G__11918 = l;
var G__11919 = m;
var G__11920 = n;
var G__11921 = o;
var G__11922 = p;
var G__11923 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__11907,G__11908,G__11909,G__11910,G__11911,G__11912,G__11913,G__11914,G__11915,G__11916,G__11917,G__11918,G__11919,G__11920,G__11921,G__11922,G__11923) : self__.dispatch_fn.call(null,G__11907,G__11908,G__11909,G__11910,G__11911,G__11912,G__11913,G__11914,G__11915,G__11916,G__11917,G__11918,G__11919,G__11920,G__11921,G__11922,G__11923));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11924 = a;
var G__11925 = b;
var G__11926 = c;
var G__11927 = d;
var G__11928 = e;
var G__11929 = f;
var G__11930 = g;
var G__11931 = h;
var G__11932 = i;
var G__11933 = j;
var G__11934 = k;
var G__11935 = l;
var G__11936 = m;
var G__11937 = n;
var G__11938 = o;
var G__11939 = p;
var G__11940 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__11924,G__11925,G__11926,G__11927,G__11928,G__11929,G__11930,G__11931,G__11932,G__11933,G__11934,G__11935,G__11936,G__11937,G__11938,G__11939,G__11940) : target_fn.call(null,G__11924,G__11925,G__11926,G__11927,G__11928,G__11929,G__11930,G__11931,G__11932,G__11933,G__11934,G__11935,G__11936,G__11937,G__11938,G__11939,G__11940));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11941 = a;
var G__11942 = b;
var G__11943 = c;
var G__11944 = d;
var G__11945 = e;
var G__11946 = f;
var G__11947 = g;
var G__11948 = h;
var G__11949 = i;
var G__11950 = j;
var G__11951 = k;
var G__11952 = l;
var G__11953 = m;
var G__11954 = n;
var G__11955 = o;
var G__11956 = p;
var G__11957 = q;
var G__11958 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__11941,G__11942,G__11943,G__11944,G__11945,G__11946,G__11947,G__11948,G__11949,G__11950,G__11951,G__11952,G__11953,G__11954,G__11955,G__11956,G__11957,G__11958) : self__.dispatch_fn.call(null,G__11941,G__11942,G__11943,G__11944,G__11945,G__11946,G__11947,G__11948,G__11949,G__11950,G__11951,G__11952,G__11953,G__11954,G__11955,G__11956,G__11957,G__11958));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11959 = a;
var G__11960 = b;
var G__11961 = c;
var G__11962 = d;
var G__11963 = e;
var G__11964 = f;
var G__11965 = g;
var G__11966 = h;
var G__11967 = i;
var G__11968 = j;
var G__11969 = k;
var G__11970 = l;
var G__11971 = m;
var G__11972 = n;
var G__11973 = o;
var G__11974 = p;
var G__11975 = q;
var G__11976 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__11959,G__11960,G__11961,G__11962,G__11963,G__11964,G__11965,G__11966,G__11967,G__11968,G__11969,G__11970,G__11971,G__11972,G__11973,G__11974,G__11975,G__11976) : target_fn.call(null,G__11959,G__11960,G__11961,G__11962,G__11963,G__11964,G__11965,G__11966,G__11967,G__11968,G__11969,G__11970,G__11971,G__11972,G__11973,G__11974,G__11975,G__11976));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11977 = a;
var G__11978 = b;
var G__11979 = c;
var G__11980 = d;
var G__11981 = e;
var G__11982 = f;
var G__11983 = g;
var G__11984 = h;
var G__11985 = i;
var G__11986 = j;
var G__11987 = k;
var G__11988 = l;
var G__11989 = m;
var G__11990 = n;
var G__11991 = o;
var G__11992 = p;
var G__11993 = q;
var G__11994 = r;
var G__11995 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__11977,G__11978,G__11979,G__11980,G__11981,G__11982,G__11983,G__11984,G__11985,G__11986,G__11987,G__11988,G__11989,G__11990,G__11991,G__11992,G__11993,G__11994,G__11995) : self__.dispatch_fn.call(null,G__11977,G__11978,G__11979,G__11980,G__11981,G__11982,G__11983,G__11984,G__11985,G__11986,G__11987,G__11988,G__11989,G__11990,G__11991,G__11992,G__11993,G__11994,G__11995));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11996 = a;
var G__11997 = b;
var G__11998 = c;
var G__11999 = d;
var G__12000 = e;
var G__12001 = f;
var G__12002 = g;
var G__12003 = h;
var G__12004 = i;
var G__12005 = j;
var G__12006 = k;
var G__12007 = l;
var G__12008 = m;
var G__12009 = n;
var G__12010 = o;
var G__12011 = p;
var G__12012 = q;
var G__12013 = r;
var G__12014 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__11996,G__11997,G__11998,G__11999,G__12000,G__12001,G__12002,G__12003,G__12004,G__12005,G__12006,G__12007,G__12008,G__12009,G__12010,G__12011,G__12012,G__12013,G__12014) : target_fn.call(null,G__11996,G__11997,G__11998,G__11999,G__12000,G__12001,G__12002,G__12003,G__12004,G__12005,G__12006,G__12007,G__12008,G__12009,G__12010,G__12011,G__12012,G__12013,G__12014));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12015 = a;
var G__12016 = b;
var G__12017 = c;
var G__12018 = d;
var G__12019 = e;
var G__12020 = f;
var G__12021 = g;
var G__12022 = h;
var G__12023 = i;
var G__12024 = j;
var G__12025 = k;
var G__12026 = l;
var G__12027 = m;
var G__12028 = n;
var G__12029 = o;
var G__12030 = p;
var G__12031 = q;
var G__12032 = r;
var G__12033 = s;
var G__12034 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__12015,G__12016,G__12017,G__12018,G__12019,G__12020,G__12021,G__12022,G__12023,G__12024,G__12025,G__12026,G__12027,G__12028,G__12029,G__12030,G__12031,G__12032,G__12033,G__12034) : self__.dispatch_fn.call(null,G__12015,G__12016,G__12017,G__12018,G__12019,G__12020,G__12021,G__12022,G__12023,G__12024,G__12025,G__12026,G__12027,G__12028,G__12029,G__12030,G__12031,G__12032,G__12033,G__12034));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12035 = a;
var G__12036 = b;
var G__12037 = c;
var G__12038 = d;
var G__12039 = e;
var G__12040 = f;
var G__12041 = g;
var G__12042 = h;
var G__12043 = i;
var G__12044 = j;
var G__12045 = k;
var G__12046 = l;
var G__12047 = m;
var G__12048 = n;
var G__12049 = o;
var G__12050 = p;
var G__12051 = q;
var G__12052 = r;
var G__12053 = s;
var G__12054 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__12035,G__12036,G__12037,G__12038,G__12039,G__12040,G__12041,G__12042,G__12043,G__12044,G__12045,G__12046,G__12047,G__12048,G__12049,G__12050,G__12051,G__12052,G__12053,G__12054) : target_fn.call(null,G__12035,G__12036,G__12037,G__12038,G__12039,G__12040,G__12041,G__12042,G__12043,G__12044,G__12045,G__12046,G__12047,G__12048,G__12049,G__12050,G__12051,G__12052,G__12053,G__12054));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__12056 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__12056);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__4571__auto__,writer__4572__auto__,opt__4573__auto__){
return cljs.core._write(writer__4572__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__12061 = msg;
return Error(G__12061);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__12066 = x;
var G__12067 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__12066,G__12067) : pred.call(null,G__12066,G__12067));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__12068 = y;
var G__12069 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__12068,G__12069) : pred.call(null,G__12068,G__12069));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});
